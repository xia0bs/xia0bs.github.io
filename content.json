{"meta":{"title":"Yanng","subtitle":null,"description":"Yep!","author":"Yanng","url":"https://blog.yanng.io","root":"/"},"pages":[{"title":"about","date":"2018-07-05T10:49:38.000Z","updated":"2018-07-05T10:49:38.000Z","comments":true,"path":"about/index.html","permalink":"https://blog.yanng.io/about/index.html","excerpt":"","text":""},{"title":"Project","date":"2017-12-08T07:43:16.000Z","updated":"2018-07-05T10:20:27.000Z","comments":false,"path":"project/index.html","permalink":"https://blog.yanng.io/project/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-07-05T10:48:31.000Z","updated":"2018-07-05T10:48:31.000Z","comments":true,"path":"tags/index.html","permalink":"https://blog.yanng.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"webpack：从入门到真实项目配置","slug":"webpack：从入门到真实项目配置","date":"2019-01-21T14:43:57.000Z","updated":"2019-02-27T15:35:35.000Z","comments":true,"path":"2019/01/21/webpack：从入门到真实项目配置/","link":"","permalink":"https://blog.yanng.io/2019/01/21/webpack%EF%BC%9A%E4%BB%8E%E5%85%A5%E9%97%A8%E5%88%B0%E7%9C%9F%E5%AE%9E%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AE/","excerpt":"","text":"该文使用的 Webpack 版本为 3.6.0，本文分两部分。第一步是简单的使用 webpack，第二部分通过一个真实项目来配置 webpack，没有使用任何的 CLI，都是一步步配置直到完成生产代码的打包。这是本项目对应的仓库，每个小节基本都对应了一次 commit。 这是本文的大纲，如果觉得有兴趣你就可以往下看了 Webpack 到底是什么自从出现模块化以后，大家可以将原本一坨代码分离到个个模块中，但是由此引发了一个问题。每个 JS 文件都需要从服务器去拿，由此会导致加载速度变慢。Webpack 最主要的目的就是为了解决这个问题，将所有小文件打包成一个或多个大文件，官网的图片很好的诠释了这个事情，除此之外，Webpack 也是一个能让你使用各种前端新技术的工具。 简单使用安装在命令行中依次输入 mkdir webpack-demo cd webpack-demo // 创建 package.json，这里会问一些问题，直接回车跳过就行 npm init // 推荐这个安装方式，当然你也安装在全局环境下 // 这种安装方式会将 webpack 放入 devDependencies 依赖中 npm install --save-dev webpack然后按照下图创建文件 在以下文件写入代码 // sum.js // 这个模块化写法是 node 环境独有的，浏览器原生不支持使用 module.exports = function(a, b) { return a + b } // index.js var sum = require(&apos;./sum&apos;) console.log(sum(1, 2)) &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;title&gt;Document&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=&quot;app&quot;&gt;&lt;/div&gt; &lt;script src=&quot;./build/bundle.js&quot;&gt;&lt;/script&gt; &lt;/body&gt; &lt;/html&gt;现在我们开始配置最简单的 webpack，首先创建 webpack.config.js 文件，然后写入如下代码 // 自带的库 const path = require(&apos;path&apos;) module.exports = { entry: &apos;./app/index.js&apos;, // 入口文件 output: { path: path.resolve(__dirname, &apos;build&apos;), // 必须使用绝对地址，输出文件夹 filename: &apos;bundle.js&apos;, // 打包后输出文件的文件名 }, }现在我们可以开始使用 webpack 了，在命令行中输入 node_modules/.bin/webpack没问题的话你应该可以看到类似的样子 可以发现原本两个 JS 文件只有 100B，但是打包后却增长到 2.66KB，这之中 webpack 肯定做了什么事情，我们去 bundle.js 文件中看看。 把代码简化以后，核心思路是这样的 var array = [ function() { var sum = array[1] console.log(sum(1, 2)) }, function(a, b) { return a + b }, ] array[0]() // -&gt; 3因为 module.export 浏览器是不支持的，所以 webpack 将代码改成浏览器能识别的样子。现在将 index.html 文件在浏览器中打开，应该也可以看到正确的 log。 我们之前是在文件夹中安装的 webpack，每次要输入 node_modules/.bin/webpack 过于繁琐，可以在 package.json 如下修改 &quot;scripts&quot;: { &quot;start&quot;: &quot;webpack&quot; },然后再次执行 npm run start，可以发现和之前的效果是相同的。简单的使用到此为止，接下来我们来探索 webpack 更多的功能。 LoaderLoader 是 webpack 一个很强大功能，这个功能可以让你使用很多新的技术。 BabelBabel 可以让你使用 ES2015/16/17 写代码而不用顾忌浏览器的问题，Babel 可以帮你转换代码。首先安装必要的几个 Babel 库 npm i --save-dev babel-loader babel-core babel-preset-env先介绍下我们安装的三个库 babel-loader 用于让 webpack 知道如何运行 babel babel-core 可以看做编译器，这个库知道如何解析代码 babel-preset-env 这个库可以根据环境的不同转换代码 接下来更改 webpack-config.js 中的代码 module.exports = { // ...... module: { rules: [ { // js 文件才使用 babel test: /\\.js$/, // 使用哪个 loader use: &apos;babel-loader&apos;, // 不包括路径 exclude: /node_modules/, }, ], }, }配置 Babel 有很多方式，这里推荐使用 .babelrc 文件管理。 // ..babelrc { &quot;presets&quot;: [&quot;babel-preset-env&quot;] }现在将之前 JS 的代码改成 ES6 的写法 // sum.js export default (a, b) =&gt; { return a + b } // index.js import sum from &apos;./sum&apos; console.log(sum(1, 2))执行 npm run start，再观察 bundle.js 中的代码，可以发现代码被转换过了，并且同样可以正常 输出 3。 当然 Babel 远不止这些功能，有兴趣的可以前往官网自己探索。 处理图片这一小节我们将使用 url-loader 和 file-loader，这两个库不仅可以处理图片，还有其他的功能，有兴趣的可以自行学习。 先安装库 npm i --save-dev url-loader file-loader创建一个 images 文件夹，放入两张图片，并且在 app 文件夹下创建一个 js 文件处理图片 ，目前的文件夹结构如图 // addImage.js let smallImg = document.createElement(&apos;img&apos;) // 必须 require 进来 smallImg.src = require(&apos;../images/small.jpeg&apos;) document.body.appendChild(smallImg) let bigImg = document.createElement(&apos;img&apos;) bigImg.src = require(&apos;../images/big.jpeg&apos;) document.body.appendChild(bigImg)接下来修改 webpack.config.js 代码 module.exports = { // ... module: { rules: [ // ... { // 图片格式正则 test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/, use: [ { loader: &apos;url-loader&apos;, // 配置 url-loader 的可选项 options: { // 限制 图片大小 10000B，小于限制会将图片转换为 base64格式 limit: 10000, // 超出限制，创建的文件格式 // build/images/[图片名].[hash].[图片格式] name: &apos;images/[name].[hash].[ext]&apos;, }, }, ], }, ], }, }运行 npm run start，打包成功如下图 可以发现大的图片被单独提取了出来，小的图片打包进了 bundle.js 中。 在浏览器中打开 HTML 文件，发现小图确实显示出来了，但是却没有看到大图，打开开发者工具栏，可以发现我们大图的图片路径是有问题的，所以我们又要修改 webpack.config.js 代码了。 module.exports = { entry: &apos;./app/index.js&apos;, // 入口文件 output: { path: path.resolve(__dirname, &apos;build&apos;), // 必须使用绝对地址，输出文件夹 filename: &apos;bundle.js&apos;, // 打包后输出文件的文件名 publicPath: &apos;build/&apos;, // 知道如何寻找资源 }, // ... }最后运行下 npm run start，编译成功了，再次刷新下页面，可以发现这次大图被正确的显示了。下一小节我们将介绍如何处理 CSS 文件。 处理 CSS 文件添加 styles 文件夹，新增 addImage.css 文件，然后在该文件中新增代码 img { border: 5px black solid; } .test { border: 5px black solid; }这一小节我们先使用 css-loader 和 style-loader 库。前者可以让 CSS 文件也支持 impost，并且会解析 CSS 文件，后者可以将解析出来的 CSS 通过标签的形式插入到 HTML 中，所以后面依赖前者。 npm i --save-dev css-loader style-loader首先修改 addImage.js 文件 import &apos;../styles/addImage.css&apos; let smallImg = document.createElement(&apos;img&apos;) smallImg.src = require(&apos;../images/small.jpeg&apos;) document.body.appendChild(smallImg) // let bigImg = document.createElement(&apos;img&apos;) // bigImg.src = require(&apos;../images/big.jpeg&apos;) // document.body.appendChild(bigImg)然后修改 webpack.config.js 代码 module.exports = { // ... module: { rules: [ { test: /\\.css$/, use: [ &apos;style-loader&apos;, { loader: &apos;css-loader&apos;, options: { modules: true, }, }, ], }, ], }, }运行下 npm run start，然后刷新页面，可以发现图片被正确的加上了边框，现在我们来看一下 HTML 的文件结构 从上图可以看到，我们在 addImage.css 文件中写的代码被加入到了 style 标签中，并且因为我们开启了 CSS 模块化的选项，所以 .test 被转成了唯一的哈希值，这样就解决了 CSS 的变量名重复问题。 但是将 CSS 代码整合进 JS 文件也是有弊端的，大量的 CSS 代码会造成 JS 文件的大小变大，操作 DOM 也会造成性能上的问题，所以接下来我们将使用 extract-text-webpack-plugin 插件将 CSS 文件打包为一个单独文件 首先安装 npm i --save-dev extract-text-webpack-plugin 然后修改 webpack.config.js 代码 const ExtractTextPlugin = require(&quot;extract-text-webpack-plugin&quot;) module.exports = { // .... module: { rules: [ { test: /\\.css$/, // 写法和之前基本一致 loader: ExtractTextPlugin.extract({ // 必须这样写，否则会报错 fallback: &apos;style-loader&apos;, use: [{ loader: &apos;css-loader&apos;, options: { modules: true } }] }) ] } ] }, // 插件列表 plugins: [ // 输出的文件路径 new ExtractTextPlugin(&quot;css/[name].[hash].css&quot;) ] }运行下 npm run start，可以发现 CSS 文件被单独打包出来了 但是这时候刷新页面会发现图片的边框消失了，那是因为我们的 HTML 文件没有引用新的 CSS 文件，所以这里需要我们手动引入下，在下面的章节我们会通过插件的方式自动引入新的文件。 接下来，会用一个项目来继续我们的 webpack 学习，在这之前，先 clone 一下项目。该项目原地址是 这里，因为使用的 webpack 版本太低，并且依赖的库也有点问题，故我将项目拷贝了过来并修改了几个库的版本号。 请依次按照以下代码操作 git clone https://github.com/KieSun/webpack-demo.git cd webpack-demo // 切换到 0.1 标签上并创建一个新分支 git checkout -b demo 0.1 cd project npm i // 查看分支是否为 demo，没问题的话就可以进行下一步如何在项目中使用 webpack项目中已经配置了很简单的 babel 和 webpack，直接运行 npm run build 即可 这时候你会发现这个 bundle.js 居然有这么大，这肯定是不能接受的，所以接下来章节的主要目的就是将单个文件拆分为多个文件，优化项目。 分离代码先让我们考虑下缓存机制。对于代码中依赖的库很少会去主动升级版本，但是我们自己的代码却每时每刻都在变更，所以我们可以考虑将依赖的库和自己的代码分割开来，这样用户在下一次使用应用时就可以尽量避免重复下载没有变更的代码，那么既然要将依赖代码提取出来，我们需要变更下入口和出口的部分代码。 // 这是 packet.json 中 dependencies 下的 const VENOR = [ &apos;faker&apos;, &apos;lodash&apos;, &apos;react&apos;, &apos;react-dom&apos;, &apos;react-input-range&apos;, &apos;react-redux&apos;, &apos;redux&apos;, &apos;redux-form&apos;, &apos;redux-thunk&apos;, ] module.exports = { // 之前我们都是使用了单文件入口 // entry 同时也支持多文件入口，现在我们有两个入口 // 一个是我们自己的代码，一个是依赖库的代码 entry: { // bundle 和 vendor 都是自己随便取名的，会映射到 [name] 中 bundle: &apos;./src/index.js&apos;, vendor: VENOR, }, output: { path: path.join(__dirname, &apos;dist&apos;), filename: &apos;[name].js&apos;, }, // ... }现在我们 build 一下，看看是否有惊喜出现 真的有惊喜。。为什么 bundle 文件大小压根没变。这是因为 bundle 中也引入了依赖库的代码,刚才的步骤并没有抽取 bundle 中引入的代码，接下来让我们学习如何将共同的代码抽取出来。 抽取共同代码在这小节我们使用 webpack 自带的插件 CommonsChunkPlugin。 module.exports = { //... output: { path: path.join(__dirname, &apos;dist&apos;), // 既然我们希望缓存生效，就应该每次在更改代码以后修改文件名 // [chunkhash]会自动根据文件是否更改而更换哈希 filename: &apos;[name].[chunkhash].js&apos;, }, plugins: [ new webpack.optimize.CommonsChunkPlugin({ // vendor 的意义和之前相同 // manifest文件是将每次打包都会更改的东西单独提取出来，保证没有更改的代码无需重新打包，这样可以加快打包速度 names: [&apos;vendor&apos;, &apos;manifest&apos;], // 配合 manifest 文件使用 minChunks: Infinity, }), ], }当我们重新 build 以后，会发现 bundle 文件很明显的减小了体积 但是我们使用哈希来保证缓存的同时会发现每次 build 都会生成不一样的文件，这时候我们引入另一个插件来帮助我们删除不需要的文件。 npm install --save-dev clean-webpack-plugin然后修改配置文件 module.exports = { //... plugins: [ // 只删除 dist 文件夹下的 bundle 和 manifest 文件 new CleanWebpackPlugin([&apos;dist/bundle.*.js&apos;, &apos;dist/manifest.*.js&apos;], { // 打印 log verbose: true, // 删除文件 dry: false, }), ], }然后 build 的时候会发现以上文件被删除了。 因为我们现在将文件已经打包成三个 JS 了，以后也许会更多，每次新增 JS 文件我们都需要手动在 HTML 中新增标签，现在我们可以通过一个插件来自动完成这个功能。 npm install html-webpack-plugin --save-dev然后修改配置文件 module.exports = { //... plugins: [ // 我们这里将之前的 HTML 文件当做模板 // 注意在之前 HTML 文件中请务必删除之前引入的 JS 文件 new HtmlWebpackPlugin({ template: &apos;index.html&apos;, }), ], }执行 build 操作会发现同时生成了 HTML 文件，并且已经自动引入了 JS 文件 按需加载代码在这一小节我们将学习如何按需加载代码，在这之前的 vendor 入口我发现忘记加入 router 这个库了，大家可以加入这个库并且重新 build 下，会发现 bundle 只有不到 300KB 了。 现在我们的 bundle 文件包含了我们全部的自己代码。但是当用户访问我们的首页时，其实我们根本无需让用户加载除了首页以外的代码，这个优化我们可以通过路由的异步加载来完成。 现在修改 src/router.js // 注意在最新版的 V4路由版本中，更改了按需加载的方式，如果安装了 V4版，可以自行前往官网学习 import React from &apos;react&apos; import { Router, Route, IndexRoute, hashHistory } from &apos;react-router&apos; import Home from &apos;./components/Home&apos; import ArtistMain from &apos;./components/artists/ArtistMain&apos; const rootRoute = { component: Home, path: &apos;/&apos;, indexRoute: { component: ArtistMain }, childRoutes: [ { path: &apos;artists/new&apos;, getComponent(location, cb) { System.import(&apos;./components/artists/ArtistCreate&apos;).then(module =&gt; cb(null, module.default) ) }, }, { path: &apos;artists/:id/edit&apos;, getComponent(location, cb) { System.import(&apos;./components/artists/ArtistEdit&apos;).then(module =&gt; cb(null, module.default) ) }, }, { path: &apos;artists/:id&apos;, getComponent(location, cb) { System.import(&apos;./components/artists/ArtistDetail&apos;).then(module =&gt; cb(null, module.default) ) }, }, ], } const Routes = () =&gt; { return &lt;Router history={hashHistory} routes={rootRoute} /&gt; } export default Routes然后执行 build 命令，可以发现我们的 bundle 文件又瘦身了，并且新增了几个文件 将 HTML 文件在浏览器中打开，当点击路由跳转时，可以在开发者工具中的 Network 一栏中看到加载了一个 JS 文件。 首页 点击右上角 Random Artist 以后 自动刷新每次更新代码都需要执行依次 build，并且还要等上一会很麻烦，这一小节介绍如何使用自动刷新的功能。 首先安装插件 npm i --save-dev webpack-dev-server然后修改 packet.json 文件 &quot;scripts&quot;: { &quot;build&quot;: &quot;webpack&quot;, &quot;dev&quot;: &quot;webpack-dev-server --open&quot; },现在直接执行 npm run dev 可以发现浏览器自动打开了一个空的页面，并且在命令行中也多了新的输出 等待编译完成以后，修改 JS 或者 CSS 文件，可以发现 webpack 自动帮我们完成了编译，并且只更新了需要更新的代码 但是每次重新刷新页面对于 debug 来说很不友好，这时候就需要用到模块热替换了。但是因为项目中使用了 React，并且 Vue 或者其他框架都有自己的一套 hot-loader，所以这里就略过了，有兴趣的可以自己学习下。 生成生产环境代码现在我们可以将之前所学和一些新加的插件整合在一起，build 生产环境代码。 npm i --save-dev url-loader optimize-css-assets-webpack-plugin file-loader extract-text-webpack-plugin修改 webpack 配置 var webpack = require(&apos;webpack&apos;) var path = require(&apos;path&apos;) var HtmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;) var CleanWebpackPlugin = require(&apos;clean-webpack-plugin&apos;) var ExtractTextPlugin = require(&apos;extract-text-webpack-plugin&apos;) var OptimizeCSSPlugin = require(&apos;optimize-css-assets-webpack-plugin&apos;) const VENOR = [ &apos;faker&apos;, &apos;lodash&apos;, &apos;react&apos;, &apos;react-dom&apos;, &apos;react-input-range&apos;, &apos;react-redux&apos;, &apos;redux&apos;, &apos;redux-form&apos;, &apos;redux-thunk&apos;, &apos;react-router&apos;, ] module.exports = { entry: { bundle: &apos;./src/index.js&apos;, vendor: VENOR, }, // 如果想修改 webpack-dev-server 配置，在这个对象里面修改 devServer: { port: 8081, }, output: { path: path.join(__dirname, &apos;dist&apos;), filename: &apos;[name].[chunkhash].js&apos;, }, module: { rules: [ { test: /\\.js$/, use: &apos;babel-loader&apos;, }, { test: /\\.(png|jpe?g|gif|svg)(\\?.*)?$/, use: [ { loader: &apos;url-loader&apos;, options: { limit: 10000, name: &apos;images/[name].[hash:7].[ext]&apos;, }, }, ], }, { test: /\\.css$/, loader: ExtractTextPlugin.extract({ fallback: &apos;style-loader&apos;, use: [ { // 这边其实还可以使用 postcss 先处理下 CSS 代码 loader: &apos;css-loader&apos;, }, ], }), }, ], }, plugins: [ new webpack.optimize.CommonsChunkPlugin({ name: [&apos;vendor&apos;, &apos;manifest&apos;], minChunks: Infinity, }), new CleanWebpackPlugin([&apos;dist/*.js&apos;], { verbose: true, dry: false, }), new HtmlWebpackPlugin({ template: &apos;index.html&apos;, }), // 生成全局变量 new webpack.DefinePlugin({ &apos;process.env.NODE_ENV&apos;: JSON.stringify(&apos;process.env.NODE_ENV&apos;), }), // 分离 CSS 代码 new ExtractTextPlugin(&apos;css/[name].[contenthash].css&apos;), // 压缩提取出的 CSS，并解决ExtractTextPlugin分离出的 JS 重复问题 new OptimizeCSSPlugin({ cssProcessorOptions: { safe: true, }, }), // 压缩 JS 代码 new webpack.optimize.UglifyJsPlugin({ compress: { warnings: false, }, }), ], }修改 packet.json 文件 &quot;scripts&quot;: { &quot;build&quot;: &quot;NODE_ENV=production webpack -p&quot;, &quot;dev&quot;: &quot;webpack-dev-server --open&quot; }执行 npm run build 可以看到我们在经历了这么多步以后，将 bundle 缩小到了只有 27.1KB，像 vendor 这种常用的库我们一般可以使用 CDN 的方式外链进来。 补充webpack 配置上有些实用的小点在上文没有提到，统一在这里提一下。 module.exports = { resolve: { // 文件扩展名，写明以后就不需要每个文件写后缀 extensions: [&apos;.js&apos;, &apos;.css&apos;, &apos;.json&apos;], // 路径别名，比如这里可以使用 css 指向 static/css 路径 alias: { &apos;@&apos;: resolve(&apos;src&apos;), css: resolve(&apos;static/css&apos;), }, }, // 生成 source-map，用于打断点，这里有好几个选项 devtool: &apos;#cheap-module-eval-source-map&apos;, }后记如果你是跟着本文一个个步骤敲下来的，那么大部分的 webpack 配置你应该都是可以看懂了，并且自己应该也知道如何去配置。谢谢大家看到这里，这是本项目对应的仓库，每个小节基本都对应了一次 commit。 文章较长，有错误也难免，如果你发现了任何问题或者我有任何表述的不明白的地方，都可以留言给我。","categories":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"深入理解 ES6","slug":"深入理解 ES6","date":"2018-12-12T14:43:57.000Z","updated":"2019-02-27T15:34:35.000Z","comments":true,"path":"2018/12/12/深入理解 ES6/","link":"","permalink":"https://blog.yanng.io/2018/12/12/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%20ES6/","excerpt":"","text":"本文篇幅较长，有兴趣的可以先收藏再看。本文将重要的 ES6 特性介绍了一遍，并且详细解释了一些重难点。 let &amp;&amp; constlet 与 var 的声明用法相同，但是多了一个临时死区（Temporal Distonrtion Zone）的概念。 console.log(a) // -&gt; undefined var a = 1 console.log(b) // -&gt; Uncaught ReferenceError: b is not defined let b = 1可以发现在声明前使用 let 声明的变量会导致报错，这解决了 JS 很多奇怪的问题。并且使用 let 会生成一个块级作用域，作用域外不能访问该变量。 { let a = 1 var b = 1 } console.log(b) // -&gt; 1 console.log(a) // -&gt; Uncaught ReferenceError: b is not defined在 JS 中，声明变量都会提升，不论用什么关键字声明。当使用 let 时变量也会被提升至块级作用域的顶部，但是只提升声明，不提升初始化。并且会产生临时死区，该区域会存放变量，直到执行过声明语句后，方可使用该变量。 在循环中 let 会与前面有些不同，每次迭代都会产生一个新的变量，并用之前的值初始化，如何理解这句话呢，请看以下代码。 for(let i = 0; i &lt; 10; i++) { console.log(i) // -&gt; 输入 0 - 9 } // 上面的循环代码可以这样看 { // 形成块级作用域 let i = 0 { let ii = i console.log(ii) } i++ { let ii = i console.log(ii) } i++ { let ii = i console.log(ii) } ... }const 与 let 基本类似，只是用 const 声明必须赋值，并且不得修改绑定，什么意思呢，请看代码。 const a = 1 a = 2 // -&gt; Uncaught TypeError: Assignment to constant variable // but const b = { a: 1 } b.a = 2 // 起效当然了，有办法让这个不能改变 const b = Object.freeze({ a: 1 }) b.a = 2 // 没有报错，但是 b.a 没有被改变但是 Object.freeze 只能在这里有效，对于数组这些可以看看这个提案。 这两个新的声明方式在全局作用域下不会自动加上 window 字符串相关部分新增的字符串函数let string = &apos;startend&apos; string.includes(&apos;a&apos;) // -&gt; true 是否包含 string.endsWith(&apos;end&apos;) // -&gt; true 是否由 end 结尾 string.startsWith(&apos;start&apos;) // -&gt; true 是否由 start 开头模板字面量很棒的新功能，解决了之前很多麻烦的写法。 // 语法就是 `` 代替之前的引号，在 `` 中使用引号不需要转义 let s = `it&apos;s string`多行字符串 // 这样在语法中就可以换行了 let s = `start \\ end` // 注意在模板字面量中的任何空白符都是起效的 let s = `start \\ end` // -&gt; start end占位符和标签模板 let s = &apos;string&apos; let message = `start${s}` // -&gt; startstring // ${} 就是占位符语法，可以更简便的实现字符串插入 // 定义一个 tag 函数，然后直接在 `` 前使用就可以 let m = tag`s${s}e${message}` // strings 是一个数组，value 是模板字面量中所有的占位符的值 function tag(strings, ...value) { // -&gt; [&apos;s&apos;, &apos;e&apos;, &apos;&apos;] console.log(strings) // -&gt; [&apos;string&apos;, &apos;startstring&apos;] console.log(value) } // 上面的 ...value 也是 ES6新出的扩展语句，在这里代表不定参数的写法，用于替换 arguments // 不定参数使用上也是有限制的，必须放在所有参数的末尾，并且在每个函数中只能声明一次 // 扩展语句和 arguments 区别就是代表了 strings 参数后面的所有参数 // 除了上面的写法，还可以用于展开可以迭代(有Symbol.iterator属性)的对象 let array = [1, 2, 3] console.log(...array) // 该语法可以解决之前很多地方只能传入单个参数，只能使用 apply 解决的问题 Array.prototype.unshift .apply([4, 5], array) // -&gt; [1, 2, 3, 4, 5] [ // 现在可以直接这样写 (4, 5) ].unshift(...array) // 展开运算不受不定参数的条件限制，可以一起用函数默认参数ES6 允许给函数增加默认参数 function fn(a = 1, b = 2) {} // 默认值也可以通过调用函数获得，注意必须调用函数 function fn1(a = 1, b = fn()) {}新增函数内部方法在 JS 中，函数有多种用法，可以直接调用，也可以通过 new 构造函数。 在 ES6 中，函数内部新增了 [[Call]] 和 [[Construct]] 两个方法。后者会在使用 new 构造函数时执行，其他情况会执行前者方法。 当一个函数必须使用 new 构造时，你可以使用这个新属性 new.target 判断 // new.target 只能在函数中使用 function Fn() { if (typeof new.target === &apos;underfined&apos;) { throw ....... } }箭头函数这个特性真的很棒，先介绍下他的几种语法 // 最简单的写法，只有一个参数，单行表达式 value =&gt; value // 多个参数需要使用小括号包裹 (v1, v2) =&gt; v2 + v1 // 没有参数需要使用小括号包裹 () =&gt; &quot;balabala&quot; // 多行表达式需要大括号包裹 (v1, v2) =&gt; { return v1 + v2 } // 返回一个对象，需要用小括号包裹 () =&gt; ({a: 1}) // 立即执行函数，注意普通的立即执行函数的小括号包裹在最外面，箭头函数不需要 ((value) =&gt; value)(&quot;balabala&quot;)箭头函数和普通函数区别还是蛮大的，说几个常用的 没有 this，不能改变 this 绑定 不能通过 new 调用，当然也没有原型 没有 arguments 对象，不能有相同命名参数 箭头函数虽然没有 this ，但是还是可以在内部使用 this 的 this 的绑定取决于定义函数时的上下文环境 一旦函数调用，任何改变 this 的方法都无效 // let 有个细节 let x = 11111 let a = { x: 1, init() { // 箭头函数的 this 取决于 init，所以可以打印出 1 document.addEventListener(&apos;click&apos;, () =&gt; console.log(this.x)) }, allowInit: () =&gt; { // allowInit 直接是个箭头函数，所以这时的 this 变成了 window // 但是并不会打印出 11111，忘了 let 的一个细节的可以回到上面看看 console.log(this.x)) } otherInit() { // 普通函数的 this 取决于调用函数的位置，this 指向 document // 如果想打印出 x，可以使用 bind document.addEventListener(&apos;click&apos;, function() { console.log(this.x) }) } } a.init() // -&gt; 1 a.allowInit() // -&gt; undefined a.otherInit() // -&gt; undefined 对象相关let a = 1 // 当 key 和 value 名字相同时可以简写 let b = { a } // 对象中的方法也可以简写 let a = { init() {}, } // 对象属性名也可以计算 let name = &apos;name&apos; b[name + &apos;1&apos;] = 2 // === b[&apos;name1&apos;] = 2ES6 也新增了几个对象方法 Object.is(NaN, NaN) // -&gt;true // 结果基本于 === 相似，除了 NaN 和 +0 -0 Object.is(+0, -0) // -&gt; false let o = { a: 1 } let a = Object.assign({}, o) // -&gt; {a: 1} // 第一个参数为目标参数，后面的参数是不定的，参数属性名如果有重复，后面的会覆盖之前的原型相关 ES6 之前改变对象原型很麻烦 let obj = { a: 1 } let obj1 = { a: 2 } // 已 obj 为原型 let a = Object.create(obj) // 改变 a 的原型为 obj1 Object.setPrototypeOf(a, obj1) // a.a === 2访问原型 Object.getPrototypeOf(a) // 访问原型 // ES6 中可以直接通过 super 代表原型 let a = { init() { return &apos;Hello&apos; }, } let b = { init() { // 不能在 super 之前访问 this return super.init() + &apos;World&apos; }, } Object.setPrototypeOf(b, a) b.init() // -&gt; &apos;HelloWorld&apos;但是 super 不是每个函数都可以使用的，只有在函数的简写语法中方可使用。因为在 ES6 中新增了一个函数内部属性 [[HomeObject]]，这个属性决定了是否可以访问到 super。首先在该属性上调用 Object.getPrototypeOf(绑定的对象)，然后找到原型中的同名函数，在设置 this 绑定并且调用函数，其实就是一个新增的语法糖。 解构赋值该特性可以用于对象，数组和传参。 let obj = { a: 1, b: 2 } // 对象解构使用 {}，数组解构使用 []，因为这里是对象解构，c 不是 obj 的属性，所以 underfined // 数组解构中，如果需要解构的变量大于数组索引，多出来的变量也是 undefined // 解构必须赋值，否则报错。不能 let {a, b, c}; // 赋值不能为 null 或者 undefined，会报错 let { a, b, c } = obj // 等于 let a = obj.a，可以看做之前介绍的对象属性简写 console.log(a, b, c)( // -&gt; 1, 2, underfined // 如果已经声明了变量并且想使用解构，必须最外面是小括号 ({ a, b } = obj) ) // 如果不想使用 obj 中的对象名，又想使用解构赋值 let { x: a } = obj // 如果想使用默认值 let { a = 2, c = 3 } = obj // -&gt; 1, 3 // 因为 a 是 obj 中的对象，所以默认值被覆盖 // 解构也可以嵌套 let obj = { data: { code: 1 }, message: [1, 2] } // 这个写法在 json 中很好用 // 注意在这个写法中，data 和 message 都是指代了 obj 的属性，并没有被声明变量 let { data: { code }, message: [a], } = obj console.log(code, a) // 数组解构和对象解构基本相似，并且简单多了 let message = [1, 2, 3, 4] // 因为数组取值只能索引取，所以想跳过某几个索引，就用逗号代替 // 同样，数组解构也可以使用默认值和嵌套解构，和对象解构一模一样就不赘述了 let [a, , b] = message // -&gt; 1, 3 // 在上面章节介绍了扩展语法，同样也可以使用在数组解构中 // 可以看到 b 变成了一个数组 let [a, ...b] = message // -&gt; 1, [2, 3, 4] // 传参使用解构可以让要传的参数更加清晰 function fn(name, { key, value }) { console.log(name, key, value) } // 使用，注意：传参解构必须起码传入一个值，否则报错 fn(1, { key: 2, value: 3 }) // 因为传参解构类似以下写法 function fn(name, { key, value }) { let { key, value } = null // 这个上面讲过不能这样写 }SymbolES6 新出的第六个原始类型。多用于避免代码冲突，作为一个私有属性使用，不会被属性遍历出来。可以使用 Object.getOwnPropertySymbols() 检索 Symbol 属性。 创建和使用// 创建 let a = Symbol() // 更推荐这种写法，可以更加明确这个Symbol的用途 // 并且有函数可以通过这个字符串取到相应的Symbol let b = Symbol(&apos;is b&apos;) // 使用，一般作为可计算属性使用 let a = {} let b = Symbol(&apos;is b&apos;) a[b] = 1 // 可以在全局注册表中共享同一个 Symbol，但不推荐使用 // 不存在 is a 会自动创建 let a = Symbol.for(&apos;is a&apos;)暴露内部操作Symbol 中预定义了一些 well-know Symbol，这些 Symbol 定义了一些语言的内部实现 Symbol.hasinstance，用于执行 instanceof 时检测对象的继承信息 Symbol.isConcatSpreadable，布尔值，用于判断当使用 concat 函数时是否将数组展开 Symbol.iterator，迭代器，后面会讲到 Symbol.match，Symbol.replace，Symbol.search，Symbol.split，字符串相关方法的对应内部实现 Symbol.toPrimitive，返回对象原始值 Symbol.toStringTag，调用 toString Set 和 MapSetSet 是新增的无重复的有序集合，多用于集合去重或者判断集合中是否含有某个元素。 // 创建 let set = new Set() // 添加元素 set.add(1) set.add(&apos;1&apos;) // 重复的元素不会被添加 set.add(1) // 判断是否包含元素 set.has(1) // -&gt; true // 判断长度 set.size() // -&gt; 2 // 删除某个元素 set.delete() // 移除所有元素 set.clear()MapMap 是新增的有序键值对列表，键值可以是任何类型。 // 创建 let map = new Map() // 设置键值对 map.set(&apos;year&apos;, &apos;2017&apos;) map.set({}, &apos;obj&apos;) // 取值 map.get(&apos;year&apos;) // -&gt; &apos;2017&apos; // 判断是否有该键值 map.has(&apos;year&apos;) // -&gt; true // 获得长度 map.size() // -&gt; 2 // 删除某个键值 map.delete(&apos;year&apos;) // 移除所有键值 map.clear()迭代器和 Generator 函数迭代器顾名思义，用来迭代的。之前介绍过 Symbol.iterator，可以迭代的对象都有这个属性，包括数组，Set，Map，字符串和 NodeList。ES6 新增的 for-of 就用到了迭代器的功能，但是默认只有上面这些对象能使用。 let a = [1, 2] for (let value of a) { console.log(value) // -&gt; 1, 2 } // 上面的代码其实就是调用了数组的默认迭代器 let iterator = a[Symbol.iterator]() // 当调用 next 时会输出这次迭代的 value 和是否迭代完成 console.log(iterator.next()) // {value: 1, done: false} console.log(iterator.next()) // {value: 2, done: false} // 已经没元素可以迭代了 console.log(iterator.next()) // {value: undefined, done: true} // 数组的默认迭代器只会输出 value，如果想同时输出索引的话 // 这里可以使用新特性数组解构 let [index, value] for (let value of a.entries()) { console.log(value) // -&gt; [0, 1] [1, 2] }对于自己创建的对象都是不可迭代的，当然我们也可以让他变成迭代的 let a = { array: [], // 这是一个 Generator 函数，马上就会讲到 *[Symbol.iterator]() { for (let item in this.array) { yield item } }, } a.array.push(...[1, 2, 3]) for (let item of a) { console.log(item) }Generator 函数用于异步编程。该函数可以暂停和恢复执行，和同步写法很像。 // 星号表示这是一个 Generator 函数 function* gen() { // 第一次 next 只执行到等号右边 let first = yield 1 // 第二次 next 执行 let first = 和 yield 2 let second = yield 2 // 不执行接下来的 next 就卡在上一步了 let thrid = yield 3 } let g = gen() g.next() // -&gt; {value: 1, done: false} g.next() // -&gt; {value: 2, done: false接下来看下 Generator 函数如何用于异步 function getFirstName() { setTimeout(function() { gen.next(&apos;alex&apos;) }, 1000) } function getSecondName() { setTimeout(function() { gen.next(&apos;perry&apos;) }, 2000) } function* sayHello() { var a = yield getFirstName() var b = yield getSecondName() // settimeout 本来是异步的，通过 Generator 函数写成了同步写法 console.log(a, b) // -&gt;alex perry } var gen = sayHello() gen.next()类JS 中的类不是其他语言中的类，只是个语法糖，写法如下。 class Person { // 构造函数 constructor() { this.name = name } sayName() { console.log(this.name) } } let p = new Person(&apos;name&apos;) p.sayName() // -&gt; &apos;name&apos; // class 就是以下代码的语法糖 // 对应 constructor function Person(name) { this.name = name } // 对应 sayName Person.prototype.sayName = function() { console.log(this.name) }类声明相比之前的写法有以下几点优点 类声明和 let 声明一样，有临时死区 类声明中的代码全部运行在严格模式下 必须使用 new 调用 继承在 ES6 之前写继承很麻烦，既然有个类，那么必然也可以继承类了 class Person { // 构造函数 constructor() { this.name = name } sayName() { console.log(this.name) } } // extends 代表继承自Person class Student extends Person { constructor(name, age) { // super 的注意事项之前有说过 super(name) // 必须在 super 之后调用 this this.age = age } sayName() { // 如果像使用父类的方法就使用这个方法使用 // 不像使用的话就不写 super，会覆盖掉父类的方法 super.sayName(this.name) console.log(this.age) } }Promise概念用于异步编程。 // 你可以使用 new 创建一个 Promise 对象 let promise = new Promise(function(resolve, reject)) {} resole() // 代表成功 reject() // 代表失败 promise.then(onFulfilled, onRejected) // 当调用 resole 或者 reject ，then 可以监听到 promise.catch() // reject 或者 throw时可以监听到Promise 有三个状态 pending，等待状态，也就是既不是 resolve 也不是 reject 状态 fulfilled，resolve 以后进入这个状态 reject，reject 以后进入这个状态 一般使用情况function delay() { // 创建一个 promise return new Promise((resolve, reject) =&gt; { // 当调用 promise 时，里面的内容会立即执行 console.log(&apos;in delay&apos;) setTimeout(() =&gt; { resolve(1) }, 1000) }) } function otherDelay() { return new Promise((resolve, reject) =&gt; { setTimeout(() =&gt; { reject(1) }, 1000) }) } // 这里会先输出 delay 函数中的 log，然后再输出 outer，接下来1秒以后输出3个1 delay() // then 可以捕获 resolve 和 reject .then(value =&gt; { console.log(value) }) console.log(&apos;outer&apos;) otherDelay() // 捕获 reject时，如果不需要捕获 resolve 时可以这样写 .then(null, value =&gt; { console.log(value) }) // 捕获 reject 或者 throw 时推荐使用这个写法，原因后面会说 otherDelay().catch(value =&gt; { console.log(value) })以上是最常用的 Promise 写法，现在介绍 Promise 链 delay() // then 会返回一个新的 promise 对象 .then(value =&gt; { // 这样就可以传参了 return value + 1 }) .then(value =&gt; { console.log(value) // -&gt; 2 // then 里面可以也可以传入一个函数名，会自动调用 // 如果传入的函数有参数会自动传入 }) .then(delay) .then(value =&gt; { console.log(value) // -&gt; 1 // 如果在then 中抛出错误，只有 catch 才能监听到，所以推荐使用 catch 监听错误 throw new Error(&apos;error&apos;) }) .then(value =&gt; { console.log(value) // 这个then 不会执行 }) .catch(error =&gt; { console.log(&apos;catch&apos; + error) // -&gt; catch Error })Promise 高级用法开发中可能会有需求，需要一次上传几张图片，全部上传成功以后有个提示，这时候就可以用到 Promise.all() function updateOne() { return new Promise((resolve, reject) =&gt; { setTimeout(() =&gt; { resolve(&apos;one&apos;) }, 1000) }) } function updateTwo() { return new Promise((resolve, reject) =&gt; { setTimeout(() =&gt; { resolve(&apos;two&apos;) }, 2000) }) } // all 函数接收一个可迭代对象，注意这里传入函数必须调用 let promise = Promise.all([updateOne(), updateTwo()]) // 只有当 all 中的异步全部完成了才会调用 then promise.then(value =&gt; { // value 是个函数，顺序按照 all 里的迭代对象的顺序 console.log(value) // -&gt; [&quot;one&quot;, &quot;two&quot;] })如果一个异步任务超时了，你想直接取消，可以通过 Promise.race() // 假设该任务执行时间超过1秒就算超时，应该 cancel function delay() { return new Promise((resolve, reject) =&gt; { setTimeout(function() { resolve(&apos;finish&apos;) }, 1500) }) } function cancel() { return new Promise((resolve, reject) =&gt; { setTimeout(function() { resolve(&apos;cancel&apos;) }, 1000) }) } // 接收的参数和 all 相同 let promise = Promise.race([delay(), cancel()]) // race 中只要有一个任务完成，then 就会被调用，这样就可以 cancel 掉所有超时任务 promise.then(value =&gt; { console.log(value) // -&gt; cancel })ProxyProxy 可以创建一个代替目标对象的代理，拦截语言内部的操作。 let handle = {} let target = {} // 这样就创建了target 对象的代理，但是这个代理其实没有任何用处 let p = new Proxy(target, handle)上面的代码中可以看到传入了一个 handle 的对象，只有当这个对象中包含一些代理行为的函数时，这个代理才有用。具有的代理行为函数可以去 MDN查看，这里举例几个用法。 let handle = { // 改变 set 的内部操作 set(target, key, value) { // 当给 age 属性赋值小于19时报错 console.log(value) if (key === &apos;age&apos;) { if (value &lt; 19) { throw new Error(&apos;未成年&apos;) } } }, } let target = {} let p = new Proxy(target, handle) p.age = 1 // -&gt; 报错 p.age = 19 // -&gt; 没问题模块化ES6 引入了原生的模块化，这样就可以抛弃之前的 AMD 或者 CMD 规范了，如果对模块化还没什么了解，可以看下我之前的文章 明白 JS 模块化。 // example.js 文件下 // export 可以导出任何变量，函数或者类 export var age = 14 export function sum(n1, n2) { return n1 + n2 } export class Person { constructor(age) { this.age = age } } // 别的 JS 文件中导入 // 如果想导入整个模块并且自己命名，就可以这样使用 // import 后面代表模块名，from 后面代表要导入的文件地址 import * as Example from &apos;./example&apos; console.log(Example.age) // -&gt; 14 // 当然你也可以只使用模块中的一个功能 // 这里使用了对象解构的方法拿到需要的功能，注意这里名字必须相同，否则使用会报错 import { age, sum } from &apos;./example&apos; console.log(age) // -&gt; 14 console.log(sum(1, 2)) // -&gt; 3 // 现在我只想导出一个功能，并且外部可以随便命名该如何做呢？ // default 一个文件中只能使用一次 export default var age = 14 // MyAge 可以随便自己喜欢命名 import MyAge from &apos;./example&apos; console.log(MyAge) // -&gt; 14","categories":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"深度解析原型中的各个难点","slug":"深度解析原型中的各个难点","date":"2018-11-02T14:43:57.000Z","updated":"2019-02-27T15:33:30.000Z","comments":true,"path":"2018/11/02/深度解析原型中的各个难点/","link":"","permalink":"https://blog.yanng.io/2018/11/02/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%E5%8E%9F%E5%9E%8B%E4%B8%AD%E7%9A%84%E5%90%84%E4%B8%AA%E9%9A%BE%E7%82%B9/","excerpt":"","text":"本文不会过多介绍基础知识，而是把重点放在原型的各个难点上。 大家可以先仔细分析下该图，然后让我们进入主题 prototype首先来介绍下 prototype 属性。这是一个显式原型属性，只有函数才拥有该属性。基本上所有函数都有这个属性，但是也有一个例外 let fun = Function.prototype.bind()如果你以上述方法创建一个函数，那么可以发现这个函数是不具有 prototype 属性的。 prototype 如何产生的当我们声明一个函数时，这个属性就被自动创建了。 function Foo() {}并且这个属性的值是一个对象（也就是原型），只有一个属性 constructor constructor 对应着构造函数，也就是 Foo。 constructorconstructor 是一个公有且不可枚举的属性。一旦我们改变了函数的 prototype ，那么新对象就没有这个属性了（当然可以通过原型链取到 constructor）。 那么你肯定也有一个疑问，这个属性到底有什么用呢？其实这个属性可以说是一个历史遗留问题，在大部分情况下是没用的，在我的理解里，我认为他有两个作用： 让实例对象知道是什么函数构造了它 如果想给某些类库中的构造函数增加一些自定义的方法，就可以通过 xx.constructor.method 来扩展 _proto_这是每个对象都有的隐式原型属性，指向了创建该对象的构造函数的原型。其实这个属性指向了 [[prototype]]，但是 [[prototype]] 是内部属性，我们并不能访问到，所以使用 _proto_ 来访问。 因为在 JS 中是没有类的概念的，为了实现类似继承的方式，通过 _proto_ 将对象和原型联系起来组成原型链，得以让对象可以访问到不属于自己的属性。 实例对象的 _proto_ 如何产生的从上图可知，当我们使用 new 操作符时，生成的实例对象拥有了 _proto_属性。 function Foo() {} // 这个函数是 Function 的实例对象 // function 就是一个语法糖 // 内部调用了 new Function(...)所以可以说，在 new 的过程中，新对象被添加了 _proto_ 并且链接到构造函数的原型上。 new 的过程 新生成了一个对象 链接到原型 绑定 this 返回新对象 在调用 new 的过程中会发生以上四件事情，我们也可以试着来自己实现一个 new function create() { // 创建一个空的对象 let obj = new Object() // 获得构造函数 let Con = [].shift.call(arguments) // 链接到原型 obj.__proto__ = Con.prototype // 绑定 this，执行构造函数 let result = Con.apply(obj, arguments) // 确保 new 出来的是个对象 return typeof result === &apos;object&apos; ? result : obj }对于实例对象来说，都是通过 new 产生的，无论是 function Foo() 还是 let a = { b : 1 } 。 对于创建一个对象来说，更推荐使用字面量的方式创建对象。因为你使用 new Object() 的方式创建对象需要通过作用域链一层层找到 Object，但是你使用字面量的方式就没这个问题。 function Foo() {} // function 就是个语法糖 // 内部等同于 new Function() let a = { b: 1 } // 这个字面量内部也是使用了 new Object()Function.proto === Function.prototype对于对象来说，xx.__proto__.contrcutor 是该对象的构造函数，但是在图中我们可以发现 Function.__proto__ === Function.prototype，难道这代表着 Function 自己产生了自己? 答案肯定是否认的，要说明这个问题我们先从 Object 说起。 从图中我们可以发现，所有对象都可以通过原型链最终找到 Object.prototype ，虽然 Object.prototype 也是一个对象，但是这个对象却不是 Object 创造的，而是引擎自己创建了 Object.prototype 。所以可以这样说，所有实例都是对象，但是对象不一定都是实例。 接下来我们来看 Function.prototype 这个特殊的对象，如果你在浏览器将这个对象打印出来，会发现这个对象其实是一个函数。 我们知道函数都是通过 new Function() 生成的，难道 Function.prototype 也是通过 new Function() 产生的吗？答案也是否定的，这个函数也是引擎自己创建的。首先引擎创建了 Object.prototype ，然后创建了 Function.prototype ，并且通过 __proto__ 将两者联系了起来。这里也很好的解释了上面的一个问题，为什么 let fun = Function.prototype.bind() 没有 prototype 属性。因为 Function.prototype 是引擎创建出来的对象，引擎认为不需要给这个对象添加 prototype 属性。 所以我们又可以得出一个结论，不是所有函数都是 new Function() 产生的。 有了 Function.prototype 以后才有了 function Function() ，然后其他的构造函数都是 function Function() 生成的。 现在可以来解释 Function.__proto__ === Function.prototype 这个问题了。因为先有的 Function.prototype 以后才有的 function Function() ，所以也就不存在鸡生蛋蛋生鸡的悖论问题了。对于为什么 Function.__proto__ 会等于 Function.prototype ，个人的理解是：其他所有的构造函数都可以通过原型链找到 Function.prototype ，并且 function Function() 本质也是一个函数，为了不产生混乱就将 function Function() 的 __proto__ 联系到了 Function.prototype 上。 总结 Object 是所有对象的爸爸，所有对象都可以通过 __proto__ 找到它 Function 是所有函数的爸爸，所有函数都可以通过 __proto__ 找到它 Function.prototype 和 Object.prototype 是两个特殊的对象，他们由引擎来创建 除了以上两个特殊对象，其他对象都是通过构造器 new 出来的 函数的 prototype 是一个对象，也就是原型 对象的 __proto__ 指向原型， __proto__ 将对象和原型连接起来组成了原型链","categories":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"深度解析 Vue 响应式原理","slug":"深度解析 Vue 响应式原理","date":"2018-10-20T14:43:57.000Z","updated":"2019-02-27T15:33:06.000Z","comments":true,"path":"2018/10/20/深度解析 Vue 响应式原理/","link":"","permalink":"https://blog.yanng.io/2018/10/20/%E6%B7%B1%E5%BA%A6%E8%A7%A3%E6%9E%90%20Vue%20%E5%93%8D%E5%BA%94%E5%BC%8F%E5%8E%9F%E7%90%86/","excerpt":"","text":"Vue 初始化在 Vue 的初始化中，会先对 props 和 data 进行初始化 Vue.prototype._init = function(options?: Object) { // ... // 初始化 props 和 data initState(vm) initProvide(vm) callHook(vm, &apos;created&apos;) if (vm.$options.el) { // 挂载组件 vm.$mount(vm.$options.el) } }接下来看下如何初始化 props 和 data export function initState(vm: Component) { // 初始化 props if (opts.props) initProps(vm, opts.props) if (opts.data) { // 初始化 data initData(vm) } } function initProps(vm: Component, propsOptions: Object) { const propsData = vm.$options.propsData || {} const props = (vm._props = {}) // 缓存 key const keys = (vm.$options._propKeys = []) const isRoot = !vm.$parent // 非根组件的 props 不需要观测 if (!isRoot) { toggleObserving(false) } for (const key in propsOptions) { keys.push(key) // 验证 prop const value = validateProp(key, propsOptions, propsData, vm) // 通过 defineProperty 函数实现双向绑定 defineReactive(props, key, value) // 可以让 vm._props.x 通过 vm.x 访问 if (!(key in vm)) { proxy(vm, `_props`, key) } } toggleObserving(true) } function initData(vm: Component) { let data = vm.$options.data data = vm._data = typeof data === &apos;function&apos; ? getData(data, vm) : data || {} if (!isPlainObject(data)) { data = {} process.env.NODE_ENV !== &apos;production&apos; &amp;&amp; warn( &apos;data functions should return an object:\\n&apos; + &apos;https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function&apos;, vm ) } // proxy data on instance const keys = Object.keys(data) const props = vm.$options.props const methods = vm.$options.methods let i = keys.length while (i--) { const key = keys[i] if (props &amp;&amp; hasOwn(props, key)) { } else if (!isReserved(key)) { // 可以让 vm._data.x 通过 vm.x 访问 proxy(vm, `_data`, key) } } // 监听 data observe(data, true /* asRootData */) } export function observe(value: any, asRootData: ?boolean): Observer | void { // 如果 value 不是对象或者使 VNode 类型就返回 if (!isObject(value) || value instanceof VNode) { return } let ob: Observer | void // 使用缓存的对象 if (hasOwn(value, &apos;__ob__&apos;) &amp;&amp; value.__ob__ instanceof Observer) { ob = value.__ob__ } else if ( shouldObserve &amp;&amp; !isServerRendering() &amp;&amp; (Array.isArray(value) || isPlainObject(value)) &amp;&amp; Object.isExtensible(value) &amp;&amp; !value._isVue ) { // 创建一个监听者 ob = new Observer(value) } if (asRootData &amp;&amp; ob) { ob.vmCount++ } return ob } export class Observer { value: any dep: Dep vmCount: number // number of vms that has this object as root $data constructor(value: any) { this.value = value this.dep = new Dep() this.vmCount = 0 // 通过 defineProperty 为对象添加 __ob__ 属性，并且配置为不可枚举 // 这样做的意义是对象遍历时不会遍历到 __ob__ 属性 def(value, &apos;__ob__&apos;, this) // 判断类型，不同的类型不同处理 if (Array.isArray(value)) { // 判断数组是否有原型 // 在该处重写数组的一些方法，因为 Object.defineProperty 函数 // 对于数组的数据变化支持的不好，这部分内容会在下面讲到 const augment = hasProto ? protoAugment : copyAugment augment(value, arrayMethods, arrayKeys) this.observeArray(value) } else { this.walk(value) } } // 遍历对象，通过 defineProperty 函数实现双向绑定 walk(obj: Object) { const keys = Object.keys(obj) for (let i = 0; i &lt; keys.length; i++) { defineReactive(obj, keys[i]) } } // 遍历数组，对每一个元素进行观测 observeArray(items: Array&lt;any&gt;) { for (let i = 0, l = items.length; i &lt; l; i++) { observe(items[i]) } } }Object.defineProperty无论是对象还是数组，需要实现双向绑定的话最终都会执行这个函数，该函数可以监听到 set 和 get 的事件。 export function defineReactive( obj: Object, key: string, val: any, customSetter?: ?Function, shallow?: boolean ) { // 创建依赖实例，通过闭包的方式让 // set get 函数使用 const dep = new Dep() // 获得属性对象 const property = Object.getOwnPropertyDescriptor(obj, key) if (property &amp;&amp; property.configurable === false) { return } // 获取自定义的 getter 和 setter const getter = property &amp;&amp; property.get const setter = property &amp;&amp; property.set if ((!getter || setter) &amp;&amp; arguments.length === 2) { val = obj[key] } // 如果 val 是对象的话递归监听 let childOb = !shallow &amp;&amp; observe(val) Object.defineProperty(obj, key, { enumerable: true, configurable: true, // 拦截 getter，当取值时会触发该函数 get: function reactiveGetter() { const value = getter ? getter.call(obj) : val // 进行依赖收集 // 初始化时会在初始化渲染 Watcher 时访问到需要双向绑定的对象 // 从而触发 get 函数 if (Dep.target) { dep.depend() if (childOb) { childOb.dep.depend() if (Array.isArray(value)) { dependArray(value) } } } return value }, // 拦截 setter，当赋值时会触发该函数 set: function reactiveSetter(newVal) { const value = getter ? getter.call(obj) : val // 判断值是否发生变化 if (newVal === value || (newVal !== newVal &amp;&amp; value !== value)) { return } if (process.env.NODE_ENV !== &apos;production&apos; &amp;&amp; customSetter) { customSetter() } if (setter) { setter.call(obj, newVal) } else { val = newVal } // 如果新值是对象的话递归监听 childOb = !shallow &amp;&amp; observe(newVal) // 派发更新 dep.notify() }, }) }在 Object.defineProperty 中自定义 get 和 set 函数，并在 get 中进行依赖收集，在 set 中派发更新。接下来我们先看如何进行依赖收集。 依赖收集依赖收集是通过 Dep 来实现的，但是也与 Watcher 息息相关 export default class Dep { static target: ?Watcher; id: number; subs: Array&lt;Watcher&gt;; constructor () { this.id = uid++ this.subs = [] } // 添加观察者 addSub (sub: Watcher) { this.subs.push(sub) } // 移除观察者 removeSub (sub: Watcher) { remove(this.subs, sub) } depend () { if (Dep.target) {、 // 调用 Watcher 的 addDep 函数 Dep.target.addDep(this) } } // 派发更新 notify () { const subs = this.subs.slice() for (let i = 0, l = subs.length; i &lt; l; i++) { subs[i].update() } } } // 同一时间只有一个观察者使用，赋值观察者 Dep.target = null对于 Watcher 来说，分为两种 Watcher，分别为渲染 Watcher 和用户写的 Watcher。渲染 Watcher 是在初始化中实例化的。 export function mountComponent( vm: Component, el: ?Element, hydrating?: boolean ): Component { // ... let updateComponent if (process.env.NODE_ENV !== &apos;production&apos; &amp;&amp; config.performance &amp;&amp; mark) { } else { // 组件渲染，该回调会在初始化和数据变化时调用 updateComponent = () =&gt; { vm._update(vm._render(), hydrating) } } // 实例化渲染 Watcher new Watcher( vm, updateComponent, noop, { before() { if (vm._isMounted) { callHook(vm, &apos;beforeUpdate&apos;) } }, }, true /* isRenderWatcher */ ) return vm }接下来看一下 Watcher 的部分实现 export default class Watcher { constructor( vm: Component, expOrFn: string | Function, cb: Function, options?: ?Object, isRenderWatcher?: boolean ) { // ... if (this.computed) { this.value = undefined this.dep = new Dep() } else { this.value = this.get() } } get() { // 该函数用于缓存 Watcher // 因为在组件含有嵌套组件的情况下，需要恢复父组件的 Watcher pushTarget(this) let value const vm = this.vm try { // 调用回调函数，也就是 updateComponent 函数 // 在这个函数中会对需要双向绑定的对象求值，从而触发依赖收集 value = this.getter.call(vm, vm) } catch (e) { if (this.user) { handleError(e, vm, `getter for watcher &quot;${this.expression}&quot;`) } else { throw e } } finally { // &quot;touch&quot; every property so they are all tracked as // dependencies for deep watching if (this.deep) { traverse(value) } // 恢复 Watcher popTarget() // 清理依赖，判断是否还需要某些依赖，不需要的清除 // 这是为了性能优化 this.cleanupDeps() } return value } // 在依赖收集中调用 addDep(dep: Dep) { const id = dep.id if (!this.newDepIds.has(id)) { this.newDepIds.add(id) this.newDeps.push(dep) if (!this.depIds.has(id)) { // 调用 Dep 中的 addSub 函数 // 将当前 Watcher push 进数组 dep.addSub(this) } } } } export function pushTarget(_target: ?Watcher) { // 设置全局的 target if (Dep.target) targetStack.push(Dep.target) Dep.target = _target } export function popTarget() { Dep.target = targetStack.pop() }以上就是依赖收集的全过程。核心流程是先对配置中的 props 和 data 中的每一个值调用 Obeject.defineProperty() 来拦截 set 和 get 函数，再在渲染 Watcher 中访问到模板中需要双向绑定的对象的值触发依赖收集。 派发更新改变对象的数据时，会触发派发更新，调用 Dep 的 notify 函数 notify () { // 执行 Watcher 的 update const subs = this.subs.slice() for (let i = 0, l = subs.length; i &lt; l; i++) { subs[i].update() } } update () { if (this.computed) { // ... } else if (this.sync) { // ... } else { // 一般会进入这个条件 queueWatcher(this) } } export function queueWatcher(watcher: Watcher) { // 获得 id const id = watcher.id // 判断 Watcher 是否 push 过 // 因为存在改变了多个数据，多个数据的 Watch 是同一个 if (has[id] == null) { has[id] = true if (!flushing) { // 最初会进入这个条件 queue.push(watcher) } else { // 在执行 flushSchedulerQueue 函数时，如果有新的派发更新会进入这里 // 插入新的 watcher let i = queue.length - 1 while (i &gt; index &amp;&amp; queue[i].id &gt; watcher.id) { i-- } queue.splice(i + 1, 0, watcher) } // 最初会进入这个条件 if (!waiting) { waiting = true // 将所有 Watcher 统一放入 nextTick 调用 // 因为每次派发更新都会引发渲染 nextTick(flushSchedulerQueue) } } } function flushSchedulerQueue() { flushing = true let watcher, id // 根据 id 排序 watch，确保如下条件 // 1. 组件更新从父到子 // 2. 用户写的 Watch 先于渲染 Watch // 3. 如果在父组件 watch run 的时候有组件销毁了，这个 Watch 可以被跳过 queue.sort((a, b) =&gt; a.id - b.id) // 不缓存队列长度，因为在遍历的过程中可能队列的长度发生变化 for (index = 0; index &lt; queue.length; index++) { watcher = queue[index] if (watcher.before) { // 执行 beforeUpdate 钩子函数 watcher.before() } id = watcher.id has[id] = null // 在这里执行用户写的 Watch 的回调函数并且渲染组件 watcher.run() // 判断无限循环 // 比如在 watch 中又重新给对象赋值了，就会出现这个情况 if (process.env.NODE_ENV !== &apos;production&apos; &amp;&amp; has[id] != null) { circular[id] = (circular[id] || 0) + 1 if (circular[id] &gt; MAX_UPDATE_COUNT) { warn( &apos;You may have an infinite update loop &apos; + (watcher.user ? `in watcher with expression &quot;${watcher.expression}&quot;` : `in a component render function.`), watcher.vm ) break } } } // ... }以上就是派发更新的全过程。核心流程就是给对象赋值，触发 set 中的派发更新函数。将所有 Watcher 都放入 nextTick 中进行更新，nextTick 回调中执行用户 Watch 的回调函数并且渲染组件。 Object.defineProperty 的缺陷以上已经分析完了 Vue 的响应式原理，接下来说一点 Object.defineProperty 中的缺陷。 如果通过下标方式修改数组数据或者给对象新增属性并不会触发组件的重新渲染，因为 Object.defineProperty 不能拦截到这些操作，更精确的来说，对于数组而言，大部分操作都是拦截不到的，只是 Vue 内部通过重写函数的方式解决了这个问题。 对于第一个问题，Vue 提供了一个 API 解决 export function set(target: Array&lt;any&gt; | Object, key: any, val: any): any { // 判断是否为数组且下标是否有效 if (Array.isArray(target) &amp;&amp; isValidArrayIndex(key)) { // 调用 splice 函数触发派发更新 // 该函数已被重写 target.length = Math.max(target.length, key) target.splice(key, 1, val) return val } // 判断 key 是否已经存在 if (key in target &amp;&amp; !(key in Object.prototype)) { target[key] = val return val } const ob = (target: any).__ob__ if (target._isVue || (ob &amp;&amp; ob.vmCount)) { process.env.NODE_ENV !== &apos;production&apos; &amp;&amp; warn( &apos;Avoid adding reactive properties to a Vue instance or its root $data &apos; + &apos;at runtime - declare it upfront in the data option.&apos; ) return val } // 如果对象不是响应式对象，就赋值返回 if (!ob) { target[key] = val return val } // 进行双向绑定 defineReactive(ob.value, key, val) // 手动派发更新 ob.dep.notify() return val }对于数组而言，Vue 内部重写了以下函数实现派发更新 // 获得数组原型 const arrayProto = Array.prototype export const arrayMethods = Object.create(arrayProto) // 重写以下函数 const methodsToPatch = [ &apos;push&apos;, &apos;pop&apos;, &apos;shift&apos;, &apos;unshift&apos;, &apos;splice&apos;, &apos;sort&apos;, &apos;reverse&apos;, ] methodsToPatch.forEach(function(method) { // 缓存原生函数 const original = arrayProto[method] // 重写函数 def(arrayMethods, method, function mutator(...args) { // 先调用原生函数获得结果 const result = original.apply(this, args) const ob = this.__ob__ let inserted // 调用以下几个函数时，监听新数据 switch (method) { case &apos;push&apos;: case &apos;unshift&apos;: inserted = args break case &apos;splice&apos;: inserted = args.slice(2) break } if (inserted) ob.observeArray(inserted) // 手动派发更新 ob.dep.notify() return result }) })","categories":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"JavaScript面试题/考点/解答（持续更新中...）","slug":"js基础面试题-题目-考点-解答手记","date":"2018-08-13T06:32:51.000Z","updated":"2018-09-01T08:58:14.000Z","comments":true,"path":"2018/08/13/js基础面试题-题目-考点-解答手记/","link":"","permalink":"https://blog.yanng.io/2018/08/13/js%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95%E9%A2%98-%E9%A2%98%E7%9B%AE-%E8%80%83%E7%82%B9-%E8%A7%A3%E7%AD%94%E6%89%8B%E8%AE%B0/","excerpt":"","text":"变量类型和计算题目： js中使用typeof能得到哪些类型 何时使用 === 何时使用 == js中有哪些内置函数 js中变量按照存储方式区分为哪些类型，并描述其特点 如何理解JSON 考点：值类型vs引用类型eg.值类型： 12345var a &#x3D; 100 &#39;&#39;var b &#x3D; a &#39;&#39;a &#x3D; 200 &#39;&#39;console.log(b) &#x2F;&#x2F;100 引用类型： 12345var a &#x3D; &#123;age:20&#125; var b &#x3D; a b.age &#x3D; 21 console.log(a.age) &#x2F;&#x2F;21 typeof 运算符详解12345678typeof undefined &#x2F;&#x2F;undefinedtypeof &#96;&#39;abc&#39;&#96; &#x2F;&#x2F;stringtypeof 123 &#x2F;&#x2F;bumbertypeof true &#x2F;&#x2F;booleantypeof &#96;&#123;&#125;&#96; &#x2F;&#x2F;objecttypeof &#96;[]&#96; &#x2F;&#x2F;object(array)typeof null &#x2F;&#x2F;objecttypeof console.log &#x2F;&#x2F;function 变量计算 - 强制类型转换 字符串拼接 12var a &#x3D; 100 + 10 &#x2F;&#x2F;110 var b &#x3D;100 + &#39;10&#39; &#x2F;&#x2F;&#39;10010&#39; ==运算符 123100 &#x3D;&#x3D; &#39;100&#39; &#x2F;&#x2F;true 0 &#x3D;&#x3D; &#39; &#39; &#x2F;&#x2F;true null &#x3D;&#x3D; undefined &#x2F;&#x2F;true if语句 1234567891011121314var a &#x3D; true if(a)&#123; &#x2F;&#x2F;..... &#125; var b &#x3D;100 if(b)&#123; &#x2F;&#x2F;..... &#125; var c &#x3D; &#39; &#39; if(c)&#123; &#x2F;&#x2F;..... &#125; 逻辑运算 123456console.log(10&amp;&amp;0) &#x2F;&#x2F;0 console.log(&#39; &#39;||&#39;abc&#39;) &#x2F;&#x2F;&#39;abc&#39; console.log(!window.abc) &#x2F;&#x2F;true &#x2F;&#x2F;判断一个变量会被当做 true 还是 false var a &#x3D; 100 console.log(!!a) 解答： js中使用typeof能得到哪些类型？如上。 何时使用 === 何时使用 == if (obj.a==null){ //这里是相当于obj.a===null || obj.a === undefined，简写形式 //这是jquery源码中推荐的写法 } js中有哪些内置函数——数据封装类对象 123456789ObjectArrayBooleanNumberStringFunctionDataRegExpError js中变量按照存储方式区分为哪些类型，并描述其特点 值类型（单纯赋值） 引用类型（指针指向）特点：如上。 如何理解JSON只不过是一个JS对象而已 对象转化成字符串： JSON.stringify({a:10,b:20})字符串转化成对象： JSON.parse(‘{“a”:10,”b”:20}’)","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"前端面试题考点汇总","slug":"牛客面试题手记","date":"2018-08-03T06:32:51.000Z","updated":"2018-09-01T08:54:46.000Z","comments":true,"path":"2018/08/03/牛客面试题手记/","link":"","permalink":"https://blog.yanng.io/2018/08/03/%E7%89%9B%E5%AE%A2%E9%9D%A2%E8%AF%95%E9%A2%98%E6%89%8B%E8%AE%B0/","excerpt":"","text":"选择器子选择器和后代选择器： 子选择器：（&gt;）后代选择器：（空格） 区别：&gt; 作用于元素的第一代后代，空格作用于元素的所有后代。 属性选择器(a[rel = &quot;external&quot;]) 相邻选择器(h1 + p) 继承可继承的样式： font-size font-family color text-indent 不可继承的样式： border padding margin width height 优先级算法： 优先级就近原则，同权重情况下样式定义最近者为准; 载入样式以最后载入的定位为准; !important &gt; id &gt; class &gt; tag important 比 内联优先级高，但内联比 id 要高 CSS3 新增伪类举例： p:first-of-type 选择属于其父元素的首个 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。 p:last-of-type 选择属于其父元素的最后 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。 p:only-of-type 选择属于其父元素唯一的 &lt;p&gt; 元素的每个 &lt;p&gt; 元素。 p:only-child 选择属于其父元素的唯一子元素的每个 &lt;p&gt; 元素。 p:nth-child(2) 选择属于其父元素的第二个子元素的每个 &lt;p&gt; 元素。 :enabled :disabled 控制表单控件的禁用状态。 :checked 单选框或复选框被选中。 display 的值及作用： block inline-block inline list-item 象块类型元素一样显示，并添加样式列表标记。 none：隐藏元素，在页面中不占据空间 position 的值的定位区别： absolute 生成绝对定位的元素，相对于 static 定位以外的第一个祖先元素进行定位。 fixed 生成固定定位的元素，相对于浏览器窗口进行定位（老 IE 不支持）。 relative 生成相对定位的元素，相对于其在普通流中的位置进行定位。 static 默认值（静态）。没有定位，元素出现在正常的流中（忽略 top, bottom, left, right z-index 声明）。 inherit 规定从父元素继承 position 属性的值。 css3新特性 CSS3 实现圆角（border-radius），阴影（box-shadow） 对文字加特效（text-shadow、），线性渐变（gradient），转换（transform） transform:rotate(9deg) scale(0.85,0.90) translate(0px,-30px) skew(-9deg,0deg);// 旋转, 缩放, 定位, 倾斜 增加了更多的 CSS 选择器 多背景 rgba 在 CSS3 中唯一引入的伪类是 ::selection. 媒体查询，多栏布局 border-image 转换(transform) 平移 12345transform：translateX（-30px); 水平方向 左右，负正transform：translateY（-30px); 垂直方向 正上；负下transform：translate（-30px，30px); 斜 旋转 ：角度 1transform：rotate （180deg） 缩放：倍数 12345transform：scaletransform：scaleXtransform：scaleY 斜切：角度 12345transform：skewtransform：skewXtransform：skewY 过度：对运动过程进行控制 123transition；all 2s 1s ease;属性名称 持续时间 延迟 运动方式（贝塞尔曲线） 阴影 1box-shadow: 0px 0px 10px 10px rgba(0,0,0,0.4) 第一个参数：水平方向 正 右； 负 左； 0 左右 第二个参数： 垂直方向 正上 ； 负下 ； 0 上下 第三个参数： 迷糊程度 值越大越模糊 第四个参数：阴影大小 第五个参数： 阴影颜色 第六个参数： 内阴影 inset; 文本阴影 1text-shadow: 5px 5px 5px #FF0000; 边框图片引入图片：boder-image-source:url(&#39;&#39;); 设置边框图片的宽度：boder-image-width:20px; 切片 九个区域 四个角 四个边 中间 fill：boder-image-slice:45; 重复：stretch 拉伸（默认）repeat 重复（不完整）round 重复（完整）boder-image-repeat:round; 渐变线性渐变添加属性：background-imagelinear-gradient(top,red,yellow);第一参数：渐变开始的方向第二参数：开始的颜色第三参数：结束的颜色颜色：关键字，十六进制，rgb，rgba方向：关键字 left top bottom right角度: 0deg均匀的线性渐变不均匀的线形渐变：（百分比 纯色）linear-gradient(top,red 30%,yellow);重复性渐变：repeating-linear-gradient(top,red,yellow 20%); 径向渐变添加属性：background-imageradial-gradient(at 30px 30px,red,yellow);第一参数：中心点位置第二参数：开始的颜色第三参数：结束的颜色不均匀径向渐变重复性径向渐变：repeating-gradial-gradient(red,yellow 20%); 文本修饰（下划线等）上划线:h1 {text-decoration:overline}删除线:h2 {text-decoration:line-through}下划线:h3 {text-decoration:underline}（不支持IE，Chrome，Safari）:h4 {text-decoration:blink} 对BFC规范的理解块格式化上下文（Block Formatting Context，BFC）是 Web 页面的可视化 CSS 渲染的一部分，是布局过程中生成块级盒子的区域，也是浮动元素与其他元素的交互限定区域。 BFC，块级格式化上下文，一个创建了新的 BFC 的盒子是独立布局的，盒子里面的子元素的样式不会影响到外面的元素。在同一个 BFC 中的两个毗邻的块级盒在垂直方向（和布局方向有关系）的 margin 会发生折叠。 W3C CSS 2.1 规范中的一个概念，它决定了元素如何对其内容进行布局，以及与其他元素的关系和相互作用。 CSS spritesCSS Sprites 其实就是把网页中一些背景图片整合到一张图片文件中，再利用 CSS 的 “background-image”，”background-repeat”，”background-position” 的组合进行背景定位，background-position 可以用数字能精确的定位出背景图片的位置。这样可以减少很多图片请求的开销，因为请求耗时比较长；请求虽然可以并发，但是也有限制，一般浏览器都是 6 个。对于未来而言，就不需要这样做了，因为有了 http2。 DOCTYPE &lt;!DOCTYPE&gt; 声明位于文档中的最前面，处于 &lt;html&gt; 标签之前。告知浏览器以何种模式来渲染文档。 严格模式的排版和 JS 运作模式是 以该浏览器支持的最高标准运行。 在混杂模式中，页面以宽松的向后兼容的方式显示。模拟老式浏览器的行为以防止站点无法工作。 DOCTYPE 不存在或格式不正确会导致文档以混杂模式呈现。 DOCTYPE类型 该标签可声明三种 DTD 类型，分别表示严格版本、过渡版本以及基于框架的 HTML 文档。 HTML 4.01 规定了三种文档类型：Strict、Transitional 以及 Frameset。 XHTML 1.0 规定了三种 XML 文档类型：Strict、Transitional 以及 Frameset。 Standards （标准）模式（也就是严格呈现模式）用于呈现遵循最新标准的网页，而 Quirks（包容）模式（也就是松散呈现模式或者兼容模式）用于呈现为传统浏览器而设计的网页。 HTML 与 XHTML最主要的不同：XHTML 元素必须被正确地嵌套。XHTML 元素必须被关闭。标签名必须用小写字母。XHTML 文档必须拥有根元素。 html 常见兼容性问题 png24 位的图片在 iE6 浏览器上出现背景解决方案：做成 PNG8，也可以引用一段脚本处理. 浏览器默认的 margin 和 padding 不同解决方案：加一个全局的 margin:0;padding:0; 来统一。 IE6 双边距 bug：在 IE6 下，如果对元素设置了浮动，同时又设置了 margin-left 或 margin-right，margin 值会加倍。box float:left; width:10px; margin:0 0 0 10px;这种情况之下 IE 会产生 20px 的距离解决方案：在 float 的标签样式控制中加入 _display:inline; 将其转化为行内属性。( _ 这个符号只有 ie6 会识别) 渐进识别的方式，从总体中逐渐排除局部。首先，巧妙的使用 “\\9” 这一标记，将 IE 游览器从所有情况中分离出来。接着，再次使用 “+” 将 IE8 和 IE7、IE6 分离开来，这样 IE8 已经独立识别。 123456.bb&#123; background-color:#f1ee18; &#x2F;所有识别&#x2F; .background-color:#00deff\\9; &#x2F;IE6、7、8识别&#x2F; +background-color:#a200ff; &#x2F;IE6、7识别&#x2F; background-color:#1e0bd1; &#x2F;IE6识别&#x2F; &#125; 5.IE 下，可以使用获取常规属性的方法来获取自定义属性，也可以使用 getAttribute() 获取自定义属性；Firefox 下, 只能使用 getAttribute() 获取自定义属性解决方法：统一通过 getAttribute() 获取自定义属性6. IE 下，event 对象有 x、y 属性，但是没有 pageX、pageY 属性; Firefox 下，event 对象有 pageX、pageY 属性，但是没有 x、y 属性解决方法：（条件注释）缺点是在 IE 浏览器下可能会增加额外的 HTTP 请求数。7. Chrome 中文界面下默认会将小于 12px 的文本强制按照 12px 显示解决方法：可通过加入 CSS 属性 -webkit-text-size-adjust: none; 解决8. 超链接访问过后 hover 样式就不出现了，被点击访问过的超链接样式不在具有 hover 和 active 了解决方法：改变 CSS 属性的排列顺序 L-V-H-A a:link {}a:visited {}a:hover {}a:active {} 怪异模式问题：漏写 DTD 声明，Firefox 仍然会按照标准模式来解析网页，但在 IE 中会触发怪异模式。为避免怪异模式给我们带来不必要的麻烦，最好养成书写 DTD 声明的好习惯。现在可以使用 html5(http://www.w3.org/TR/html5/single-page.html) 推荐的写法：&lt;!DOCTYPE html&gt; 上下 margin 重合问题：ie 和 ff 都存在，相邻的两个 div 的 margin-left 和 margin-right 不会重合，但是 margin-top 和 margin-bottom 却会发生重合。解决方法：养成良好的代码编写习惯，同时采用 margin-top 或者同时采用 margin-bottom。 ie6 对 png 图片格式支持不好解决方案：引用一段脚本处理 清除浮动浮动元素脱离文档流，不占据空间。浮动元素碰到包含它的边框或者浮动元素的边框停留。 使用空标签清除浮动。这种方法是在所有浮动标签后面添加一个空标签 定义 css clear:both. 弊端就是增加了无意义标签。 使用 overflow。给包含浮动元素的父标签添加 css 属性 overflow:auto; zoom:1; zoom:1 用于兼容 IE6。可以给父元素设置 overflow：auto 或者 hidden。 使用 after 伪对象清除浮动。该方法只适用于非 IE 浏览器。具体写法可参照以下示例。使用中需注意以下几点。一、该方法中必须为需要清除浮动元素的伪对象中设置 height:0，否则该元素会比实际高出若干像素； IE 8 以下版本的浏览器中的盒模型有什么不同IE8 以下浏览器的盒模型中定义的元素的宽高包括内边距和边框 DOM 操作——怎样添加、移除、移动、复制、创建和查找节点。 创建新节点createDocumentFragment() // 创建一个DOM片段createElement() // 创建一个具体的元素createTextNode() // 创建一个文本节点 添加、移除、替换、插入appendChild()removeChild()replaceChild()insertBefore() // 在已有的子节点前插入一个新的子节点 查找getElementsByTagName() // 通过标签名称getElementsByName() // 通过元素的Name属性的值(IE容错能力较强，会得到一个数组，其中包括id等于name值的)getElementById() // 通过元素Id，唯一性 html5 有哪些新特性、移除了那些元素？如何处理 HTML5 新标签的浏览器兼容问题？如何区分 HTML 和 HTML5？新特性：HTML5 现在已经不是 SGML 的子集，主要是关于图像，位置，存储，多任务等功能的增加。 拖拽释放 (Drag and drop) API 语义化更好的内容标签（header,nav,footer,aside,article,section） 音频、视频 API(audio,video) 画布 (Canvas) API 地理 (Geolocation) API 本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失； sessionStorage 的数据在浏览器关闭后自动删除 表单控件，calendar、date、time、email、url、search 新的技术 webworker, websocket, Geolocation 移除的元素： 纯表现的元素：basefont，big，center，font, s，strike，tt，u； 对可用性产生负面影响的元素：frame，frameset，noframes； 支持 HTML5 新标签： IE8/IE7/IE6 支持通过 document.createElement 方法产生的标签，可以利用这一特性让这些浏览器支持 HTML5 新标签，浏览器支持新标签后，还需要添加标签默认的样式（当然最好的方式是直接使用成熟的框架、使用最多的是 html5shiv 框架）： 123&lt;!--[if lt IE 9]&gt; &lt;script&gt; src&#x3D;&quot;http:&#x2F;&#x2F;html5shiv.googlecode.com&#x2F;svn&#x2F;trunk&#x2F;html5.js&quot;&lt;&#x2F;script&gt; &lt;![endif]--&gt; 如何区分：DOCTYPE 声明新增的结构元素、功能元素 iframe 的优缺点？优点： 解决加载缓慢的第三方内容如图标和广告等的加载问题 Security sandbox 并行加载脚本 缺点： iframe 会阻塞主页面的 Onload 事件 即时内容为空，加载也需要时间 没有语意 如何实现浏览器内多个标签页之间的通信?使用本地存储方法 cookie（1）客户端和服务器端都会请求服务器，性能下降（2）存储限制，4kb（3）页面的 cookie 是共享的 storage只是在客户端使用，不会请求服务器处理, 存储量比较大, 只能存储字符串，非字符串的数据在存储之前会被转换为字符串1). sessionStorage 临时性的，页面打开有，页面关闭没有 数据不共享 2).localStorage 永久性的存储 数据共享 3).api clear（）删除所有值，ff 中没有实现 getItem（）根据指定的名字 name 获取对应的值 key（index）获得 index 处的值 removeItem（name）删除由 name 指定的明值对 setItem(name，value) webSocket 如何兼容低浏览器？Adobe Flash Socket 、 ActiveX HTMLFile (IE) 、 基于 multipart 编码发送 XHR 、 基于长轮询的 XHR 线程与进程的区别进程是系统进行资源分配和调度的一个独立单位。线程是进程的一个实体, 是 CPU 调度和分派的基本单位。 一个程序至少有一个进程, 一个进程至少有一个线程 线程的划分尺度小于进程，使得多线程程序的并发性高 另外，进程在执行过程中拥有独立的内存单元，而多个线程共享内存，从而极大地提高了程序的运行效率 线程在执行过程中与进程还是有区别的。每个独立的线程有一个程序运行的入口、顺序执行序列和程序的出口。但是线程不能够独立执行，必须依存在应用程序中，由应用程序提供多个线程执行控制 从逻辑角度来看，多线程的意义在于一个应用程序中，有多个执行部分可以同时执行。但操作系统并没有将多个线程看做多个独立的应用，来实现进程的调度和管理以及资源分配。这就是进程和线程的重要区别 如何对网站的文件和资源进行优化？这道题考察《雅虎军规》 尽可能减少 http 请求次数，将 css, js, 图片各自合并 使用 CDN，降低通信距离 添加 Expire/Cache-Control 头 启用 Gzip 压缩文件 将 css 放在页面最上面 将 script 放在页面最下面 避免在 css 中使用表达式 将 css, js 都放在外部文件中 减少 DNS 查询 最小化 css, js，减小文件体积 避免重定向 移除重复脚本 配置实体标签 ETag 使用 AJAX 缓存，让网站内容分批加载，局部更新 六种减少页面加载时间的方法 优化图片 图像格式的选择（GIF：提供的颜色较少，可用在一些对颜色要求不高的地方） 优化 CSS（压缩合并 css，如 margin-top, margin-left…) 网址后加斜杠（如 www.campr.com / 目录，会判断这个目录是什么文件类型，或者是目录。） 标明高度和宽度（如果浏览器没有找到这两个参数，它需要一边下载图片一边计算大小，如果图片很多，浏览器需要不断地调整页面。这不但影响速度，也影响浏览体验。 当浏览器知道了高度和宽度参数后，即使图片暂时无法显示，页面上也会腾出图片的空位，然后继续加载后面的内容。从而加载时间快了，浏览体验也更好了） 减少 http 请求（合并文件，合并图片） 你都使用哪些工具来测试代码的性能？（暂弃） Profiler JSPerf（http://jsperf.com/nexttick-vs-setzerotimeout-vs-settimeout） Dromaeo 什么是 FOUC（无样式内容闪烁）？你如何来避免 FOUC？ FOUC - Flash Of Unstyled Content 文档样式闪烁 &lt;style type=&quot;text/css&quot; media=&quot;all&quot;&gt;@import &quot;../fouc.css&quot;;&lt;/style&gt;而引用 CSS 文件的 @import 就是造成这个问题的罪魁祸首。IE 会先加载整个 HTML 文档的 DOM，然后再去导入外部的 CSS 文件，因此，在页面 DOM 加载完成到 CSS 导入完成中间会有一段时间页面上的内容是没有样式的，这段时间的长短跟网速，电脑速度都有关系。解决方法简单的出奇，只要在 &lt;head&gt; 之间加入一个 &lt; link &gt; 或者 &lt; script &gt; 元素就可以了。","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"Hello Hexo!","slug":"hello-hexo","date":"2018-07-03T06:32:51.000Z","updated":"2018-09-01T08:17:00.000Z","comments":true,"path":"2018/07/03/hello-hexo/","link":"","permalink":"https://blog.yanng.io/2018/07/03/hello-hexo/","excerpt":"","text":"搭建 GitHub + hexo 博客系统，历时两天。 并且做了全站 https 解析处理，更换 nexT 主题，完成基本配置，绑定七牛云图床等操作。 至此，hexo建站计划暂时告一段落。今后会利用零散时间将旧站文章陆续迁移过来，并做一系列完善和优化。 Yep！","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://blog.yanng.io/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2018-06-20T08:27:32.000Z","updated":"2018-06-20T08:27:32.000Z","comments":true,"path":"2018/06/20/hello-world/","link":"","permalink":"https://blog.yanng.io/2018/06/20/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"作家王小波","slug":"zuo-jia-wang-xiao-bo","date":"2017-09-24T07:24:54.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/09/24/zuo-jia-wang-xiao-bo/","link":"","permalink":"https://blog.yanng.io/2017/09/24/zuo-jia-wang-xiao-bo/","excerpt":"","text":"一直挺想写王小波，想让更多的人知道他写的东西，可惜无论怎么写我觉得都是惨淡的。有人说他是世纪末唯一一个活明白的人，可惜就是走的太早，不过可贵的是他写的东西还能留到至今。见得一书评，由 @nici 所写，冒昧搬过来，一同了解王小波。 20年前的今天，也就是1997年4月11日，王小波病逝于北京。今天写个关于他的书评，也算是个巧合吧。 曾经大学里会流行这么一句话：男生不可不读王小波，女生不可不读周国平。高晓松曾这样评价说：以我有限的阅读量，王小波在我读过的白话文作家中绝对排第一，并且甩开第二名非常远，他在我心里是神一样的存在。 据说，王小波一度成了一个接头暗号，文青们根据对王小波的喜爱程度辨别对方是否为同类，可是，无奈我可能有些许“反骨”，越是大众趋之若鹜的，越是打心眼里抵触；越是眼见着大家如火如荼地在王小波死后掀起了这场轰轰烈烈的造神运动帷幕，越是想在内心冷静之后再一个人关起门来阅读被符号化了的王小波的书。于是，在读了他的几本书之后，在读完放置了n久之后，有了下面的内容。 其实，对王小波作品的风格趣旨进行解读，看看王小波哪里受了福柯影响、哪里体现了虚无主义，自有专家学者和大批迷弟迷妹们去做，还轮不到我来献丑，我喜欢王小波理由一点也不深刻和复杂，就跟我欣赏其他男人的标准一样，第一，独立思考。第二，智慧担当。第三，幽默风趣。 第一，独立思考，用自己的判断力来寻找真理。尼采曾在一首诗中说“有一天有许多话要说的人，常默然把许多话藏于内心。有一天要点燃闪电火花的人，必须长时间做天上的云。”王小波就像天上的云一般，追求自由自在–精神自由、心灵自由和人性自由。王小波曾说“你知道我在世界上最珍视的东西吗？那就是我自己的性格，也就是我自己思想的自由”，连李银河都认为“在我心目中，小波是一位浪漫骑士，一位行吟诗人，一位自由思想家”。 与其说王小波是向往自由，不如说他是愿意独立思考。越是读书，我越是发现思辨力是一项多么重要且不可多得的能力。当大多数人都选择沉默的时候，当大多数人都安分守己、甘于平庸，不敢不愿不想思考，以至于或主动或被动地选择或陷于“平庸之恶”时，他却敢于大胆表达、乐于当个“另类”，而且，不是为了另类而另类，不是为了叛逆而叛逆，只是因为“我活在世上，无非想要明白一些道理”而选择思考。对于一切有独立思考能力的人，一直以来我都很喜欢。 第二，智慧担当。王小波对我的吸引力不仅限于有独立的思考力、不人云亦云，更在于他对自由的追逐、对人生理想的坚持不必以牺牲或殉道这种惨烈的方式来呈现，不必像顾准、老舍、潘光旦、陈寅恪甚至梁济、王国维那么悲剧和令人唏嘘的结局，而这种“有别于常”的方式正是王小波的“智慧”。 诚然，这里有因时代因素所造就了的王小波走了一条简单的“有别于常”的非悲剧的道路的机会，年轻气盛时我会不以为然，甚至深感丢脸。但是，我想说，当我们的人生有了一定的阅历之后就会发现，把人生之路越走越宽何尝不是一种性格、一种智慧、一种担当。智慧是什么？智慧是选择，智慧也是隐忍，智慧更是藏珠韫椟。宁为玉碎不为瓦全地保有尊严和理想的“贞洁行为”不是不好，但在了解了季羡林、汪曾祺、杨绛等人的牛棚、干校经历之后，我越发觉得在艰难境遇里选择韬光养晦、厚积薄发其实并不简单。智慧的人，我喜欢。 第三，幽默风趣。林语堂曾说“幽默没有旁的，只是智慧之刀的一晃”。确实，智慧不足的人没有幽默，而只有滑稽；智慧刚好够用而没有富余的人也没有幽默，而只有一本正经；只有智慧足够而有盈余的人，才有幽默，因为幽默是智慧的自然流淌。而王小波最为人称道的可能正是他够大胆、够荒诞的黑色幽默，看到那些或是恶毒腹黑大实话、或是清新淡爽的小鸡汤、或是堪比韩剧桥段的肉麻缠绵情话，你完全可以想见这家伙放到今天绝对是个“一句能顶一万句”的金句段子手，绝对完胜那些自吹自擂号称大V的自媒体，甩那些东拼西凑矫揉造作的公众号n个光年，然后你就可以想见王小波那张丑脸上又会泛起坏笑，然后你就知道什么叫玩世不恭、什么叫狡黠闷骚。哈哈，这种时而温柔似水、时而撒娇耍赖、一贯聪明绝顶、一贯机智幽默、一贯学识渊博的理工男（据说，王小波会编程，1997年，王小波正是猝死在了用于写作的电脑前），我喜欢。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[]},{"title":"人生如戏，演员何苦为难演员","slug":"ren-sheng-ru-xi-yan-yuan-he-ku-wei-nan-yan-yuan","date":"2017-09-24T07:21:28.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/09/24/ren-sheng-ru-xi-yan-yuan-he-ku-wei-nan-yan-yuan/","link":"","permalink":"https://blog.yanng.io/2017/09/24/ren-sheng-ru-xi-yan-yuan-he-ku-wei-nan-yan-yuan/","excerpt":"","text":"最近刷完一本名字特别鸡汤的书，叫《所谓情商高，就是会说话》。 这本书的作者是来自日本的一名广告鬼才、文案写作大师佐佐木圭一，因写过一本《别把成功卡在说话上》而闻名。 窃以为人的潜意识里觉得缺少什么，那日常必定会强调什么。我想这也可能就是社交软件之所以会有类似朋友圈这种分享功能的原因。 从没想过我会选择为了提升情商而去专门找一本方法论去攻读。总认为如果把它当作指标刻意去针对地研究，本身就是一种低情商的行为。 想起曾经有一次我问到朋友：「哎你说，我的情商可不可以用智商去弥补？」 结果朋友甩来一句：「说的好像你也有智商一样」 我…… 然而，我还是刷完了这本书。 我承认其中的方法论还是有一些用处的，第一章结尾就有所总结： ①利用“投其所好” 既能获得对方的好感，又能实现自己的期望。 ②利用“儆其所恶” 能形成强大的强制力。这是措辞的最终手段。 ③利用“选择的自由” 能够引导对方，同时又不会留下被迫感。 ④利用“被认可欲” 对方即使很难对付，也会乐于回应期待。 ⑤利用“非你不可” 能让对方感到只有自己被选中的优越感，从而乐于做出回应。 ⑥利用“团队化” 能使对方产生伙伴意识，即使是麻烦的请求，也会乐于接受。 ⑦利用“感谢” 能让对方隐约产生信赖意识，从而难以轻易拒绝。 看完第一章，我稍稍地阴谋论了一下已经可以灵活运用书中所写到方法的人。有些细思极恐，他可以从脑中像从背包里挑选装备一样轻松地使用说话的技巧，从而达到自己的某种目的。 啧，很可怕了。 这就好比有人研究出一劳永逸的解决方案，只要照做，就一定能变成想要的样子。如果掌握了技巧，那岂不是可以任意穿梭时空？按照正确的方法，人类一定可以长生不老…… 吓得我赶紧收回戏精一样的思维。 书的后半部分倒是让我觉得写的有些乱，好像慢慢就跑到营销相关的消费者心理学方面上了。比如一句文案，套用以上的哪种方式，便可以将商品的收益得到提升。描述的形式又类似于综艺节目问答环节，让人一头雾水。甚至完全抹掉了书的前半部分给我的好感。所以在这里也就不展开讲了。 不过话说回来，全书最有用的一句话就是：所谓合不来，其实原因多在于没考虑过对方的心理。交流的基本就在于「能在多大程度上揣摩对方的心理」。 我觉得这才是人与人之间交流的精髓所在，无论是“投其所好”还是“儆其所恶”之类情况，了解对方的需求比什么都重要。掌握了对方的需求，那么在一定程度上，自己的需求也就被满足了。 总之，人生如戏，该配合你演出的我尽力在表演。 另说一句，爸爸以后再也不买鸡汤书了。[再见]","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[]},{"title":"前端？","slug":"qian-duan-2","date":"2017-03-29T09:18:50.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/03/29/qian-duan-2/","link":"","permalink":"https://blog.yanng.io/2017/03/29/qian-duan-2/","excerpt":"","text":"这几天刷知乎，想更多的了解前端这个职业。呵。果不其然，都在说当今最火的职业非前端开发莫属。 前端工程师： 一半是designer（设计师） 一半是coder（程序员） 我看前端前端有多火？ 前端工程师这个职位在智联招聘排行榜蝉联了三个月的榜首，每天都有大量的市场需求，就连十八线城市都缺前端人才。 （智联排行榜） 根据中国人啥火就一窝蜂往里扎蹲儿的尿性，相比前两年最火的UI设计师，前端无疑是很多即将毕业的学生的选择。 市场需求变化这么快，根本就不给一些毕业生反应的机会。而培训机构往往会比毕业生走的靠前。 很多人疑惑，为啥花了将近两万的学费培训了大半年出来找工作还是这么难？ （前几日刷屏的有关UI设计师的梗） 先卖个关子。现在有个特别有意思的现象，大公司总是缺高级前端工程师，而社会上那些培训班速成出来的web开发相关的大量的人却找不到工作。 （前端工程师相亲的梗） 不止前端，还有UI设计师，会计师，微信公众运营，挖掘机，烹饪厨师等等，类似这个现状的例子不胜枚举。 互联网市场瞬息万变，职位也是不断地在变化，尤其是在中国——世界第二大互联网大国。大部分的职业供求其实呈一个橄榄球状，顶端人才和初级人士位于两端，中规中矩的人才一抓一大把，这也是为什么那些除了初学者或是精英的人会经常感觉到竞争如此之激烈的原因。 （前端工程师必备技能） 培训机构虽然能走到毕业生前面，却始终追赶不上市场的变化。后知后觉的学生花了大把的学费才发现该职业的火热期早就过去了，悔不当初却也没有任何补救的措施。 理想主义当年高考前，为了激励自己学习，经常狂补鸡汤，找《乔布斯传》等之类的大佬自传看，之后便痴迷于互联网大佬们的创业故事。 （左一是《成为乔布斯》作者布伦特·施兰德，左二是比尔·盖茨，左三是史蒂夫·乔布斯） 虽然现在知道，当时只是不同国情下的时势造英雄的特例，但目前仍如崇尚美国个人英雄主义情结一样，具备理想主义色彩般的人格，并挥之不去。 用人话说就是，对待事儿总爱抱有一定的幻想，思考问题不从现实的眼光出发。 就像看漫威长大的孩子，总以为自己有天能够拯救世界。看大佬创业的故事，就会天真的以为自己拥有改变世界的力量。 入不入坑？高考完等成绩公布的日子挺难熬，选专业更头疼，还好可以刷贴吧论坛消磨时间。 当时年轻不懂套路，被培训机构软文深深打动，看搬砖屌丝如何逆袭成为IT老鸟走向人生巅峰，看的我热血沸腾。 心想咱也挺喜欢瞎折腾。那会儿就在某宝上买零件自己组装过一台iPhone4，在PC上装黑苹果倒腾各种驱动，刷机root安卓手机，瞎几把用Ae做特效，PS作图和Pr剪辑片子玩儿…… 虽说是初生牛犊子水平，但对技术的痴迷已经无法自拔。就像无所不能的父辈，接电线换车胎修空调，什么都难不倒生于70年代的他们，工业的骨髓已经随着信息时代的步伐渐渐渗入到我们的血液里。 （工匠的形象） 填专业时考虑到诸多因素，权衡利弊之下做出了选择：省内的学校一律学传统行业的专业，如机械土木等。省外的学校一律学计算机，如软件网络之类。 嗯，最终被「机械设计制造及其自动化」录取。 还没反应过来，就已经大三了。三年时间其实一直过的心不在焉，那感觉就像在和一个不喜欢的人谈恋爱。 考虑过学习的语言和方向。Java、C语言，自学了一段时间，如今只会写个hello world。看过很多iOS开发，Android开发的书，发现不会一门语言真的是举步维艰。 （所有的编程语言） 我觉得最恶心的就是一直犹豫不决。不止一次地想要说服自己，编程这个饭碗不要轻易端起来，“吃青春饭”，“话少钱多死得早”这些并不是危言耸听，安心找个朝九晚五的工作安稳地过日子吧…… 博客之路两年前一次偶然的机会，我接触了阿里云服务器，慢慢学会了买域名，WordPress建博客，套用大神做的主题，也算是像模像样地会做网站了。 （我的个人博客） 最早知道的个人博客，要属@罗磊的博客，一路下来，看着他和@杨左到处旅行，直到两个人拿到结婚证。从他的博客中学到不少东西，一直佩服磊哥的执行力和分享精神。 （https://luolei.org） 我建立博客以来，接触到了不少前端的东西，也写了很多文章，始终庆幸自己没有丢掉深度思考的能力。 一次事故期末是高校查分的高峰期，集中几天访问量居高不下，大部分查分网站都挂了。 微信后台接的第三方查分网站是超级xx（不便透漏），这些年一直在用。它有简洁美观的UI界面，而且因为是类似爬虫的原理，直接可以把各大教务系统的学生成绩和课表等数据直接抓包读取，安全系数较高。同时这样还跳过了学校要求的评价教师的机制，这也是大部分学生爱用它查成绩的主要原因。 （微信查成绩UI界面） 但这次查分高潮也没能让它幸免于难，整个二级域名直接不能访问。原因不用想也知道，服务器带宽太小，访问人数过多直接崩溃了，这就导致接入的200+的高校都不能使用查成绩功能。 着急了好几天。联系后台开发人员，但是听说他们当时接了一个项目，在没日没夜赶工程，顾不上修复，也没时间理我。 好的一点是官网把成绩课表的代码开源了，可以自己建服务器搭载教务系统。但代码是Java写的，我用了一个礼拜的时间，始终不会把代码挂载到服务器上，数据库文件也不知道怎么调试。 几乎每天都有很多人在微信后台留言，问为什么总是查不了成绩。那次，我深刻的知道了什么叫做绝望，以及掌握一门技术是多么的重要。 二级试水因为要考计算机二级，接触了web程序设计的一些东西。用了一个礼拜时间过了一遍HTML和CSS的基础，又看了看知乎上一些前端的行业分析，觉得自学起来问题不大。 其实计算机二级证书对于以后的职业生涯没有任何用处，但还是觉得要有个起点来打开前端的大门。或许我会感激当时报名时临时将二级C语言改成二级web程序设计的决定吧。 焦虑或许对未来太过于敏感，而又想保留有一点点的理想主义。经历了几年不断地试错，大致规划与重新规划，矫正方向使得逐渐妥协于现实，让理想变成幻想还是落地，总想保有顾全大局的幼稚想法却总会失去更多。 我觉得这才是我最真实的境况。想法一团乱麻，写的东西也是逻辑混乱。看似说了好久，也说了好多，却又好像什么都没有表达，也不用表达的特别清楚。反正是写给自己看。 慢慢的。关掉了空间，删掉了微博，不去看朋友圈，变得不会表达，荒废了微信公众号。每过一阵把自己的思绪理一理。 想到过去，想到将来。 焦虑，皆由心生。","categories":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/categories/%E5%89%8D%E7%AB%AF/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"随笔","slug":"sui-bi","date":"2017-03-14T13:24:40.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/03/14/sui-bi/","link":"","permalink":"https://blog.yanng.io/2017/03/14/sui-bi/","excerpt":"","text":"小时候会羡慕那些认识好多人的同学，下了课上个厕所一路都有可以打招呼的人。 不管关系熟不熟，但总不会出现一个人走时的那种尴尬。 现在明显不同于以往的境况，在路上走时会时不时的撞见认识的人，有的只有一面之缘。相视一笑，擦肩而过。 也算是得到了曾经想要得到的东西吧。但已不同那时的向往，一直想和一些无效的社交断他个干净。 之前，可能会焦虑于写不出东西。每次装得一本正经，仪式感凝重，又恐于胡说八道之嫌，且又不想陈词滥调。 如此一来二去，自己就把自己束缚，但又总觉得想表达点儿什么。 现在，反倒释然了。既然没有想说的，那就不要说了。记录只是一种生活方式，但更重要的是能活得舒坦一点。人生不就这点儿可怜的追求么。 高强度的写作很累，索性甭写了，打两把游戏，跟朋友吹吹牛逼，何尝不也是过日子。 貌似现在去真存伪才是这个社会的潜规则。 就当我是个悲观主义者吧，总是只能看到阴暗的那一面，正能量都是那些演员的即兴表演。至少感同身受过的是这个样子。 尤其在这片厚德载物的土地。既然德可以载万物，为什么还是放不下那扯淡的面子，只听得进违心的谗言，容不下真诚的怼呢？ 看来，船大能度人，心小却放不下一粒沙。 前两天吃完晚饭和舍友侃大山，说起这个萨德系统。从抗韩扯到第三次世界大战，从乐天扯到经济贸易全球化。把年轻人的脑洞惊奇口无遮拦发挥的淋漓尽致。 随着话题的深入，一些信息量略少的，或是有其他事儿的参与者便纷纷退出扯淡的阵营。剩下的二三人学着战略忽悠局局座的模样儿继续满嘴开炮。 每次总是无一例外地回到那个困扰所有人的三大终极问题——我是谁，我从哪儿来，我要到哪儿去。 得。自己的事儿还没整明白，就甭咸吃萝卜淡操心了，该干啥干啥去。 群众生活环境安逸，戾气却是不小。 虽文化水平良莠不齐，但都学会了如何娴熟地使用阴谋论。整日付精力于妯娌邻里同事之间，抠细节在柴米油盐里。 不可否认，这也是一种生活态度。 想起了老罗的锤子手机针对跑分软件负优化的事儿。 所有厂商的手机都在堆砌发烧硬件，再在系统层面调教，好让手机能在安兔兔上跑出高分。锤子却反其道而行之，检测到跑分行为主动降频CPU使分数低的用户想骂娘。 只是举个例子想说明目前的写作也是这样。文章无论从何种角度都不具备爆文的气质，这又何尝不是一件好事情。 行了，想到哪儿写到哪儿。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"没题目","slug":"mei-ti-mu","date":"2017-03-01T08:51:43.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/03/01/mei-ti-mu/","link":"","permalink":"https://blog.yanng.io/2017/03/01/mei-ti-mu/","excerpt":"","text":"从家走的时候收拾东西，无意中在抽屉里翻出了几张褶皱不堪的信纸。 情书？ 不能啊，谁给谁的？ 打开发现是三年前自己给自己写的一封信。 当时写完就把信让爸看去了，之后信的去向就不得而知。 现在居然还能重见天日，多亏自己当初没夹课本儿里，不然早被扔锅炉里烧了。 走的时候把信偷偷揣进兜儿，等车还没来，抱着新鲜感翻出来瞅了一遍，虽然这是自己写的。 嗯，字儿还说得过去。（2333） 看的过程中我不停寻思，其实最想知道的就是当时写信的我混的咋样，而如今的我又是个什么逼样儿。 三年，其实不长，却也不短。 那时，我还是一个唯唯诺诺，遇事举棋不定的少年，走路低头看地极度不自信，整天忧郁不知何去何从。 唉，真他娘的没出息。 现在，改变了哪些，又在哪里做出了些许妥协。 三年或是个分水岭。而一封信就像是之前的记忆抽出来的片段，把我拉到历史里的我面前，如同在镜子里窥视全身赤裸的自己。 曾经眼神里经常闪烁的东西如今是否变得浑浊，坚守的价值观有没有被颠覆，一直秉承的理想主义又消磨殆尽多少。 答不上来，只知道变了。 变得越来越现实，越来越市侩，变得更熟练的察言观色，学会了油嘴滑舌的腔调，浑身上下的套路，各种段子也信手拈来，懂得了遇事总会作出一定的妥协。 有人托着下巴说这是生存之道，有人攥着拳头说这活得不地道。 听过太多的「过来人」说：世间无趣的正人君子太多，缺的是训练有素的流氓。 为什么会变成这样？恐怕都在反思的同时，渐渐磨平了本就有的棱角…… 妈的，又扯远了。 该进站了。还记得走之前在家吃的最后一顿饭，是爸连夜准备的炸酱面。刚取到票后接的电话，是妈殷切的问候。 复杂的心情和茫然的感觉有种说不出的滋味，在站台蜉蝣一般地立着。 信里又好像什么都没有写，我也好像什么都没有说。 朝着和谐号开来的方向，看着远处的小黑点慢慢变大，混沌的目光似乎在等待着某个东西的洗礼。 那是什么？ 我不知道。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"万物皆有裂缝，那是光照进来的地方","slug":"luojisiwei","date":"2017-02-17T09:35:55.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/02/17/luojisiwei/","link":"","permalink":"https://blog.yanng.io/2017/02/17/luojisiwei/","excerpt":"","text":"万物皆有裂缝，那是光照进来的地方。 这是我最近看到最多的话。自从莱昂纳德·科恩离开这个世界，他的这句歌词变成了各个行业最爱用的一句话。 元旦的时候和几个朋友通宵打麻将，也就没顾上看 《时间的朋友 2016 》 跨年演讲，之后也没找出视频，而是直接看书，边看边标记反而更能捕捉到一些值得收藏的地方。 不算太长的 38600 字演讲稿，我年前年后零碎的时间加起来用了三个小时才读完。过程较仔细，因为每一节都能引发很多思考，干脆慢下来，甚至想再慢一点。 对于这篇演讲稿，倒剖析不出什么商界的秘密，咱也没有那能力。所谓“外行人看热闹,内行人看门道”，更多的是看看罗胖对这一年互联网热度事件的解读方式。 黑天鹅 演讲以黑天鹅事件为切入点。 2016 年确实有三大难忘的黑天鹅事件： 3 月 15 日的 AlphaGo 围棋打败李世石； 6 月 24 日英国脱欧； 11 月 9 日特朗普获总统大选。 什么是黑天鹅？ 黑天鹅代表不确定性。在发现澳大利亚的黑天鹅之前，17世纪之前的欧洲人认为天鹅都是白色的。但随着第一只黑天鹅的出现，这个不可动摇的信念崩溃了。黑天鹅的存在寓意着不可预测的重大稀有事件，它在意料之外，却又改变着一切。 演讲中一共提到了 五只黑天鹅。 第一只黑天鹅：时间 2016 年资本界，或着说是互联网圈存在的现状。移动互联网份额依旧在疯涨，至少每人一部手机，而且是智能手机；BAT 日收入依旧以亿为单位计算，互联网市场还是百度、阿里、腾讯三巨头占据上风…… 2016 年的流量之战，虽然不断有年轻的公司试图进来瓜分流量，但无可否认 BAT 总是赢家。因此行业内有了那句： “过去几年，市场上出现了这样的江湖门派，不是姓马，就是姓马。” 在这里多提一句，为什么不姓李？跟百度 200 亿投资糯米做百度外卖有关，为了拓宽市场，李先生不惜重金，同时也精疲力尽。再加上这一年各种公关危机事件，导致现在百度的市场份额远远不及腾讯阿里，这么做值不值？时间会证明一切。 我们再回到主题上，时间。罗胖在演讲上提出了一个概念，GDT（即Gross Domestic Time，国民总时间）。未来时间才是商业的终极战场，谁能让用户支付时间，谁就是赢家。 如今我们的日子越过越好。我想起了郭德纲在一档综艺节目回应观众的话。我们很早以前用的杯子，没现在花样儿多，有玻璃的、不锈钢的、瓷的、高脚的等等，在那个时候的人看来，现在家里放着么多种杯子就是吃饱了撑的，但你现在一点儿也不觉的奇怪。这是因为 时代好了，消费也升级了。 消费升级，在我们的身边正在展开，有的时候你看到的东西是一模一样，但是它背后的那个道理正在发生变化。这也就不难理解吴伯凡说的那句 用户不会再为柴米油盐酱醋茶的“茶”而付钱，用户会为琴棋书画诗酒茶的“茶”而付钱。 第二只黑天鹅：服务 如何在时间的战场上取胜呢？ 除了上面提到的让用户支付时间，还要为用户着想，优化用户的时间。 如果你能为用户整个消费的效率最大化，无疑就取得了用户最大的满意度，甚至可以培养用户形成成瘾现象。 不确定的失去，让人恐惧。不确定的得到，让人兴奋。 赌场、餐厅和游戏都用到了成瘾设计。 第三只黑天鹅：智能 这里的智能指的是人工智能。 提到人工智能，最火的大概就是 AlphaGo 了。2016 年，谷歌、苹果、亚马逊、Facebook、微软以及国内的 BAT 等，都在人工智能领域有所动作。 说起人工智能，就少不了前些年特别火的词——大数据。其实在校园，经常可以见到「大数据培训」的机构到处发传单，我接过一张传单扫了一眼，对朋友说，这东西前景还不错，但 只有大企业才有能力收集大数据，也只有大企业才能把手头的大数据的价值发挥出来。 人工智能的未来谁都看不清楚，但做它总没有坏处。 第四只黑天鹅：认知 2016 ，我们的认知在不断变化。 感受最深的就是：多家直播平台拔地而起，催生了大批网红。 徐小平这么定义网红——不靠任何传统权威认证，自己就能拥有权威的权威。 艾克里里、天才小熊猫、回忆专用小马甲、谷阿莫、追风少年刘全有、old先、小野妹子学吐槽、英国报姐、同道大叔、一只鸡腿子、黄文煜小盆友、使徒子、谷大白话、咪蒙、胡辛束、越心Nami、哆啦baby、佟丽娇、雨薇薇、_kimmyyyybaby、冉大人、安然、miya、林言-高服帅、sunlike、PDD（娇妹）、miss、小智、white、若风、55开、uzi、小漠、骚男、笑笑、董小飒、张大奕、雪梨、onlyanna、林珊珊、喜哥、delicious大金…… 我承认我只知道其中的几个，我敢说你也不可能全都认识。 不管你听没听过，不管你同不同意，不管你喜不喜欢，他们都红了。我们这个时代神奇就神奇在这儿。 还有个例子。我们每天的生活都是碎片化的，而「快手」就很好的抓住了这一点。目前它估值 206 亿，日活跃用户 4000 万，就在写这篇文章之前的不久，有传言称快手将于下半年赴美上市。 这也就不难看出微博、QQ空间和今日头条为什么极力想做短视频这块儿。每次朋友打发时间刷微博小视频，我都会调侃：“又看快手呐”。 不得不说， 2016 是颠覆认知的一年。而我们，也都 被迭代 着认知。 第五只黑天鹅：共同体 在正式开始之前，罗胖又引入一个“后真相”的新概念。 后真相的意思，不是没有真相，而是对这个世界来说，情绪的影响力已经超过了事实。 如今人们建立共同体的方式发生了变化。除了国家，血缘、地域、阶层、单位、专业，以及认知，这些体系的概念在逐渐模糊，甚至脆弱。 曾经在朋友圈看到过几句话，印象较为深刻。 网络社交很脆弱。平时你我有千万个共鸣，但今天只要有一件事看法相反，可能彼此就认为对方是傻屌了。总之，现在表达个人喜好是件瞻前顾后的事。 自打人类出现，抱团取暖便成了人的本能。但随着越来越浮躁和充斥各种欲望的社会发展，人类对共同体的认知变得不是那么清晰。市井喜欢看热闹，看客愿意追八卦，强者希望对手倒下…… 他们不肯多一点点肯定和喝彩，但绝不少一点点质疑和批评。 我们不必非要将自己和当事人绑在一起，但至少做到不黑。 领悟 所谓更牛，就是换个罪受。 这是 2016 年让罗振宇领悟最深的一句话。 作为观望者，我完全同意这句话。一切努力和苦逼，都是为了更牛，为了更加体面，为了实现更大的价值。其实我的领悟： 要想成为一个体面的人，你得是个理想主义者。但前提，你更得是个执行者。 以上。 题图来自：CC0","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"2016 过去了","slug":"2016summary","date":"2017-01-25T16:42:30.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/01/26/2016summary/","link":"","permalink":"https://blog.yanng.io/2017/01/26/2016summary/","excerpt":"","text":"就像有人在朋友圈里说的： 2016，见同样的人，做同样的事，吸同样的霾。 每次过年，每个人像是猝不及防被什么东西扯了一下，不经意就迈过了一道门槛，恍惚间就又老了一岁。如果不是日历变成了 2017，都意识不到自己又过了一年，痴长了一岁。 一到年底，每个人过电影一样回顾过去的一年，并着手开始那也许永远完不成的年终总结和 2017 计划。似乎只有这样，才能找到在这个世界的存在感。 2016每到总结的时候其实有蛮多想说的东西。回过头看看一年前的自己傻逼的样子，心里庆幸这一年没有白活，明年再接再厉，争取把昨天的自己活成傻逼，这样才能证实自己确实没有原地踏步。 2016 年依旧发生了不少事儿。 直播平台叫得上来的叫不上来的又多了一大堆；王宝强离婚网上闹的沸沸扬扬现在也成了百姓茶余饭后的谈资；微信小程序的到来也不知道能不能取代臃肿的 APP；薛之谦终于火了；AlphaGo 围棋打败人类；小李子终于获得奥斯卡影帝称号；魏则西事件再次将百度的口碑推向风口浪尖；郭曹师徒在微博开骂战反目；罗一笑也离开了这个世界…… 我们永远无法知道下一秒会发生什么。我们可能什么都不知道，但唯一知道，嗯，我他妈还活着。 2016 年依旧很忙，但还算充实。 回想一下，感觉像是经历过很多很多事，又好像什么也没有发生过。有时这操蛋的理想就和操蛋的现实一样，都不太靠谱。 年初，我哥意味深长地说，男人在外有三宝：女人、衣服和手表。女人指女朋友；衣服就是出门要有一身体面的衣服；至于手表，戴总比不戴有范儿。 于是，一年过去了，只有手腕上多了一块表…… 去过的地儿 2016 年去的地方挺多。 清明三天假期，我和朋友俩人去了趟天津，其实就是想换个地方透透气儿。本来想低调压压马路，没想到在天津上学的同学知道，最后一天我们一起吃了个饭，在这里感谢亚茹童鞋和常林童鞋。 天津之眼 暑假在北京的杨杨哥家住了大概一周。因为全家人都挺忙，我就一个人在北京瞎逛。故宫鸟巢水立方得见见啥样儿，完事儿专门冒雨做公交去了趟朝阳区望京，到锤子科技大厦楼下充值信仰。 （身后的 Alibaba 大厦挺嚣张啊） 从北京回家没几天，就开始着手计划去宿舍哥几个家里认认门。先见了在阳泉上班的贝贝哥和朋友，随后直接北上大同，跑一趟云冈石窟和方特也没算白去。剩下的几天队伍逐渐壮大，应县和朔州相应的逛几个地方，就此“北上”之旅算是结束了。 云冈石窟 方特欢乐世界 应县木塔 十月底去无锡参加“大学生物联网大赛”，顺便坐城际高铁在上海待了一晚。最大感受是：气候太适合我！因为从小就怕冷，又不喜欢穿的太厚重，也不是太受的了北方的干燥。一晚的魔都之旅我甚至产生了做一名“张江男”的想法。 何为张江男？ 熬夜准备比赛的代码，用汉庭的电视当显示器，麻麻再也不用担心我眼花。 ) 回来把整理所有拍摄的素材用 iPhone 上的 GoPro 官方 APP 简单剪了个视频，还挺方便。 顺便说一句，无锡上海的妹子身材真心不错～ 看过的电影依旧没钱，但还是给不少电影贡献了票房，虽然一年不可能看遍所有自己喜欢的片子，但还是蛮满足的，感谢肯陪我看电影的朋友。 ) 读过的书2016 年没少买书，也没少看书。粗略的罗列了一下，半年的时间大概看了 22 本书，平均一周一本的速度。真是“买书如山倒，读书如抽丝”！希望以后继续坚持看书的习惯。 ) 听过的歌平时听歌主用「网易云音乐」，听音乐成了每天都会做的事。手机上使用的高频 APP 除了「微信」、「微信读书」和「Safari」，就是它了。 晒一下云村用大数据分析的关于我的年度报告： )) 剁手过的数码每年都有败家的数码清单，今年入手了两件电子产品。 前半年买了一部 kindle 7，后来因为 ppi 太低和没有背光而出手闲鱼，同时又从闲鱼购得一部二手的 kindle paperwhite 2 ，一直用到现在，陪我度过了无数个单身的夜晚。（手捧 kindle ，以书为伴…） ) 年底入一台银色的 iPad mini 2（ WLAN 32G版），分了三期京东白条，7.9 寸便携性很强，主要用来看视频。 ) 写过的文章写博客两年了，零零散散也写了不少东西，今年是第三年。目前公众号的内容和博客是同步的，大部分还是以书评为主。 域名：xiaobs.cc ) 每个月尽量让自己写点什么，慢慢就积累了不少。 ) 网站累计访问量只有 2W ， SEO 的优化和网站的热度和访问量有着很大的关系，不过网站每天都有流量，我就很开心了。 ) 要说遗憾，谁能没有？ 今年仍然没有开始实施增肥计划，体重 120 斤依然没有变化。 夜里熬夜，早上赖床的毛病还是没能成功改善。大概是更喜欢独处的时光，白天根本不可能，也只能在夜晚通过透支身体为代价，给自己提供安静的独立思考的时间。 看的书不够多。 想买的东西先咽咽口水，只能对自己说再等等吧。没钱要啥自行车？ 还是单身… 2017 大致规划其实我很少定计划，因为计划永远赶不上变化。从马云爸爸的“梦想还是要有的”，到王健林的“先定一个小目标”，所以总要给 2017 年定个大致的计划。 以前，我总是很贪心。什么事情都想做，什么东西都想要得到。其实要做到所有事情都能兼顾，比登天还要难。希望自己能够弃繁从简，在「想做的事情」方面不断做减法，专心做几件事，并把它们做好。 开始健身计划。增肥增肌，这也是爸妈希望的。 接触前端。计算机等级考试选的 web 程序设计，自己也乐此不疲的折腾了几年时间。既接触代码，又涉及交互。通俗地说，相当于前端由一半程序员和一半网页设计师构成，挺符合我的口味。而且前端的前景还不错，随着移动互联网的不断成熟，再加上微信小程序的到来，以后对前端的需求将会越来越大。以后文章再详细说。 读更多的书。当务之急，先把 2016 年囤的书看完。 写更多的文章。其实每次写作都会有仪式感和强迫症。就像一个段子写的：我在开始写之前，已经下楼买饮料、擦桌子、掀头发、整理桌子、挑歌单很久很久了。希望 2017 能够克服这种病态，让表达不再拘束。 经历更多。说的是一些工作经验和社会经验，在成为一个体面的成年人之前，还有很多的路需要走。 去更美的地方。如果有机会，仍然愿意去一些美丽的地方看看，和最好的朋友一起。 遇见一个人。都说好看的皮囊千篇一律，有趣的灵魂万里挑一。一辈子很长，要跟有趣的人在一起。单身久了，反而觉得书本和机器比人更容易打交道，与其浪费时间寻找，不如把更多的时间用在「做一个有趣的人」更实际。 啰啰嗦嗦写了一大堆，其实写了什么我觉得不是很重要。而是写的过程中，可以想到一些有趣的事儿，期间翻翻以前的相册，可以明白值得交往的人和值得珍惜的感情。也希望有的朋友能从我分享的一年里得到一些东西，这才是主要的。 其实这长长的一生啊，也不过就八个字：我自倾怀，君且随意。 题图来自：Zoommy","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"年轻人就是年轻人，没有所谓牛逼的年轻人","slug":"nian-qing-ren-jiu-shi-nian-qing-ren-mei-you-suo-wei-niu-bi-de-nian-qing-ren","date":"2017-01-25T12:24:29.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/01/25/nian-qing-ren-jiu-shi-nian-qing-ren-mei-you-suo-wei-niu-bi-de-nian-qing-ren/","link":"","permalink":"https://blog.yanng.io/2017/01/25/nian-qing-ren-jiu-shi-nian-qing-ren-mei-you-suo-wei-niu-bi-de-nian-qing-ren/","excerpt":"","text":"看 ZEALER 的 2016 年度总结，挺有感触。 王自如在视频里提到的「年轻人」。他说一年的创业时间里，明白了那句“年轻人就是年轻人，没有所谓牛逼的年轻人”其中的深意。 王自如问 IBM 一高管 （Arita）。 王：“从业20多年来，有没有见过哪一个年轻人特别厉害？” Arita：“没有厉害的年轻人，年轻人就是年轻人。” 你可能在经历的时间和事情上有一定的压缩和快进，但是在本质上，你飘的越高，你下面空着就越多，早晚是要回来重新补课的。 无论是人也好，公司也好，其实都是这样，走得太快，一定是回来补课。 比如说你像跑步、开车，你已经开的很快，你也走得很快，你领先后面对手很远了，在这个时候，你会想慢下来吗？你不会想慢下来了，你会想再快点，再快点，再快点。 有点类似我们打球，你跑的越快，你越紧张越去思考你每一个动作要领，你反倒觉得你的球投不进去。 所以今年在这些反思的过程中，深刻领悟到什么叫做没有厉害的年轻人，就只有年轻人。 看王自如的评测很久了，从他录制各种开箱视频一个人做TechMessager，一直到如今创办壮大的公司ZEALER。 点点滴滴看着他一路创业到这般规模，除了他有很强的执行力之外，更多的可能是几年前的中国没有一个比较权威的数码产品评测机构，而王恰恰看到了其中的商机。其实按照他的说法，更多的是出于对数码产品的热爱。 当然现在FView和那岩的科技美学也做的不错，但从团队的规模和工程机到手的优先程度来看，ZEALER可以称得上是国内最大的测评机构。 不过单单做测评不够，王自如在很早就把公司的方向调整，致力于打造成一个引领个性科技生活的服务商，这些年也确实在这方面下了很大功夫。 其实有很多人都不太喜欢王自如。有人是因为他拿了雷军的投资，觉得以后的评测会偏颇于小米手机；有人是因为那次王和罗永浩在优酷上直播骂战，他们更愿意选择站在老罗这边；还有人是因为他长得太像他们的爱豆刘翔了…. 不管怎样，王自如和他的团队还是一日既往地坚持下去。 王自如也在年终总结里提到了团队的反思以及心态调整： ​我们做了这么多事儿，难道是为了那些不喜欢我们的人吗？ 当然不是，我们面对困难面对挑战，然后还依然把这些事坚持下去，然后把这件事扛着走的原因，是为了那些喜欢你的人。 因为你永远不可能让所有人都喜欢你，但是你要让支持你的人不失望，这个实际上是我们最大的动力，也是我们坚持下去很重要的原因。 所以对于那些一直坚持和支持我们的人，我也就唯有感谢吧。 视频：","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"春风十里，不如冯唐的随笔","slug":"fengtang","date":"2017-01-20T08:02:41.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/01/20/fengtang/","link":"","permalink":"https://blog.yanng.io/2017/01/20/fengtang/","excerpt":"","text":"从正式打开包装到翻完最后一页，大概用了一个月的时间。美学、禅意、世俗、浓情…构成了这本冯唐最美随笔集。 年前要应付学校的期末考，回家后又想如释重负地睡几天。书从学校的书架里，几经辗转到家里的书案上，夹在里面的书签也就挪了不到 5 页。 现如今大多书的封面都是有个腰封，其实在看书的时候很不方便，每次都是把它拆下来扔到一边，等全书看完之后再装上，才把书收起来。其实也不乏有些好看的腰封，但终究只是皮囊相。买书之前，看的是封面和腰封。买回来之后，封面的各种矫揉造作就和书的内容毫不相干了。 《在宇宙间不易被风吹散》是冯唐最新的一本随笔集。这本书的封面结构是我见过最有创意的，没有之一。 全部打开的样子 ) 遇到一本好书，往往会让我感到不知所措。即想细细品，又迫切想知道后面的内容。一来二去备受煎熬，无奈只好作罢，每看一会儿便放到一边儿，下次再捧起来。只有这样，才能消除这种矛盾的“病态”，所以很久都没有过一口气看完的书。虽然解释不清到底是什么原因，但这种方式无疑使效率大打折扣，浪费了时间不说，进入状态重启多次有损大脑是亏。看小说还行，好比追剧，吃饭上厕所都不会扰乱思绪。如果是散文，状态不对就好比走马观花，让你逛窑子，只看花灯不看人，谁亏谁知道。 讲实话这是我看的第一本冯唐，我挺喜欢他那种雅中带痞的文笔，自恋但不做作的风格。一般看书，我都有随手标注的习惯，喜欢作者写的哪里，总希望能够珍藏下来。初入文学，任何成长的机会都不愿放过。 看这本随笔期间就收获不少，不妨摘录下来，对自己对他人总有用得到的地方： 人是需要有点精神的，有点通灵的精神，否则很容易出溜成行尸走肉，任由人性中暗黑的一面驱使自己禽兽一样的肉身，在世间做一些腐朽不堪的事情。 人是群居的生物，越是在通灵的时候，越希望有知己在旁边起哄架秧子。一杆进洞，四下无人，人生悲惨莫过于此。 在真正的美面前，文字常常乏力。 审美的确需要天赋，但是天赋需要点拨，后天熏陶能在相当程度上弥补天赋的不足。多花点时间在这些通灵的事儿，人容易有精神；多用些美器做这些通灵的事儿，人更容易有精神。精神即是物质，物质即是精神，本一不二。 得之我幸，不得我命。 借问人生何所有，几床悍妇几墙书。 周围草木一寸一尺地消失，时间没有方向感，四处流淌。读者和作者一起坐在屌丝时的夏天夜晚来临之前，怎么吃也不隆起的腹肌，怎么流汗也耗不尽的力气，怎么想念也绝不降临的你。 早在鸡鸡体会肿胀之前，心已经读到肿胀。 “为了那些细小的需要，从没说要，从不明了，总想忘掉” 人又不是黄金，怎么能让所有人都喜欢？任何事做到顶尖，都是政治，都会被人妒忌；即使是黄金，也会被某些人说成是臭狗屎。 二三十年下来，我渐渐形成了习惯，无论四季、地域，接过一杯热热的茉莉花茶，喝一口，沉一晌，气定神闲——准备好了，可以开始消化一切傻逼和混蛋了。 一生中，除了做自己喜欢的事儿，剩下最重要的就是和相看两不厌的人待在一起。 在中国，毁一个美景的最简单方式是让人知道这个地方。 书本永远是起点而已，永远难免苍白无力；一手资料永远、远远大于二手资料。 身留闲，一年里一定要空出来两三个月的时间，避免应酬，只摄入、不输出，多读、多写，少看或者不看任何评论。 “欲戴王冠，必承其重。不要低头，王冠会掉。不要哭泣，有人会笑”。这个态度也太励志、太权谋，放松，戴戴耍耍，不留神，王冠掉了，掉就掉了，掉了就索性长发飘飘。 其实每次说这是「书评」，其实不然。因为并不想对着书评论一二，而只是想抱着谦卑的态度去学习一些东西。随着看过的书慢慢多了起来，越来越觉得自己的渺小与无知，天地万物之无垠。“每个人都应该有个笃定的核”，其实就是要做到对外界之事充耳不闻，应当把重心放在对自己身心上的修炼，此为禅。 万物皆有两面性，一本书也有好有坏。放下给自己强加的主观臆断，接纳书中的一些好的思维方式，感谢冯唐。 以上，此为得到。","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"啪啪啪时你真的什么都不想吗？","slug":"gunchuangdan","date":"2017-01-03T14:12:35.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2017/01/03/gunchuangdan/","link":"","permalink":"https://blog.yanng.io/2017/01/03/gunchuangdan/","excerpt":"","text":"在正式开始话题之前，我想讲讲我的性启蒙。 关于这件事儿，认真追溯起来竟然没有某个特别值得纪念的日子或事情。只是模糊记得一些场景，使得这个世界上的一个普通的孩子经历了神奇般的体验。 那时的我，不知道 AV 为何物，黄也只是一种看起来感觉暖暖的颜色，对种子这个词的印象也只是停留在《自然》课本里，了解到的日本名字也仅仅与动漫有关…… 其实每个孩子在很小的时候，就学会了大人吹牛逼的样子。而每个男孩在很小的时候，就已经能熟练地模仿父亲跟朋友讲荤段子。虽然有时候并不知道段子里所指的内涵，他们只是觉得这些段子能让他们抱着肚子笑一下午，毕竟童年的时光看起来好像永远都用不完。 如果非要追究性启蒙到底是什么时候开始的，那可能是因为我偶然间得到的一本书。书的内容现在已经完全记不起来了，不过当时的感觉应该隐约能想起来个大概。 那是个平常到不能再平常的课间，窗外的蝉嘎吱嘎吱叫的闹腾。一同学神秘兮兮地递给我一本泛黄的书，书已是破烂不堪，看样子已经被人翻看无数次。我看周围没人注意这边，一把接过来就塞进书包，一直到中午放学回家吃完饭，我把房间门插上，躺在床上一页一页忐忑地翻着书。心脏在打鼓，脸烫的如烧红的生铁，下边的玩意儿用王小波在《黄金时代》里开头的描述，那就是：“一生经历的无数次勃起，都不及那一次雄浑有力。” 大概就是那次，我似乎触动了人类身体上的一个开关，我明白了我从哪儿来，我知道了什么叫作性。 话说前一阵子刚看完一本书，书名叫《滚床单心理学》。 虽然里面的案例找的很牵强，但是不影响心理学等方面的科普，很有趣的一本书。 读的过程中做了一些标注，大多是人类存在的一些有关性行为在心理学上的解释，专业性毋庸置疑。而且涵盖范围也特别广，涉及一些较隐晦甚至敏感的话题都毫不避讳，将各种有关性在心理学上的动机或理论依据等一五一十地阐述，很涨姿势。 现将标注整理到下面，不想读整本书的朋友可以看一看。 ​第1章 揭开爱与性的神秘面纱 权力的边际效应有两个层面：一是拥有权力的人周围会有一群可以帮助其脱离困境的人，而这可以降低有权者犯错的成本；二是权力本身会使行使权力的人衍生出“我很优秀”的错觉，误把权力带来的荣誉和尊敬当作自己有能力的标志。 有这样一句话：“爱情因性而更加美好，性因爱情而变得神圣。”这句话很好地道出了爱情和性的关系。 性有三种目的：繁殖——生育孩子；建立关系——在充满爱和信任的关系里进行性行为；娱乐——得到直接的身体乐趣。 第3章 细节探知爱情真意 快节奏的生活让人们来不及思考，来不及认清自己真正的需要，只是被浮在表面的诸多信息和诱惑牵着走，很容易就会迷失在浮躁的社会潮流里，于是便有了“大家都那样，没什么大不了”的心理。 第4章 男人为什么会这样？ 男性向往乳房的原因**：** 1，人类初期时男性的恋母情结，而且喜欢更大体积的乳房。 2，人类对异性人体遮盖部位一种求知的渴望。 3，因为自身条件不具备，更加对乳房充满了一种神秘感。 导致了女性选择性对象的时候会更挑剔的原因： 由于女性的生育成本过于高昂（整整十个月的孕期，以及孩子出生后长达十多年的抚育期），使得她们对性对象非常挑剔的。她们除了要看性对象的健康程度外，更要考察对方的物质资源和社会地位，以便挑选出最好、最有保障的合作抚育者。这是个并不容易且需要花费一定时间的过程。 双手的解放使人类摆脱了为生存而竞争的被动地位，从而得以“温饱思淫欲”。 在动物世界里，所有的雄性动物都在为了生存和交配而埋头战斗。而大自然让它们只在每年的某个固定的时间发情，而其他时间则必须努力施展各种捕猎技术，同时防备和躲避天敌对自己的袭击，这样才能生存下来。而人类的男性只需花费一天中的几个小时就能赚取到足够的生存材料，因此就有大量的未经消耗的能量用于思考、感觉和享受，这给男性的随时发情创造了时间、精力和体力上的基础。 男性的性支配能力强于女性的原因： 在大脑的构造上，男性大脑内与脑垂体相连的下丘脑视前区比女性要大整整1倍，而这个区域的功能是分泌荷尔蒙，以及掌管性想法和性行为。 女性的视觉范围比较宽广，可以看到180°范围内的物体，几乎是男性的6倍（男性只能看到30°范围内），这让她们能够快速地看完侧面的帅哥而不被抓住；而男性的视觉范围比较窄，导致他的“看”让人觉得太过于明目张胆。但也许是由于视野范围窄的原因，男性能够看得比较远，所以就比较能解释为什么男性远远地就能看到一个美女正朝他走过来，而女性却对此毫无觉察。 可是这样的不同，并不是因为男性和女性在眼睛的构造上有差异（男女的眼睛构造是一样的），只是因为在进化的过程中，男性多外出捕猎，需要紧紧盯住并跟踪猎物，所以视野就放得远，而不能关注与目标无关的事物，否则就可能一无所获而饿肚子。而女性多负责采摘果实和照顾家庭，这就大大培养了她们“眼观六路、耳听八方”的能力。 所以，在日常生活中，男性最讨厌的就是找东西，因为他们需要上下左右移动自己的头部，并四处查看半天才能找到目标；而女性则只要打开柜子，眼睛一扫就能将所有东西尽收眼底。这就是为什么男人总被逮到正在看漂亮女人，而女人看了很多眼帅哥却依然没被发现的原因。 催眠大师艾瑞克森把人分为三种类型：视觉型、触觉型和听觉型，其中视觉型的人是最容易被催眠的。因为他们想象力较丰富，当催眠师用语言、表情、肢体等引导他时，他们比较容易发挥自己的想象力，从而进入被催眠状态。 爱情的主要成分是亲密和承诺，即两个人之间有很多的亲密感和很真诚的对彼此未来生活的承诺——亲密建立在彼此了解的基础之上，而要了解彼此，需要一定的时间认真相处才行。 和女性比起来，男性大脑里负责情感沟通的区域要小得多，因为当男性胎儿在母体里时，他的大脑曾经大面积地浸泡在睾酮素里面（女性胎儿则不会），这个过程使得他们大脑里面负责情感沟通的区域受到损伤。 有些人为了对抗这种自卑的感觉，就会期望选择一个自认为比自己优秀的伴侣，所以就有了今天的年轻人青睐“高富帅”和“白富美”的婚恋现状。 婚后容易出轨的男人，他们具有虚荣心强、攀比心重、没有自我独立意识、随波逐流的心理和个性特点。 我们的社会已然发展到这个阶段：各种高科技蜂拥而来，网络信息时刻都在爆炸，各种粗制滥造的影视剧充斥荧屏可是人们却乐于接受。在这样的快餐文化之下，每个人都在匆匆的生活，来不及去想自己真正想要的是什么，也来不及核对目前正在行走的是不是自己真正想要走的路，更不会去追问自己内心的感觉是什么，只是看到大家都这样，所以自己也随波逐流。 在解剖学上，我们的大脑分为左脑和右脑，而连接左右脑的纽带被称为胼胝体。在进行思维和感知活动时，我们正是通过胼胝体来使左脑和右脑共同协作，以更好地完成各种任务。 话语本身原本是中立的，只是文化和道德规范人为地做了区分和定义，从而用来教化大众：遵守规矩就是好的，反之则是坏的。 在公共场所，违反道德规范是要受到谴责乃至是惩罚的。可是，在闺房这个私密的空间里，人们自然就想触犯这个禁忌，以获得“违规”的快感。 做爱时喜欢开灯的原因： 他们之所以喜欢开灯，首先是因为男性的性刺激很大一部分来源于视觉，如果能够清晰地看到伴侣的身体、表情、眼神及各种反应等，都能更深地激发、强化男性的欲望和感觉。尤其是当他正和自己心爱的女人滚床单时，看着对方的脸能让他有更强的征服感和满足感。 喜欢在滚床单时开灯的第二个原因，是他们认为床上是坦诚相见的好地方，开着灯自然能将这种坦诚毫无保留地呈现出来。那些对自己的身体很有自信的男人，更加愿意开着灯让女伴欣赏自己身体的美好，尤其是让女伴看到自己的表现有多么的棒。 第三个原因说来就有些打击男性的自信了。因为男人的身体不够敏感，或者说是由于他们更多地用左脑来进行逻辑思考、分析推理，这样就降低了他们身体的敏感度。同时，由于男人对性的目的性更强，很多人只是追求那几秒钟的快感，因而都有些猴急儿地奔着最终目的而去。这样的生理和心理特点，使得他们也懒得慢慢去培养自己的性感受，而是为了达到快速愉悦自己的目的，只好让明亮的灯光来配合刺激自己的神经，从而让自己迅速兴奋起来，并勇往直前地表现自己的雄风。 没有了信仰，没有了精神上的追求，人就会感到内心有个巨大的空洞，会有一种整个人飘摇在空中无法仰赖的感觉。此时，人就会随波逐流，并逐渐变得神经麻木。 在性的交融中，男人会体验到巨大的快感，而他内心会觉得这快感来自于女人的恩赐，为了对这恩赐表达感谢，他会愿意不遗余力地向那个女人表达温柔和爱意。然后一来二去，性和爱互相交织，慢慢的就无法再分清楚彼此了。 上帝造人时是故意要这样设计的：把男性的生殖器设计成外挂型的，让它可以随时方便地和外界接触；也正是由于男性的生殖器是外挂型的，使得它常常可以摆脱男性的意志而独立选择要不要“探出头”去。而女性的内置型的生殖器则让女性可以选择只对自己喜欢的男性开放，且可以自由控制是否要开放它。 刚出生不久的男婴就会有阴茎勃起的现象，待他们能够手眼协调，就会有自慰的行为。这种对性的好奇与兴趣，要差不多到五六岁才会消失（被其他事物吸引），然后，性的能量在青春期才会重新启动。 第5章 女人为什么会这样？ 没有不想做小女人的女人，只有没机会做小女人的女人。 女人爱涂口红的原因： 众所周知，性高潮后的女性是最美丽、迷人的，而涂抹了红色唇膏的嘴唇，其实是对性高潮的一种模仿。 女人爱穿高跟鞋的原因： 高跟鞋能使女性的小腿线条显得修长，身材更挺拔，胸部更突出。由于高跟鞋的不平衡，女性走起路来会不由自主地扭腰摆臀，性感便在这些身体语言里若隐若现了。 穿着高跟鞋会让女性缩紧会阴和下腹部的肌肉，进而提升性能力。 “美不美，男人看了就知道；好不好，女人听了就知道”。 脾的功能和肌肉的状态密切相关，也就是说，如果一个人的脾脏比较弱，肌肉也就表现为松弛无力。 中医说“思伤脾”，意思是说一个人思虑得太多，就会伤及到脾。这就意味着常常勤于思考，且情绪、情感非常丰富的知识分子，如果想要得到一身健硕的肌肉，是比较难的。 女性的乳房： 女性乳房的平均重量为0.5千克，占人体总脂肪的4%—5%。公认最美的乳房是半球形、水滴状，位于女性第2—6肋骨间，同时乳头位于第4肋骨间。乳房基底面值直径为10—12厘米，乳轴高度为5—6厘米，乳晕直径为3.5—4.2厘米。 同一个人在不同的年龄阶段，乳房的大小和形态会有明显不同。年轻女孩的乳房由脂肪、乳腺和胶原质组成，所以显得坚挺；随着年龄的增长，乳腺和胶原质会被脂肪所代替，过多的脂肪会导致乳房的下垂。 第7章 那些鲜为人知的性少数人群 S-M，即Sadism，译作施虐癖；M，即Masochim，译作受虐癖。这两个词语出自专写虐恋题材的两个作者的名字，前者是法国贵族萨德侯爵（Marquis de sade），喜欢对女性施以虐待以达到性满足；后者则是奥地利作家马佐赫（Lepold von Sacher-Masoch），他喜欢在性活动中被动虐待而达到性满足。 异性恋者歧视同性恋者，同性恋者歧视双性恋者，双性恋者歧视变性人。 有人猜测，男人很可能都是女人“变”的。证据之一，是男人之所以也长有无用的乳头。因为胚胎在8周之前无法确定自己的性别（所以每个胚胎最初都准备了两套生殖系统，即中肾管和副中肾管），为了不错过发育的时机和进程，只好把乳头也一起发育了。到了第8周，有部分携带Y染色体的胚胎在大量睾酮素的作用下选择了男性生殖系统，“变成”男胎儿，而另外那些没有Y染色体的胚胎则因为没有被睾酮素“干扰”，从而继续发育为女胎儿。 在生活中，这种专业形象在一定程度上会让人有压迫感。那么，在有些人的性幻想里，就总希望打破或毁坏这些固化了的形象，就像是挑战或跨越权威和秩序，从而获得某种心理上的胜利感和成就感。同时，这也是一种可以伴随着性幻想而获得强烈性刺激的方式。 本来是不想发这篇书评，因为心里其实是有些放不开的。但是我整理的这份在「微信读书」里获赞颇多，现在想是不是有必要把它分享出来，让更多的人看到，也算学习了吧。","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"},{"name":"性","slug":"性","permalink":"https://blog.yanng.io/tags/%E6%80%A7/"}]},{"title":"问题之书","slug":"wenti","date":"2016-12-28T00:40:54.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/12/28/wenti/","link":"","permalink":"https://blog.yanng.io/2016/12/28/wenti/","excerpt":"","text":"文 | 王前 我们所需要的，只是看清自己，这么简单。先正确评判自己，才有能力评断他人。 每个清晨和太阳一同醒来，自己能否对发生事情做出理理性的判断? 能否理性但不苛求，温柔但不软弱，敢于讲真话，表达自己的立场? 能否在犹豫的时候，用初心提醒自己不要迷失? 能否在勇敢踏出第一步之后，发现世界那么大，还要走很远的坚守? 能否在冗长的坚持和守望中，虔诚的，道德服从的，绅士的，乐于助人的，忠于内心的，一路向前，一路行走? 能否在承受压力时不让自己落入平庸? 能否在承受生命之轻时，试着去放空自己，体验生命本身的厚重? 能否尊重眼泪，先让那个向上的心足够强大，再让那个最好的自己释放本心的坚韧? 能否只重视生命里吉光片羽的阳光，完全忘掉美景背后的一大堆影子和黑暗? 能否克服自身相互斗争的因素，安静地、笃定地朝着心之所向从事各种活动? 能否让那一腔活着的热情在不时之需温暖自己和他人? 能否用心灵的上善若水和丰衣足食，为别人提供一个良善的视角去看待世界? 你是否欺骗别人，或是自己？想清楚再回答。 在这个世界上，每个人都有一块必得由我们自己来耕种的土地，种春风得春天，种荒草得荒原，请务必记得，所有的良善的希望，决不比任何一个智者的希望更谦卑。 先要对自我忠诚，明白自己的本心，明确自己的需要，制定可行的计划，然后再放开了大胆主动地行动，好过软弱被动到活着。 坦诚相待，也是对彼此的尊重和欣赏，矫揉造作的伪饰，相比一句发自内心的赞美，轻如鸿毛。 只有去伪存真的东西，才经得起时光的打磨。 能否理性得对待世界，超过感性地去爱自己? 先要学会独立思考,才能独立去做事。 能否甘于寂寞? 能否让寂寞播种安定，使安定萌发心静，使心静开出像早晨一样清白明亮的花来，指引你明白一切事理? 能否在青春的大冒险里，一个人勇往直前也能愿赌服输? 能否听取别人的意见，尊重别人的自由的意志，独立地做出决定? 能否随时用空杯的心态去迎接风雨，像拥抱太阳那样义无反顾? 能否找到属于自己的方向，从一而终而非一时兴起? 能否从成长的象牙塔里勇敢地突破自我，挑战自我，快乐地发现隐藏版的自我? 能否就算是被谁从云端推落，也能拥有好好地用心地看清楚整片天空的胸怀? 我们所需要的，从来都不是在嘈杂的世界里迎合任何的眼光和脸面，而是那个心里建设的自我，能否成为那个一心向上的自我的保护色。 能否在一方静好无常的土地上，带着金砂一般渺小而闪光的品质，为世界的前行慷慨解囊?","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"苹果的偏执","slug":"apple","date":"2016-12-14T02:23:58.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/12/14/apple/","link":"","permalink":"https://blog.yanng.io/2016/12/14/apple/","excerpt":"","text":"最近在知乎上看到一贴有关「苹果有哪些黑科技」的回答。本来想找作者授权转载，可惜作者用了匿名回答。知乎上这篇原贴已经被作者删除，但还是以图片的形式留了下来。通篇看下来，我认为名字改为「苹果的偏执」更恰当一点。 我用了多半天的时间将图片中的文字摘录下来，并逐字进行校对订正，来完成这一篇有意思的文章。 这篇文章对于我这个果粉来说，看完更加了解了 Apple 对产品的苛求。 Apple 每款产品的火爆并不是靠运气，而是极其严谨甚至达到了死磕的境地（抛去苹果的营销策略单说产品这块儿）。这篇文中所述真实性有待考证，但我相信 Apple 确实可以做到。 在不泄密的前提下，我来讲几个八卦吧，算不上黑科技，算是苹果的做事风格。 1、 某款产品的主板非常迷你，上面的元器件密度很高，因此用于主板测试的接口只有绿豆大小。 proto 期间需要设计一款测试软线（FPC）接到这个接口上测试板子状况。这是技术背景。 因为接口太小了，软线上的 pin 脚密密麻麻，设计公差只有 +/- 0.01 毫米，也就是说尺寸大一点，小一点或者位置偏了 0.01 毫米，这根线就没法用，甚至会把板子直接短路烧掉。测试线一般都是由代工厂自己准备的。代工厂找了好多家 FPC 厂商来做这根测试线，每个厂家都反馈说做不了，精度没法控制这么高。 代工厂没办法，找 Apple 汇报这个情况，问能不能把测试端口做大一点， Apple 说你别管了，这根线我们自己做吧。 十多天后，两根合格的测试线送到了代工厂，在场的电子工程师们由衷赞叹苹果的黑科技。 至于是怎么做出来的，这事我清楚：苹果找了一家 FPC 厂商，一口气生产了 2000 多根线，然后挨个在板子上试，最后挑出来好用的一共就这两根。当时的计划是如果挑不出，再做 2000 根… 所谓真正的高科技都来自于简单粗暴… 故事还没完，两根线送到了代工厂，开始生产的时候，第一个产品送到站上，操作员拿起一根线，随手抻了一下，断了… 在场围观的工程师们瞬间发出一阵哀嚎。 剩下的一根独苗成了整个产线的宝贝，操作的时候比动外科手术还珍贵，那个毛手毛脚的操作工打发他去仓库搬箱子去了。 好在剩下的那根线挺到了 build 最后也没有坏，不然因为这个停线就糗大了。 2、 Apple 另一个精密产品的组装，具体多精密就不细细描述了，总之图纸上标注的公差严的不讲道理。除了设备要极其精密以外，操作手法也很讲究按技巧。试生产了一段时间，发现整个代工厂只有一个操作工人可以把这个活做好，换个人良率就降下来。当时苹果就指定，这个工站的这个操作，只许这个工人做，代工厂没有得到批准不许换人。 但是规定这东西，放在纸面上还可以，怎么执行就没那么简单了。这个工人请假怎么办?临时有事怎么办？迟到怎么办？产线不忙的时候，被调去别的线上操作，这边开线了一时间回不来怎么办呢?代工厂不愿意停线等人，停线一小时损失可是以万计。 于是这个规定没有被很好的执行下去，有一天发现良率很差，一调查，代工厂那天换了个人操作那个关键工站。 苹果的 TPM 很生气，但是后面怎么管理成了难题。毕竟苹果 audit 严线的 PM 也经常换人，不认识这个操作工，工厂自己换人也查不出来。 最后的解决方案，是把这个工人的大幅高清照片帖到这个工站最显眼的位置，只要 Apple 的人在线上发现人跟照片不一致，马上命令停线。产线上贴照片这种事，真是第一次见。 3、 某南方代工厂用的一款重要的双面胶经常出问题，一调查，发现仓库里有老鼠。老鼠不知道为啥特别中意这款双面胶，存货经常被咬的惨，只能报废。 本来以为只是仓储的事情，代工厂自己搞定就好，没想到类似的事情一而再而三发生，一调查，仓库除鼠是世界性难题（好吧，至少在中国还没有好的解决方案，仓库在建的时候就不是全封闭的）。看代工厂搞不定，然后苹果又介入了，找了一个实习生安排解决这个问题，实习生制定了一套方案，方案的核心很简单，在仓库派人养猫。 看过这个方案的人第一反应都是，不是在搞笑吧？！ 详细规定了用什么猫，多大年龄，品种是什么，养几只，采购预算多少，采购途径怎么走，如何考核猫的绩效，退役年龄多大。 还规定了猫的各项福利，吃喝拉撒加退休都包含在内，养猫人的工资算做产品的成本。猫怎么样才能保持好心态，积极主动工作都考虑在内。 苹果的黑科技就是注重细节，后来这个仓库的鼠患彻底没了。 能抓到老鼠的就是好猫 （图片来自网络） 4、 说到苹果，除了设计团队之外，必须要讲一讲同样牛逼但是不被大众了解的运营团队。 苹果的 TPM （负责生产技术）和 SQE (负责产品质量）确实很牛，一线的工程师都是从国内各个大公司来经理级的人物来做小兵的活儿。本来资质就够硬，加上苹果多年文化的熏陶，对于制程，良率的理解的控制可谓出神入化。 新供应商的导入模式通常是，一个没有做过草果产品的供应商开始给苹果供货，因为苹果要求太严，往往开始的良率都在 30~50 % 之间，根本不赚钱。然后苹果会派一个 TPM/SQE 驻厂，专心研究生产流程和质量控制中的问题，疯狂加班一个礼拜各种改善，然后这个工程师人。这时候良率一般就会被提到 90% 以上。 很多公司愿意给草果做供应商，虽然价格和员工被压控的很惨，但是做完一个苹果的项目作为洗礼整个公司的技术/管理水平会整个提高一个档次。跟苹果做过项目的人都知道我在说啥。 iPhone 回收机器人 Liam （图片来自苹果） 5、 前面提到了实习生。跟很多硅谷公司一样，苹果常年会招聘一批突习生工作，这些人都是斯坦福，加州伯克利，MIT 这些名校的硕士博土，都是学霸中的学霸。实习生来到公司以后，常常会安排一个并不迫切需要的课题，让他自由发挥，试一试做下去能做多深。 大概06，07年的时候，有个突习生来到苹果的 Mac PD 组，当时的 MacBook 还是用塑料壳，给他的课题是研究一下，如果纯用铝 CNC 加工来做笔记本外壳，可行性如何。几个月后，这个实习生拿出来非常接近量产的 Uniboby 铝壳样品。轻巧，结实，美观，直接把大家镇住了。随后乔帮主拍板做 Unibody，也就有了后来的 MacBook Air ，间接影响了后面的 iPhone , iPad 的设计。 这个人是我知道的最牛的实习生，名叫 Keith ，结束实习后顺利留在苹果。现在用的新一代的键盘也是他设计的。如果你打开苹果网站 New Macbook 的宣传视频，在介绍 butterfly 键盘的时候，键盘上模拟有人按键，键帽依次打下来的字是：Hello Keith。 全新 MacBook 产品介绍 （视频来自苹果） 6、 很多人知道 iPhone 引导了后来智能手机的设计语言，其实就生产制程来说又何尝不是如此。现在金属件的 Unibody 在电子行业算是非常主流的设计，但在苹果使用这个设计之前，消费电子产品里，压 CNC 加工金属十分罕见。 原因在于成本和效率。那个时候 CNC 的种类，连带其刀具的种类非常有限，可供加工的特征都是些简单的孔槽之类。但当苹果开始进入这个领域，花了大价钱和精力研究 CNC 制程，以加工复杂的成型面和提高精度，大笔的钱砸下去，基本每个特征专门研究一个刀具和制程。用业内人的话说：苹果用一己之力发展了铝壳 CNC 这个工业学科。 在 MacBook , iPad , itouch 这些产品成功量产以后，随着技术的扩散，Unibody 才开始被大家玩的烂，铝壳一体成型 CNC 也不再是富土康垄断的高端技术。 除了给一大堆 CNC 设备厂商带来了春天之外，苹果用心研发，把一些当时虽然有但无法量产的技术应用到消费电子产品上，包括激光焊接，CCD 辅助装配，各类光学测量设备，胶水在电子产上的使用（点胶）等等，相关厂商都赚的盆满钵满。 7、 现在 MacBook 上用的 USB type C 是纯正的苹果设计（即为 MacBook 设计的 Thunderbolt 3 )。但为了向市场更快普及，借助 intel 以 USB type C 的名义发布。设计这款接口的团队也设计了 lightning , Magsafe , Thunderbolt 这些非常优秀的接口。 8、 苹果的当家吸金 iPhone ，其实是一群不懂手机设计的人设计出来的（这里只讲硬件）为啥这么说呢。iPhone 刚出来的时候，答主已经在手机设计行业做了多年，国内凡是做手机的厂商，打开壳子一看，设计思路就是两条；Nokia 式的和 Moto 式的。Nokia 偏整体，板子上器件都直接焊死，各种壁厚，卡扣都往大里做，好处是够结实，缺点是维修性不好。Moto 式相反，拆卸性好，部分模块化设计，错落有致，但是没那么重视可靠性。国内做结构设计的最早那批人，都是从诺基亚/爱立信，或者 Moto 跳出来的，所以当时每个手机厂商的设计，都深深打下其中一个流派的烙印。夸张点讲，一看你做的卡扣尺寸形状，我就知道你是哪一派的。 iPhone 一出来，拆机一看，完全把我和我的小伙伴镇住了，完全是不懂手机设计啊！以当时的标准（ 2007 年）来看，犯了 N 多忌讳： 电池没有居中(导致重心不居中，当时的设计迷之信心对体验的影响）。 接口没有塞子(当时只要设计手机，都要给数据接口做一个橡胶塞，除了防水防尘，也为了美观）。 没有设计挂绳孔。 正面全玻璃，一米左右就有可能摔碎，让人怎么用？ 不能换电池。 没有可拆卸的电池盖（或其他任何形式的盖子），这个之所以重要，是因为当时国内的法律规定，任何手机都要至少贴两个标签：入网标签和产品标签（电子产品 3C 认证）。而且这两个标签必须贴到产品本体上（不能帖到包装盒里或者电池盖这种容易更换的部件上）。没有电池盖就意味着要么你的标签不能藏在盖子下面，只能贴在手机外面（丑）。要么就不能在国内卖（欧洲也有类似的要求）。苹果直接把产品信息雷雕到背盖上，至于入网标签和产品标签…呵呵… 因为没有中壳，所有的元器件的定位组装方法都要重新设计。 基本不用卡扣，全靠螺丝和胶带。 没有物理键盘。（欧盟当时强制要求手机要有物理按键，为了是紧急情况下可以盲操播出求救电话。） 手机卡不是标准形状。 所有的接口都用钢片螺钉固定。所有的侧键都用钢片螺钉固定，所有觉得需要加强的地方都用钢片螺钉固定，完全不计成本和组装效率。 Home 键的组装设计：当时所有的侧键都必须与外壳留足 0.3 mm 的间隙，为了保证组装公差且不会卡键。但 iPhone 的 Home 键间隙只有 0.03 mm ，至于怎么组装的涉及到当时还不流行的 CCD 定位。以后再补充。 设计 iPhone 的 PD（ Product Designer ）是一群天才的工程师，他们完全不理会市场上现有的手机设计经验，用大学毕业生的思路来解决各种设计和技术问题，在 iPhone 上我们看到的是最直接的思路和最简单的解决方案，简直像是把爱因斯坦，牛顿，麦克斯韦这些人拉过来，拿枪逼着他们做出来的一款手机，最后能搞出来的样子。 9、 科技类新闻网站往往喜欢报道一类新闻：苹果最近申请了什么什么技术的新专利，然后据此预测下一代的产品会有什么大动作，云云。 实际上，所谓的专利，本质上是以公开换保护，在专利认证过程中技术细节也会一并公开。然而苹果最看重的是封闭跟保密，对于将要使用的技术永远不会申请专利（等于在上市之前公开设计细节。）而申请专利的技术都是把目前不会使用东西在法律上占个坑。因此可以总结出两个凡是： 凡是能在专利网站上看到的苹果申请专利的东西，苹果下一代产品都不会应用。凡是苹果认为牛逼的技术，在技术壁垒随时间消失之前，苹果都不会拿去申请专利。 至于有人质疑，如果自己不申请专利，导致专利被人抢注了怎么办?在专利法中有一条原则，如果使用专利的一方可以证明这项技术在你申请专利之前就已经在使用了，那么可以要求法院判定你的专利无效(新颖性原则)。举个例子：你没办法在一家饭店吃到一个好吃的酱料，然后把配方注册成专利，然后反过来要求这家饭店缴纳专利费。 此原则同样适用于外观专利，中国公司可以抢在苹果前面在国内注册新 iPhone 的外观专利，但是苹果只要拿出早先研发阶段的证据证明原型机早于抢注，就可以申请被抢注的专利无效。 10、 之前的 iPhone 新机型之所以不在中国首发，是出于保密的原因，至于网上说的，不在中国首发，是因为工信部认证太慢，这个说法既对也不对。 以第一款在国内首发的 iPhone 5s 为例，苹果 9 月份发布，但成熟的量产机型在 4 月份左右就已经生产出来了。而工信部认证需要大概三个月，因此想在国内首发，只要六月份之前把手机交给工信部的实验室就可以了。 然后那年就发生了史上最严重的 iPhone 泄密事件之一：手机前脚交给工信部，后脚全套照片（主要是曝光了新机型 iPhone 5c ）和新版 iOS 的界面就在网上曝光了，显然是工信部内部的测试员拍照流出来的。 以往供应商层面的泄密虽然难以预防，但是往往是零件级别，整机照片很少泄露，尤其是能点亮的装好系统的整机这是第一次。于是高层震怒，但工信部自己没义务替你保密，于是苹果决定再也不在手机发布前把样机送交工信部。 所以后面机型的套路就是，产品在美国发布的当天，把 iPhone 提交工信部，然后三个月后认证结束在国内上市，也就必然赶不上首发。（但 iPhone 6s 是特例，因为外观几乎没有改，iOS 也不是随机器更新的。为了销量，当时就把 6s 提前送测了。后来果然也泄密了） 至于 iPhone 7 为什么能在中国首发，这就真是苹果的黑科技了： 工信部管理阶层其实还是蛮有节操，倾向于遵守协议，替苹果新品尽保密的义务的。但是他没有办法约束具体的办事人员。要想达到苹果需要的保密标准，需要在实验室内外安装全套的安检设施：窗户封死，进来不得带任何电子产品，出去的时候不能带走一片纸，实验室的电子锁和警报装置要全年 24 小时待命（实验室里面反而不许装摄像头，原因后面再讲），进来的人要签保密协议，被搜身。连实验室卫生打扫，防火设施，垃圾处理都有严格的规范。 就算工信部愿意帮你保密，也不可能为你一个公司设置这么多设备人员和工作流程，就算你出钱也不行，我们工信部好歹是正规部委，能让你这么折腾？ 苹果的解决方案是：在工信部附近买了一栋楼，建了一个实验室，凡是工信部实验室里有的设备，同释型号同样规格这里也买一份，连房间布局都是一模一样的，然后把安保设施做好。需要 iPhone 认证的时候，iPhone 放在这个实验室里，把工信部的操作员请过来在这个实验室做检测，手机不带走。 这才有 iPhone 7 国内首发，而且可看到的未来 iPhone 都有能力在国内首发。 11、 继续讲保密，iPhone 7 的一个零件供应商因为泄密事件按协议赔了 500 万人民币，泄密的内容很扯蛋，每个工站上有该工站操作的流程图(俗称 SOP )，上面有图片标注应该把什么零件按到什么部位。有个操作员把这张流程图愉偷取下来带走，卖给媒体，图上有 iPhone 的半成品照片。 这下闹大了，因为是直接从厂里泄密。苹果安保反思怎么杜绝这个问题：现有的安检技术根本没有办法检查到工人带一张纸离开车间。 解决方案也很苹果：产线上所有的 SOP 全都改用含金属材料的纤维印刷品制作…看你怎么带出去。 12、 苹果代工厂的关键设备，主要是自动组装，CNC ，激光焊接，CCD , AOl 自动检测这些，都是苹果出钱购置的。项目结束这些设备要么报废要么收走，不会留给代工厂，因为担心代工厂会用这些设备为竞争对手做类似的产品。 但是管的了设备管不了技术啊，代工厂都很聪明一旦学会了一个工艺，再帮别家公司做 ODM 设计的时候，总归知道该怎么搞了，这方面实际上防不住。(不要提专利，专利只保护实现的方法不保护工作原理和达到的结果。具体工程里面，很多专利换个方法就绕过去了。） 因此另一个比较蛋疼的苹果特色是，最新的产品研发不找最大/最专业的供应商。 比如苹果之前所有的键盘都是找达方，Sunrex 这些世界一流专业键盘厂来代工的，但这些厂不仅给苹果做键盘，也给戴尔，联想，惠普这些公司做。当苹果设计出 butterfly 键盘以后(也就是苹果现在笔记本电脑上的键盘），找的代工厂是一家不以键盘为业务，从来没做过，未来也不会给别人做键盘的公司(名字不讲了，你们不会把这家公司跟键盘联系起来的)。代工厂没做过键盘，对于研发是件极其痛苦的事情，良率低，成本高，速度慢，新一代蝴蝶键盘的生产简直就是悲剧。但是，现在市面上也没有任何一家竞争对手有能力跟进，未来五年内我相信也不会。 苹果带 Force touch 的触摸板也是同理，猜猜代工厂是谁？ 13、 苹果新出了一本产品图册《 Designed by Apple in California 》，定价小两干。知乎上一堆人骂，自己的广告册还好意思卖这么贵。 我想讲的是，就算印本书，也体现了苹果的黑科技（=砸钱）。 不提原材料有多贵，单讲印刷厂。这本书的代工厂是深圳雅昌，一家极其高大上的的艺术品中心，他们的主营业务是给各类著名艺术家，画家印刷制作作品图册，通常的一个产品的印刷术也就三五百本。他们是搞艺术的不屑于做量产，也不把钱着在眼里，不愿给苹果做——因为苹果的量太大，严重占用了他们的产能。 所谓产能，就是高精密的印刷机，全国除了他们家应该没有其他商业组织有了（待考)。这种印刷机精度级别可以印钞票，因此需要接受政府登记监管，数量也十分有限，不能随意扩大产能。 苹果看中了这几台设备，死磨硬泡要雅昌代工图册，说起来很蛋疼，据我所知这是第一次苹果求供应办事。最后之所以能搞定，还是砸钱砸出来的：单本的出厂价我就不透露了，这么说吧，以这个成本，去掉税费，苹果的这批图册，卖一本赔一本。 即便如此，雅昌还是很后悔接了这个单。前面说过，这个艺术公司根本不是为了赚钱作为目标（苹果最怕这种公司)。他们为苹果制作图册，每生产一万本（具体多少不能讲）就意味着要拒绝几十单老客户的需求，让大牌艺术家为电子产品图册让路，得罪了关系户，得不偿失。 所以第一批订单搞完以后，苹果想要继续追加产量，雅昌直接拒绝，现在还在谈判。所以想买这图册的人的赶紧下手吧，搞不好就是绝版。 （视频来自苹果） 14、 前面讲过 SOP ，用金属纤维布制作产线 SOP 图还不是最烧钱的。在 MacBook 产线上，每个工站上放了一个 iPad Air 显示该站的 SOP，显示效果清晰而且可以随时更新，还有动画效果更容易新手理解。一条线几百个工站，乘以 N 条线。这钱烧的。。 在松江广达，每个工站上挂一台 iMac，只是为了显示 SOP，堪称史上最贵操作说明。 15、 讲一个很多业内人都知道的吧，苹果首创的组装技术。 现代大规模制造的一个基本原则，就是通用性，如果两个零件需要装配到一起，那么分别生产一百万个零件 A 和一百万个零件 B ，任何一个 A 和 B 都应该可以组装到一起。 这就带来了一个问题，比如一个按键要组装到按键孔里面去，那么按键一定要比按键孔小。但是你生产加工一百万个按键和按键孔，每个都有大有小所以必须保证最大的按键要比最小的按键孔还要小，这就是所谓的公差设计。这种设计的结果是，平均尺寸的按键跟按键孔之间在设计的时候必然预留有一个缝隙。假如按键跟按键孔的精度分别能做到 +/- 0.1 mm ，你的按键间隙也会在 0 ~ 0.4 mm 之间。 苹果讨厌间隙，因为外观看起来不高档，从 iPhone 5 / 5s开始引入了组装新工艺：iPhone 5 / 5s 背后上下两片陶瓷装饰片，他们与外壳的间隙是 0 ~ 0.03 mm，用传统工艺根本做不到。 具体做法是，每当一个产品流到陶瓷片组装的工站时，会有摄像机对这个孔拍照测量，计算出孔的尺寸（因为这个形状不是基本的圆或直线几何形状，测量的其实是 profile 。)。然后机械手从装满陶瓷片的库里面挑逃出一片跟这个孔尺寸最接近的产品，安上去。这样就能保证每个产品的间障做到最小。这套设备在当时是天价。但是大家觉得值，很多产品看起来差不多，但是苹果的拿在手里就是显得高档，就体现在缝隙，台阶，颜色这些细节里。 16、 苹果充电线因为容易破损，被无数人吐槽。之所以做不到很结实，主要原因在于原材料要同时满足洁白颜色(外观)，不含卤素(环保)，高防火等级（安全）三个要求。其实只要放松任何一个的要求，都可以做的很结实。现在的线材是满足条件下强度最好的材料。 另外，在苹果产品定义里，线材属于消耗品，你能一年换一件衬衫，一年换个充电线有什么不妥？ end","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"Apple","slug":"Apple","permalink":"https://blog.yanng.io/tags/Apple/"},{"name":"偏执狂","slug":"偏执狂","permalink":"https://blog.yanng.io/tags/%E5%81%8F%E6%89%A7%E7%8B%82/"},{"name":"工业设计","slug":"工业设计","permalink":"https://blog.yanng.io/tags/%E5%B7%A5%E4%B8%9A%E8%AE%BE%E8%AE%A1/"},{"name":"苹果","slug":"苹果","permalink":"https://blog.yanng.io/tags/%E8%8B%B9%E6%9E%9C/"},{"name":"黑科技","slug":"黑科技","permalink":"https://blog.yanng.io/tags/%E9%BB%91%E7%A7%91%E6%8A%80/"}]},{"title":"强迫自己不犯强迫症就是强迫症的表现","slug":"qiangpozheng","date":"2016-12-07T08:39:31.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/12/07/qiangpozheng/","link":"","permalink":"https://blog.yanng.io/2016/12/07/qiangpozheng/","excerpt":"","text":"1 每过一段时间，我就会关掉朋友圈，不上微博。 喜欢的订阅号也积累一大堆小红点，通知栏里的 APP 推送也顾不得删除。 只不过是想暂时逃离一阵互联网上的喧嚣。 2 我一直有在怀疑自己到底适不适合在互联网中生存，即使现在的互联网变现的门槛比以前低很多。 但在这里面摸爬滚打的人最清楚，这碗饭吃的并不舒坦。 3 不喜欢蹭热点。 曾不止一次地跟朋友鄙视现在的一些媒体人，总自以为是的站在道德制高点去批判那些不小心走弯路的明星。 别人的家事跟咱半毛钱关系都没有，又有什么资格站出来声讨，没有人自打生下来就能做到知行合一。 当年我们哪个不是义愤填膺地说着要做共产主义的接班人，现在呢？ 4 这个世界太大，即使是满腹经纶的人，也会突然害怕它的陌生。 这个世界太小，一些刻意想要规避的东西，也会被强行植入。 5 因为不是超级英雄，每天过的生活平淡到自己的记忆都懒得记录。 可以用来调整心情的事情无非也就是和朋友看场电影，吃顿火锅，或是窝在床上追剧。 睁一只眼闭一只眼好让自己接受这个平淡的事实，百无聊赖地刷会儿手机和朋友互道晚安就此结束了屁事儿没有的一天。 每天生活在这眼前的苟且，哪里来的诗和远方的田野？ 6 有时会羡慕文科生孑然的文采，但更喜欢理科生写出来的东西，朴实无华而不做作。 不过只要是写文章，总得需要有那么一点儿矫情。 极强的逻辑思维加上文绉绉的韵味儿。 画风就会好很多。 7 强迫自己不犯强迫症其实就是强迫症的表现。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"这个功利的世界不需要鸡汤","slug":"mimeng","date":"2016-11-29T09:00:16.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/29/mimeng/","link":"","permalink":"https://blog.yanng.io/2016/11/29/mimeng/","excerpt":"","text":"近日有关咪蒙和实习生有些不愉快的话题传遍了自媒体圈，小事情波及上升到一些大的方面，事态就变味儿了。不管是公关方面还是整个自媒体界，本来是不予理睬的。但突然想到九月份看了一本咪蒙的《我喜欢这个功利的世界》，并写了一点儿思考，不妨今天就整理一下，发在这里。 提醒一下，如果你有不同看法，保留就好，撕逼并不是一个体面成年人的做法。 该书是抱着「刷」而不是「读」的心态看的，毕竟平时对鸡汤（即使这是高级版的鸡汤）无感，总觉得看这些是浪费时间，倒不如去看一些真正的文学名著或有关企业管理类的书籍。 为何对鸡汤无感？在这里稍作解释。 鸡汤这种文，大多都以正三观为主。正所谓人无完人，是人三观就不会称为完全意义上的健全，所以鸡汤文总是指出你三观不正之处，再用各种代入感强的故事开始引入，从而说明一定的道理，已达到正你三观的目的。 这类文看似满满大道理，也的确是大道理。不过我认为，但凡看鸡汤文者，而且每每看完总是拍手称赞，并信誓旦旦决定改变，甚至经常在朋友圈和微信群转发。 其实，从一开始就错了。 很显然，他们遇事很容易摇摆不定，没有自己的主观意见，听风就是雨，且容易轻信他人的观点或理论。而鸡汤，就是给这类人量身定做的。 我才二十多，但基本的三观可以说不是太偏。因此读「励志女王」的书，大多的感觉就是——这个观念不需要摆正，那个观念和我想的也差的不是太多……只有很少的情况，比如有的是因为太年轻还没遇到过的事情，有的是不可能发生在我身上的事情，故无法验证于我是否符合我的观念。就不做太多评价。 书看的略快，因为咪蒙为了将道理或植入观念喜欢罗列许多故事，先不说故事的真实性是否有考证的价值，不过读故事的时候是不需要深度思考的。 看完一共大概做了20余处标记。有的是觉得引入某人的名言非常有道理，耳目一新便记录下来；有的是咪蒙自己总结的有道理的话，也有一些受用的。 其实目前在所有订阅平台也都普遍存在着“咪蒙”们，只是他们还做不到咪蒙更狠。但都在这个充满红利的市场拼命地想正你的三观，也不管姿势够不够优雅，更不在意自己的三观是否已经健全。他们只秉承着一个重要原则——只要给我一个 G 点，我就能撬动你的三观。 总之，咪蒙的公号已经取关很久，因为关注后会攒一大堆小红点，不如取关痛快。如果偶尔有不错的文章，朋友圈自然可以看到。咪蒙的文就告一段落，因为确实在脑海留不下多少东西。 至少对于她口中的 low 逼（也就是我）来说。 ：) 禅定时刻： 总是优柔寡断欲说还休还故作世事满不在乎大义凛然的样子，其实也蛮丑的哦","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"想出一本书","slug":"shawtalk","date":"2016-11-24T07:27:52.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/24/shawtalk/","link":"","permalink":"https://blog.yanng.io/2016/11/24/shawtalk/","excerpt":"","text":"想出一本书。 我想，每个认真写字的人都会有出一本自己的书的愿望吧。即使卖书在现在看来是一件赔钱的事情。不过当书真正装订成册的那一刻时，无论是谁都会怀着无比激动的心情，就像迎接刚来到这个世界上自己的孩子一样。眼神里会褪去一层乱世中的锋芒，殷切地露出慈祥的目光，就那样一直注视着流有自己心血的骨肉。 书名就叫 《ShawTalk》。为何起名为ShawTalk ？其实也没有特别庄重的引申含义，只是简单的顾名思义。我的英文名按照西方的翻译应该是Shaw ，而 Talk 就更好解释了。总之是我发表一些看法和心情的地方。原本微信也想改名为此，没曾想已经被人注册，不得已才叫 Xiaobs 。对了，我的博客也是这个名字。 作为大多数写字的人里的小学生，一切都不可以操之过急。尤其放在写字这方面，容易有急功近利的感觉。我认为永远都不存在写得好。别人写的作品固然好，但自己要清楚自己所处的位置，拎的清自己的分量。 唯一能坚持的有两件事，一个是多看，另一个就是多写。多看指的是多阅读阅读其他人的作品，《论语》里说的就挺对：“择其善者而从之”，抱着虚心学习的心总没坏处。多写指的就是多练了，光看不行，任何事都得付诸于实践，方能做到游刃有余。 其实还有一个多想。但自我觉得“想”这方面不需要多费心，因为从小我便有“胡思乱想”之烦恼，说于家父，听后皆连连哀声怨气，心想无药可救。自己也不知这是好是坏，恍恍惚惚便过了二十又一载。如今钟情于写字，当初胡思乱想的“毛病”到现在便成了好处。行走，吃饭，待寝等都有想法，说与旁人又恐遭人非议。罢了罢了，唯有写字最能宽慰人心。有句话说的真好：”自我表达是每个人心底根深蒂固的渴求，它一点也不亚于对食与色的追逐。要知道，口头表达总是有局限之处的。” 所谓英雄不问出处。鄙人其实也算不得什么英雄，出处也就不值得一提。但又是什么促使我如今觉得读书重要，而且又执意去学习写作呢？ 这要从一年前说起。我本是一名校园微信运营，但也算不得后台开发，因为我连代码都不会写，只需要将各种第三方平台接入后台即可。团队里也有专门的写手，各有各的文风。就这样各司其职，也算撑起了平台。 但运营之余，愈发觉得写作的重要性。期间也在平台尝试过各种文风诸如段子、故事、套路广告等，可效果仍是不满意。思索之后主要原因其实不用多说，还是读书太少，于是便一头扎向了书堆儿里，义无反顾。 现在谈出书还为时尚早。不过我认为，是人总得有个“愚蠢的理想”来支撑自己往前走。连冯唐都说，每一个NB的人都要有个笃定的核。如果每个理想主义者在这个现实的社会做的都是愚蠢的事，那就继续愚蠢下去好了，毕竟这个世界上总得有人来扮演蠢货，以及做一些蠢事。 今日所写就算是书的序言吧。不怕天下人笑话，我所追求的写字是不追热点，不谈时政的踏踏实实的写字。多看看先人留给我们的文学著作，做一个充耳不闻八卦事，一心只读有趣儿书的人。 这样挺好。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"写字","slug":"写字","permalink":"https://blog.yanng.io/tags/%E5%86%99%E5%AD%97/"}]},{"title":"“说得着”与“说不着”","slug":"liuzhenyun","date":"2016-11-22T08:12:07.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/22/liuzhenyun/","link":"","permalink":"https://blog.yanng.io/2016/11/22/liuzhenyun/","excerpt":"","text":"合上书的那一刻，倒是没其他想法，就一个——可算狗日的啃完了。 《一句顶一万句》是我看的第二本刘震云。冯小刚喜爱他的故事，编成本子拍过不少电影。没听说过「刘震云」这个名字倒正常，可《手机》、《1942》等还有《我不是潘金莲》这些个电影总看过一二吧。《我不是潘金莲》本该 9 月 30 号上映，但由于种种原因不得推档到 11 月的 18 号，背后有啥隐情咱市井之民暂且管不着，冯调侃道：震云，你女儿的电影 11 月份上映，我的电影也推到那个月，中间隔上一周，咱来它个「刘震云月」怎么样？刘笑了笑，没意见。 就这样，由刘震云女儿刘玉霖亲自导演的电影——《一句顶一万句》，于《我不是潘金莲》前一周（ 11 月 4 日）上映。 讲实话，电影我还没有看，就先按下不提。 已经想不起是什么时候开始看的书，不是说想不起，而是不想想起。也不是不想想起，而是不想记。其实也不是不想记，只是觉得记了也没啥意义。 上一段是我的实话，也是刘的叙事风格。 刘的风格：全书都是这样的：A就是A，本来不是A，是B，其实也不是B，是C。之前他也不是C，是D。 看着很绕，但绕的有道理。 没理的绕只会让人越绕越晕，而有道理的绕反而更清晰。 在《我不是潘金莲》的书评里我有提到他的绕。一来可以梳理自己的叙事思路，二来能梳理读者的阅读思路。这种手法初次读时会觉得耳目一新，再读到时会觉得繁琐，甚至啰嗦。扔到一边等忙完了事情再看时，故事瞬间就能续上，忘掉的剧情根本不必刻意翻到前面，突然就意识到这种繁琐存在非常之有必要。这样一来，刘的功底可见一斑，厉害也厉害在这儿。 该书号称中国版的《百年孤独》，早就耳闻《百年孤独》是本值得读的书，但因不是本土文化而且怕自己目前的造诣还不足以能读懂它，所以《一句顶一万句》便是个目前拜读的极佳选择。 全书叙述手法缜密，虽都是些平头百姓柴米油盐之事，却令人看的过瘾。 共分两回，出延津记和回延津记 。电影主要拍的就是回延津记的事情。 刚开始看的印象是：好乱 。比《我不潘金莲》还要乱。乱不是叙事乱，而是人物交代的太快、太多且太杂。 一会儿是赶车的老马，一会儿又是卖豆腐的老杨，一会儿是喊丧的罗长礼，一会儿又是卖馒头的吴香香…… 刚开始看可能会不知所措，要是不返回去把人物关系理顺，很难再看懂下面的剧情。不过也好在有刘的「绕」的手法习惯，帮你慢慢择、慢慢理，乱的麻烦也就缓解了。但也只有刘敢这么做。 虽然人物引进有几十有余，看着各过各的日子，好似冥冥又有一些渊源。也不禁感叹，这世界说大它也不大，说小也小不到哪儿去。感概过后，竟忽地想起自己还是在读书，但就像作为旁观者看着周围人发生的事一般。又连连赞叹刘的文学底蕴和功力。 人物多了，人与人之间的各种关系也就撑起了一个个故事。把刘震云老家延津的百姓的喜怒哀乐写进自己的书中。 朋友之间的交情，夫妻日子的过法。看着是书中，其实说的是自己。书中人物的做法有时不理解，可放在自己身上，还真不知如何是好。 电影票房不高，其实也在我的意料之中。原因就不多剖析了，如果打算看电影的话，根据《我不是潘金莲》的经验，我建议先读读书，才不会流失一些刘震云想要体现出来的东西，毕竟电影拍不全整本书的细节。 该书算不得是宏伟巨作，也没歌颂大的情怀。朴实的文字却告诉了我们两个道理： 1，世上别的东西都可以挑，就是日子没法挑 2，过日子就是过以后，不是过从前。 禅定时刻： 我们太容易把生活视作线性的、前进的、向上的过程。 但生活恰恰是螺旋的、有进有退、迂回曲折的。 所以，尽情享受没有答案的人生，未尝不是一项优雅而高贵的事业。 by 赫恩曼尼","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"一本不建议读的爆款书","slug":"899","date":"2016-11-21T12:07:56.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/21/899/","link":"","permalink":"https://blog.yanng.io/2016/11/21/899/","excerpt":"","text":"该书于 10 月 1 日读完，期间「微信读书」与纸质版交替阅读，有些理念很受用，但大部分，还是浅尝辄止，一眼带过吧。 本书只给 4 颗星，原因很简单，作者写的有点扯。 就像很多创业中或者已经创业成功的人们说的一样，建议年轻的创业者们读《创业维艰》而不是《从 0 到 1 》，理由是这本书过于追求从无到有，有点教人急功近利的感觉，而不是脚踏实地的艰苦奋斗，创业初期一般都是辛苦而又难过的。 这一点在作者身上没有得到好的体现——毕竟作者在书中从未提到过自己创业时有多么艰辛。亦或是作者创业过程并不是那么曲折，而是把握住了移动支付的浪潮，因此而搭了移动互联网的顺风车而已。 而且书中经常提到一些公司，正是作为投资人的作者投资的那些公司，总有一种为他们公司背书的成分存在（但事实是 Tesla，Facebook 等在中国的知名度远在 PayPal 之上）。 不过对于即将入行或还未入行的年轻创业者来说，看一些书不论是否有偏差，但总是学习的机会，所以该书有些观点还是可以学习的。 接下来就是中信“奇点四部曲”中的《创业维艰》，至于另外两本，目前还没什么兴趣。 禅定时刻： For a man, the most important test is your drips of sweat without someone’s watching. 对于男人而言，最重要的考验，是无人注视下的点滴汗水。","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"每个孤独的人都应该感到庆幸","slug":"liutong","date":"2016-11-21T12:03:47.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/21/liutong/","link":"","permalink":"https://blog.yanng.io/2016/11/21/liutong/","excerpt":"","text":"刘同，毕业于湖南师范大学中文系，媒体人、青年作家，现任光线影业副总裁。刘同也是「刘同三部曲」的作者，三部曲分别是《谁的青春不迷茫》、《你的孤独，虽败犹荣》和《向着光亮那方》。 我看的是刘同的第二本，也是较第一本更为成熟的书。书于 10 月 7 日读完，我清楚的记得书评是在离开老家的车站上写的。感慨还是蛮多的，大概是刘同的那种矫情劲跟我对味儿罢。 阅读期间一朋友也在微信读书看，可惜没有足够的书币购买，我便用富余的书币赠予他一本，因为我觉得这很值得，没有什么能比赠一本书给朋友更有意义的了，尤其是刘同的作品。 相对于励志系列而言，如果要按照我对作者的青睐程度排个序的话，应该是：刘同 &gt; 蔡崇达 &gt; 张嘉佳 &gt; 大冰 。 至少暂时是这样，蔡崇达写的皮囊在我脑海里留下了不少印象，尤其是那句「每个人身上都有太多相互冲突又浑然一体的想法」。张嘉佳就无需多言了，前几日热映的电影口碑足以说明一切。大冰的前两本书都有看，但都留了尾巴而弃之，可能是一直在城市安逸久了，与大冰的流浪生活产生不了共鸣。但我还是有兴趣读他的第三本——《好吗，好的》，或许排名会有些变动。 以下是当时写的书评： 这本书竟然断断续续地看了 6 个半小时之久，不知是由于最近心思不定而看不进去，还是因为书的某些章节写的有些乏味。不管是主观原因还是客观原因，总是啃下了这本书。 该书本是刘同三部曲中第二本，但我确实从这第二本看起的。大概因为《谁的青春不迷茫》是刘同早年作品，叙事和伦理手法不如第二本及以后的书成熟，总之没有看进去就果断弃之，直接看第二本——《你的孤独，虽败犹荣》。 刘同三部曲的名字虽各个看似励志青春，但又和其他鸡汤之流不同。仍是大量刘同自己主观的感悟，试图来说明一些道理，且大部分于我来说都是买他的账的。 如：常常自我反思的刘同，为了某件事感到委屈直至落泪的刘同，只身来到大城市打拼茫然若失的刘同，曾经年轻气盛犯过错而在心里愧疚很多年的刘同，笃定一件事而苦苦坚持的刘同，在一群人之中却感到孤独寂寞的刘同，不断努力战胜自己的刘同…… 在这本书里，我不止一次地看到我自己的影子，感叹刘同和我的很多想法那么神似。 我想，正是不敢面对残缺的自己，才会看的如此之慢吧；也正是内心良知告诉自己渴望改变，才会坚持到这本书的最后一页吧。 感谢刘同。 还有书中一些值得被记住的地方，我贴在这里，算是整理（可能比较多）。 ◆ 版权信息 曾经我认为：孤独是世界上只剩自己一个人。现在我认为：孤独是自己居然就能成一个世界。 &gt; 孤独是一个没有明确答案的名词，是多种情绪的化身，是一个人必须要面对的很多事。正在经历的孤独，我们称之为迷茫。经过的那些孤独，我们称之为成长。 &gt; 人生总会从“我就是傻缺！”慢慢变成“呵呵，我是一个傻缺。”然后变成“没事，我们都是傻缺：）” ◆ 情谊孤独 即使是沧海一粟也终会有归宿，扛到云开风散，暗涌窒息，再漂泊的物体也会沉于海底，各有各的领土。 &gt; 灯火迷蒙，鸣笛遥远，我手握方向盘，不知道应该往哪个方向开。把车靠边，摇下车窗，眼里全是唏嘘后的漫漶。这条路是北京最拥堵的三环路，在最高点的位置朝前望看不到尽头，也数不清前行者的数量，每每投身于此，便感觉不到自身的重量，愁如湘江日夜潮，接二连三。 &gt; 我不希望自己只能趴在回忆的缝隙中望着过去，不敢惊扰。新情旧恨，日暖朝夕，人来人往，放任成滂沱。 我不希望只记得你们的样子，像雕塑，尘封在记忆的相片中。 我不希望只能在老去时提起一切，只能说一句，人生长恨水长东。 我希望自己在没有麻木之前还能尽力用文字记住过往每一个在自己身上留下印迹的人，记住每一种感动过自己的温度，记住让我成为今天的自己的一切。这些组合起来，就是一个人的青春。 年轻，凡事都是迎面而上，一张脆青的脸，被生生击得粉碎却也肆意飘荡，哪有茹毛饮血后的回甘。 &gt; 那时的我是一个极其缺乏自信的人，唯唯诺诺的性格，最先生厌的人便是自己。 &gt; 时间其实不是河流，冲不走任何人，时间是刀，能雕刻出任何人。我们没有成为我们曾以为的，我们成为了我们能成为的。 &gt; 在一个毫无生机的城市里，有一群朋友最大的好处就是，随时随地能够为任何一个理由团聚庆功、畅想未来。 &gt; “一个人开始变得完美，恰恰是从他愿意承认自己的不完美开始的。” ◆ 爱情孤独 爱情中没有胜者和败者，只有合适与不合适，不合适你再央求也没用，不如收拾好心情，燃烧起斗志，做一个能满足下一任的最佳男女朋友吧。 &gt; 有时，解释成了自讨没趣。有时，等待成了流离失所。有时，努力只是将对方越推越远。 &gt; 很多时候，那些恋爱中的技巧看起来只适合每天都活在细节里的情侣，而每天活在细节里的情侣，其实也不需要技巧，靠着两颗有安全感的心便能白头偕老。相爱，不过是学习开始彻底相信一个人。 &gt; 坦白讲，感情里必须要有争吵，那种寻求事情本质的争吵，有效争吵并不代表两个人感情不好，而是证明我们始终在为对方认真思考。 &gt; 总有人会因为你和他们不一样而不理解你，也总有人会因为怕和别人不一样而感到羞耻。 &gt; 写字右倾的人总是积极的，喜欢和人交朋友，却也容易受人的影响；写字右倾的人比起物质来更重视精神层面的交流。 &gt; 生命常有缺憾，幸好音乐能续久续长。 成长常有遗憾，幸好文字能温情温伤。 感叹时光荏苒，青春不再，感叹时光红了樱桃、绿了芭蕉，感叹时光旧了面孔、伤了回忆。 &gt; 因为成长，有了思绪的积淀，所以整个人活动起来就失去了青春期那种骨头生长时的脆脆的声响。 &gt; 说不出为什么爱你，但我知道，你就是我不爱别人的理由。 ◆ 理解孤独 很多事，说出来是一种解脱，但留在心里才能一直反省。 &gt; 有时候，不要担心确实是一种安慰。有时候，不要担心只是不想添麻烦。 &gt; 曾以为永远也走不出的细节，最终还是会置身事外。虽说时间会解决所有的问题，实质上它并没有解决问题，它只是帮我们把一些问题变得不那么重要。相信时间，也要相信自己的自愈力。 ◆ 现世孤独 你鼓起勇气说出自己的想法，却遭到众人的嘲笑。一条只有自己笃定相信的路，只有你一个行色匆匆的路人，不用在意他们的看法，因为你会在未来的路口等着曾经嘲笑你的人。 &gt; 纵使生命很长，只有一头一尾，但一个人真正的人生却是从你想使劲的那一天开始的。不必担心错过了就没有机会，我们会有很多开始人生的机会的，因为我们必然会一次比一次更清醒地顿悟。 &gt; 从没有人搭理的高中时光，到无人熟知的大学校园，每个人都在生命的长河里畅游，各有各的姿势，各有各的道具。你看看自己倒霉蛋的长相，一副皮囊站在岸边显得寒碜，于是决定憋长长的一口气扎到水底一路向前。不想被人看到你仰头呼吸的狼狈模样，只想别人看到你从终点钻出来，想看到他们流露出的震惊感。 &gt; 二十来岁的我们看不清未来的时候，常会觉得自己在稀薄湿冷的空气中难以呼吸。找不到新鲜的氧气，又没有可取暖的伴侣，一片混沌，不知道该往哪里去。有人停步不前，懒得前行。还有人唯一能选择的就是告诉自己再忍一时、再进一尺，把眼前的空气吸得一干二净，憋成猪肝脸死了也值。 &gt; 人就是很贱的一种生物。当你能承认自己不好、自己失败的时候，你就不再害怕外界的评价了。于是失败这件事自然而然就成为你生命中的一种常态，不再满怀希望，失望也就随之越来越少。 &gt; 我无法预见自己的生活将会发生怎样的变化，但我会继续珍惜每一份小小的惊喜与感动，努力活出一个真实的我。”是啊，如果为了一个未知的明天而放弃已知的今天，丢失的不仅是当下的快乐，还有一个真实的自我啊。 &gt; 有些日子，只记得事，因事想人。有些日子，却记得人，因人而记事。 &gt; 比如在记人的那些日子里，我记得你说“我不”时的决绝，记得你说“好吧”时的妥协，记得你说“可以”时的踌躇，记得你说“再见”时的不舍，一层一层，像大学校园里清洁工人来不及打扫的落叶，踩上去有厚实的质感，却也像是迷宫，层层都是我们对未来的迷惘。 &gt; 有一种孤独是 极力挣脱随波逐流的自己，尝试做一些不合群的举动，一开始总会被人误解，经过这样的孤独，才有真正与别人不一样的底气。 &gt; 有一种孤独是 想笑却不能笑，想哭却不能哭，总有一个声音在耳边提醒着你：要克制，要坚强，要让他们觉得你不一样。你做到了，旁人投来艳羡和赞许的目光，你微微笑，微微发颤，微微地有一种只有自己知道的孤独感。 也许，面对严寒，我们早已能够集气成冰，化冰为剑，胜利之后，蒸发得利落又无踪迹。可面对理解时，这些利器全化为水，流淌全身，需要排解。 &gt; 曾和一位前辈聊到招聘新同事的个人标准，不约而同地说到了社交工具账号，如果应聘者不用自己的名字注册，好感度便少了30%——说明这个人还没有建立社会个人标签的意识。如果前十条微博大都是转发内容，而没有个人原创见解，好感度继续降低——说明这个人没有自己的价值观。如果这个人的微博大多数都停留在吃喝玩乐的层面，好感度基本消耗完毕——一个没有自己钻研方向的人，工作起来也应该是没有情趣的吧。 ◆ 自我孤独 有人说有结果的付出叫付出，没结果的付出叫代价。其实人在年轻的时候无论有没有结果，都要去付出，除此之外好像也没有什么别的选择。 &gt; 后来遇见一些事，我知道躲也没用，跑也没用，心情不好没用，抱怨也没用，不如干脆安下心来，慢慢地走在雨中，看每一滴雨掉下来的样子，打在身上的样子，溅到泥土的样子，闻闻真正的雨的味道。 &gt; 有时候，道理可以不用说得太明白，只要用正确且对方能接受的态度表达自己的观点，必然皆大欢喜。 &gt; 听到颠倒是非的事情，不必非得骂回去，只需要“呵呵”。 看到搬弄是非的人，不必非得去扇耳光，只需要从有他的世界里消失。 冷漠和淡薄，是对不喜欢的人和事，最有力的反击。 &gt; 如果你停止，就是谷底。如果你还在继续，就是上坡。这是我听过关于人生低谷最好的阐述。 ◆ 群体孤独 &gt; 当面对两个选择时抛硬币总能奏效， 并不是因为它能给出对的答案， 而是在你把它抛向空中的那一秒里， 你突然知道你希望它是什么。 &gt; 有一种孤独是 你以为自己是人群中最孤独的那一个，最后你发现整个人群其实都是由孤独的人组成的。你不再为自己的孤独而失落，你会为那么多一样的人而难过。 酒是个奇妙的东西，心情好的人越喝越清醒，心情抑郁的人越喝越苦闷。 &gt; “理解”，是我们跟世界沟通之后想要的结果，我们一次又一次地试探，一次又一次地受伤，我们身边的人换了一拨又一拨，我们在拥挤的人潮中踮起脚尖、伸出右手，在空气中挥舞的样子，让人联想到沉入水底拼尽一切全力紧抓稻草的迫切感。我们那么努力，只是希望能遇见一个你，握着我的手放下来，摁住我的肩沉下来，双眼平视，瞳孔与瞳孔是两个彼此吸引的黑洞，一言不发，我们就会吸引对方跌入自己的世界，再也不出来。 &gt; 住了宿舍，和同学有了摩擦，有些话说到一半便咽了回去。因为我们已经开始知道如何保持自尊，如何维持我们与外界的平衡。 &gt; 初中时，我留着长长的头发，不敢与人对视，刘海留得长长的，遮住眼睛，觉得很有安全感。我以为当我看不见这个世界的时候，这个世界的人也就看不见我。直到有一天，我看见一个和我一样的人，消瘦的脸，满是青春痘，头发遮住额前，像个漂浮的游魂走来走去，他的确不在意任何人的眼光，但我们所有人却都能看见他，并有意无意地和他划清了界限。我们年少的时候总喜欢特立独行，用无所谓的态度去对待本该认真的东西，以为这样就可以与众不同。其实，这只会让我们离真实的世界越来越远。 &gt; 有时我们天然不喜欢一个人，是因为我们与他们离得太遥远；有时我们天然喜欢一个人，也是因为这种感觉——人最矛盾的地方就在于此。 &gt; 以前迷茫，是觉得四周与前方太黑暗。现在迷茫，却知道皮肤上有温度，雾中有阳光。 &gt; 每个人都会经过“我只是不想和大多数人一样”的阶段，渐渐你会发现，其实我们都一样。一样全力以赴追逐梦想，一样在迷茫中成长，一样承受孤独看荒芜的世界，一样受伤也伪装坚强。我们一样被自己蠢哭过，我们一样经常换头像，我们一样吃完方便面还想喝汤…… &gt; 其实我们都一样，一样想和大多数人不一样。 ◆ 青春同在，左右为伴 &gt; 我常觉得人一到某个阶段，生活就会开始给你做减法。它会拿走你的一些朋友，好让你知道什么才是重要的；它会拿走你的一些梦想，好让你认清自己能实现什么。 禅定时刻： 但行好事，莫问前程。这句话只对了一半，我需要前程，如若没有繁华的前程，我的善和镜中花水中月，有何分别？","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"答案，不过是场好觉睡醒","slug":"panjinlian","date":"2016-11-12T17:01:20.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/13/panjinlian/","link":"","permalink":"https://blog.yanng.io/2016/11/13/panjinlian/","excerpt":"","text":"这本《我不是潘金莲》是上个月 10 号看完的，断断续续大概用了三天时间，总共也就是五个小时的样子，我看书也不算太快，想看书的朋友可以参考下我的用时。不过说真的，这本书绝对值。还有这个月的 18 号冯小刚导的同名电影就要上映，我是打算看的，如果你压根没这打算，看完这篇文章也不迟，准确来说这其实是一篇整理。 书评： 本书给 5 星，不愧为刘震云。拥有深厚的文字功底和极强的编剧能力，难怪冯小刚喜欢把他的小说拍成电影。 阅读该书用时最短，几乎一气呵成，即使间隔很久情节也会瞬间连接上，不得不佩服刘写故事的代入能力很厉害。 刘的特点，善用分号。 一来是因为描述情节发展的同时，可以不断梳理思路，不仅自己写得逻辑不会乱，读者看的也明白；二来是将各方面因素都详细罗列，缜密且不累赘。 语言朴素，略微有些啰嗦，不过很有必要。情节的转折都很妙，有高潮有平淡，高潮的描述给人感觉如同身临其境的旁观者一般，平淡的描述也不会很无聊到想尽快翻页。 充满套路的官员，耿直的李雪莲；处心积虑的人，通达人情的牛；绞尽脑汁的局，造化弄人的天意。 人，终究还是被自己给害死的。 「微信读书」里有段书评，当然写的比我的更精彩，也一同贴在这里吧。书评编者名 黄芳 ，恕冒犯。 讽刺入骨。这世上的男欢女爱，谁能道一言天地长久？这世上的为官为政，谁敢摸着良心说我无愧？这世上的小民贫客，谁不是饱经忧患，满腔委屈？ 李雪莲告了二十年状，政府上上下下鸡飞狗跳，自己也从风华到了半老，为她得不偿失的半生不平，却也被她天不怕地不怕，只为翻转黑白的勇气折服。 好不容易想开了，愿意放手了，却被那帮伪善如惊弓之鸟的政府官员再一次催逼。好不容易以为半生郁结后，有年少时爱过自己的人来，重筑余生，缠绵失身后，却发现是一场不折不扣的阴谋。 行了几千里路，长年的斗智斗勇令李雪莲在路上分外小心，却拖垮了身体。好不容易到了北京，却迎来一个晴天霹雳般的消息，假离婚的另一个当事人突然离世。李雪莲哭了，哭得惊天动地，哭到不省人事。她觉得二十年的恨在那一刻全部化空，留下的只是无穷的羞。 于是，李雪莲想到了死，却在上吊时被人一句话逗笑。最后她到底是死是活，我们无从得知。 读这样的文字，是血中带泪的，是那种钝刀剌出来的疼，不痛快，满是郁结，像主人公耗在告状里的半生。 造成李雪莲后半生都处在兵荒马乱中的原因，有三个。 一是她的前夫。男人假戏真做，停妻又娶，弃孕中发妻于不顾。如果那时候李雪莲去找他，他不是当着众人面死不承认自己有错，又说出一句”你是潘金莲”这样的话，也不至于造成主人公后半生的悲剧。 女人之所以纠缠不休，不过是想求一句”我错了”，之后她会放你海阔天高，任你鸟飞鱼跃。 二是牵涉其中的一系列掌权者。李雪莲找人告状，从底层一步步找到北京，闯进人民大会堂。如果最初法院的判决不是明似公允，暗为逃避，如果没有法院委员和院长骂出“刁民”、“滚”，如果没有县长的虚与委蛇，没有市长的下令“弄走”以至李雪莲被关押一周，那么不至于弄到无法收拾。最后他们被李雪莲吓怕，人人谄媚，送东西请吃饭，却从来没人真正了解过主人公的真实目的，”堵”不如”疏”的道理，他们没有一个人懂。后来，终于有人看透，却在李雪莲以为的爱慕中掺杂进权谋、阴暗，她心中刚刚平缓的“气”被再度激起，且来得更为猛烈。 三是李雪莲自己。俗话说得好，不蒸馒头争口气。李雪莲的这口气争得太久，耗得太长，反而折累了自己。半生蹉跎，不了了之，“假”的还是“真”的，“李雪莲”还是“潘金莲”。 如果有人温情以待，那人原本该是同床而眠的前夫，该是为民做主的官员，该是费心拉扯的女儿…… 小说毕竟是小说，讽刺现实才是真正目的，我以为，是淋漓尽致的。 禅定时刻： 你推了我一把，我拍拍土还能站起来；你劈头盖脸骂我一顿，我点头哈腰不跟你争；你要是无缘无故误解我，不好意思我得跟你掰扯掰扯了。","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"今天我们都活成了一个废人","slug":"885","date":"2016-11-09T18:49:41.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/10/885/","link":"","permalink":"https://blog.yanng.io/2016/11/10/885/","excerpt":"","text":"那天因为朋友随口问的一个问题突然激起了我的辩论欲。 本来在分享网上传的比较火的一份职业学院体育系电竞专业的考试试卷，尤其是感慨学校的卧槽这也可以。 突然朋友就一脸认真地问，一个普普通通的电竞少年有没有可能参加上国际的职业比赛？ 我先说了句，你不关注这领域你上哪儿知道去。 然后巴拉巴拉…… 我也是几天没扯淡嘴痒痒了。从该如何包装炒作自己，到分析现如今的网红经济，又类比到演员的演艺生涯和运动员的职业生涯。总之一大套歪理谬论往他身上一扔，趁他没反应过来我先溜之大吉。 审题不清就答题是我一向的作风，要不然我哪能门儿门儿险过？ 但是还是回归到了一个大的话题，就是人活着是为了啥。 你说为了啥？ 要我说，人活着就是为了死，只不过是迟早的事儿呗。 那咋活？ 每个人无非都是在浪费时间。上班是一天，在家看电视剧也是一天。只不过是浪费时间的方式不一样而已。 你觉得刷朋友圈有意义；老屋檐下的人觉得在灶台前忙一上午给家里人蒸笼馒头有意义；学生觉得用父母给的钱跟朋友约去看场电影吃顿火锅有意义；在某大厦烟雾缭绕办公区的人们望着窗外升起的太阳长舒一口气又累的趴在桌子上睡着了，此刻他们觉得这些有意义。 在这个城市里，绝大多数人都是不知道自己想要什么，或是想成为什么样的人。他们都是迷茫的，迷茫中度过了大半辈子。然后在各种遗憾中伴随着无数深夜的烟头被一同冲进了厕所的下水道里。 随着各种直播平台拔地而起，各种 UGC 社区的设立，各种消遣时光的 APP 被一个个创业团队做出来…… 这么多消磨时间的东西被聪明的人创造出来，然后再把它们所为变现工具。看着直播平台一个个无聊到爆的人也可以吸引很多人关注，那些像「蓝瘦香菇」、「PPAP」等毫无质量的段子在互联网盛行，一些纯商业化的挑战人们智商的电影也可以公然放映，这些让我不禁担心我们的下一代人是不是成了整天想着怎么利用各种途径变现，而不去真正的进行一些有深度的研究和学习真正意义上的技能。 记得自己在某平台运营了一段时间获得了第一笔收入后发表过的一段话： 「在互联网时代的孩子们好像没有“人生第一桶金”的说法了吧，至少我追忆起来竟无从下手。靠什么才是第一桶金，挣多少才是第一桶金，恐怕这个概念会慢慢变模糊。感谢这个可以通过流量变现的时代，也但愿不要被IP浪潮冲昏头脑。人人都想红，但别忘了你是谁。」 在宇宙间不易被风吹散，处于乱世唯有自重才能得以保全。 有句话说得真好，现在的时代太容易吃饱穿暖，所以也就太容易沉沦，变成每日酒足饭饱的废物。 到时候我可不想听到有人回过头这么总结我们。上一代造福了这一代，这一代又毁了下一代。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"思考","slug":"思考","permalink":"https://blog.yanng.io/tags/%E6%80%9D%E8%80%83/"}]},{"title":"人为什么读书？ | 习惯重于方法","slug":"hushi","date":"2016-11-04T15:24:10.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/11/04/hushi/","link":"","permalink":"https://blog.yanng.io/2016/11/04/hushi/","excerpt":"","text":"该书只看了前五章，也只看前五章足矣，故没有评分。 前五章胡适就读书详细的谈了其重要性，如果有人想研究「人为什么读书」这一课题，胡适的这本书前五章便是参考。 书对每个人来说并不陌生，但书在每个人心中的地位还是有高低的。我认识到书的重要性已经过了九年义务教育，算是比较晚，但是还不算太晚，书什么时候读都没有禁忌，且随着年龄和见识的增长，从同一本书中得到的感悟也有出入。 所以刚开始真正意义上的读书时，认识到了读书的重要性，便试图自己写一些东西来告知人们，殊不知这是个可笑的举动。 原因有二。 其一，有关读书，今日看得胡适所说，便满脸羞愧难当。论文学积累等素养，我写那些东西不是班门弄斧嘛。况又见解不深，很容易使人误导，指到别的沟沟里去了。这是人干的事儿么？ 其二书中有没有黄金屋，书中有没有颜如玉，现在是个见仁见智的问题。有的人认为自己读书没实践中吃亏得来的经验更多，或是书中大多还是不适用现实生活中，与其浪费时间做一个理论上的巨人，不如避免做一个现实中的矮子。除了这类「读书无用论」的人，还有不会读书的人，看十本也不如别人看一本得来的多，这就另当别论了。 在读书的过程中，每个人都在这条长征路上，只是终点无穷远，远到看不见尽头。至于沿途得到了多少，只有自己心里清楚。 借用一句结尾——但行好事，莫问前程","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"}]},{"title":"安检","slug":"anjian","date":"2016-10-27T12:22:47.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/10/27/anjian/","link":"","permalink":"https://blog.yanng.io/2016/10/27/anjian/","excerpt":"","text":"这里的人双手举过头顶做投降状，一个个威胁生命的诸如 note 7 等设备被面目狰狞的典狱长纷纷拿下，趴在传送带上的穷奇张着大嘴在等着什么送进肚子里，而通过那扇门的人呢，如同狼狈的孩子收拾着自己的背包，嘟着嘴绝望的瞥了一眼被没收的玩具。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"安检","slug":"安检","permalink":"https://blog.yanng.io/tags/%E5%AE%89%E6%A3%80/"},{"name":"机场","slug":"机场","permalink":"https://blog.yanng.io/tags/%E6%9C%BA%E5%9C%BA/"}]},{"title":"灵感","slug":"e7-81-b5-e6-84-9f","date":"2016-10-27T06:41:34.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/10/27/e7-81-b5-e6-84-9f/","link":"","permalink":"https://blog.yanng.io/2016/10/27/e7-81-b5-e6-84-9f/","excerpt":"","text":"灵感是泛滥的，它时时刻刻都会光顾，甚至在走路的时候。但灵感又是奢侈的，只有独处或稳定的时候才可以把它码字成文，因此灵感会因没有理想的环境来赋予灵魂而消失的无影无踪","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"灵感","slug":"灵感","permalink":"https://blog.yanng.io/tags/%E7%81%B5%E6%84%9F/"}]},{"title":"一本 IT 男写的鸡汤﻿ | 技巧","slug":"jiqiao","date":"2016-10-26T17:11:31.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/10/27/jiqiao/","link":"","permalink":"https://blog.yanng.io/2016/10/27/jiqiao/","excerpt":"","text":"正值《成为乔布斯》简体中文版在亚马逊上架，同时也早就有收藏一本《乔布斯传》的想法，又刚刚好看到 tinyfool 在自己的公众号宣传新书，所以一心动 3 本书便一并收入囊中。 书收到时刚好是国庆，回家的路上就看了三分之一。不愧是继承了出书人的一贯套路，前边部分写的让人看的欲罢不能。 多么励志的程序猿之路！什么培训班出身，什么非专业毕业那都不是重点，只要你肯努力，程序猿的辉煌之路将由每一个有梦的人大刀阔斧的人走完。 犹如一个痴情的浪人，没有金钱，也没有任何地位，凭着那颗赤诚的心和不灭的毅力，终于死乞白赖的打动了梦里想睡无数遍的女神。 这是多么令人可歌可泣的故事。 通过翻看此书让我这个充满理想主义的青年更加坚定程序之路的信念，这比看池建强的书还激励人。不过后面写的东西，再看我就要流鼻血了。 外面已经是数九寒天，穿了里三层外三层裹得跟个粽子一样的你热的都想出去裸奔，但你妈还是叮嘱你多穿点儿；你已经在黑板上密密麻麻的写出了一道题的 8 种解法，但老师还是想跟你唠叨一种方法。已经成年的你不需要人和爸妈一样的管着你，但你男朋友总是三句话离不了「多喝热水」。 一种义正言辞的底气似乎油然而生：「我这可都是为了你」。 这本书的后半部分便是这种感觉，鸡汤喝多了流不了鼻血，但让人老想上厕所。 鸡汤太多，也就看的奇快，因为长时间不翻页就睡着了。 看完距离现在有半个月的时间，我故意隔这么长时间再写，为的是看看我脑中还留下多少有关书中的内容。如果留下的不多，那该书的价值也不是很大。 但不可能一点都记不起来，要真是这样那就有两种解释了，书真的很烂没有值得我记住的，或是我根本没认真读。无论哪种解释，烂书终究是烂书。 扯远了，这本书还算不上我说的烂书。 tinyfool 为了传递一些正能量，拿自身举证。换句话说就是会把自己使用的能使人进步的方法写出来，供读者参考，如果仿照和他一样的方法生活或工作，可以取得不小的进步。不信？那你看 tinyfool 不就是个活生生的例子么。别看他胖，人家可都出书了。 其中也有一些很受用的技巧，比如利用 iPhone 上的播客来学习英语的口语，每天听，直到不需要字幕就可以看懂美剧，发到这种程度日常用英语交流完全没有问题了。等等这些还是可以借鉴，不过终究是别人的技巧，还是因人而异，各取所需吧。 整本书 tinyfool 言传身教，内容真实，虽然过于表达自己的想法并且自黑会失去人们对其达到膜拜地步的可能，但诙谐幽默的风格和对自己清晰的认知，没能成为人们心目中大神级的人物，却也能一点一滴的用文字来激励那些迷途的路人。","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"},{"name":"技巧","slug":"技巧","permalink":"https://blog.yanng.io/tags/%E6%8A%80%E5%B7%A7/"},{"name":"程序员","slug":"程序员","permalink":"https://blog.yanng.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"}]},{"title":"妈，你怎么那么爱笑啊？因为妈生了你啊","slug":"849","date":"2016-10-26T12:07:18.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/10/26/849/","link":"","permalink":"https://blog.yanng.io/2016/10/26/849/","excerpt":"","text":"“妈，我给你买了一个冰箱，双开门的” “妈知道” “妈，那件绿色的皮衣我也给你买了” “妈知道” “妈，你怎么那么爱笑啊” “因为妈生了你啊” “妈，我现在是喜剧演员了，好多好多人喜欢我” “妈知道” “妈，我好想你” 就这样，在平淡无奇的一天毫无防备地被戳中泪点，诺大的网吧，朋友还在游戏里厮杀，而在他身旁的我却早已泣不成声。 _《你好，李焕英》_是根据贾玲亲身经历改编的缅怀妈妈的小品。贾玲、陈赫、张小斐联袂演出，这个作品也被网友冠以“多年未见的好小品”。 “它没有在挠你，它没有在抓你，它就是在慢慢的刺你的心。” ——岳云鹏 对，就是这样。 现在大多数电影和小品，要么是商业味儿浓厚，又或是为了迎合人们快节奏生活而催生的「快餐」式作品，只有极其少数作品才能称得上是精品，而我认为_《你好，李焕英》_便是精品之一。 @吴柯奈__何 说：《你好，李焕英》出现在这个物质空前发达，精神空前空虚，物欲横流的的拜金年代，各种社会德道和人们珍惜的真情正在被挑战和颠覆，对于真情正在或者已被破坏的人来说，它是一个回忆，所以我们颤动和哭泣；对于漠视或者破坏真情的人来说，它是一个警醒，所以我们反思和流泪。 看完小品的我的心情仍久久不能平复，一部小品居然有如此大的震慑力，竟能准确地抓住我内心深处的软肋。 平时的我们一般理性多于感性，看到情感类的作品，即使产生很大的共鸣，也不至于哭的稀里哗啦。而贾玲的_《你好，李焕英》_却不像那些为了煽情而煽情的小品，倒不如说是贾玲众多走心作品里的上乘之作。 还记得上次贾玲感动到我的作品是_《喜剧啊，喜剧！》_，让我看到了周星驰的影子，为了梦想放弃男友，后台不止一次流泪的贾玲对喜剧的执着，鼓舞了许多追梦路上的人。 贾玲在喜剧道路上的执着相信看过她作品的人都是有目共睹，这也和贾玲爸妈从小的支持是分不开的。 对于贾玲的爸爸，小品没有着重交代。但他爸爸年轻的时候可是个不折不扣的文艺青年，贾玲从小就耳濡目染，接受文艺的熏陶，这对贾玲以后的喜剧生涯起了很大的作用。 对于贾玲的妈妈，贾玲一直都留有遗憾。在一次的电视节目访谈中，贾玲的姐姐说出了自己妈妈去世的原因，贾玲姐姐说，有一天爸爸妈妈一起去通稻草，但是可能因为草堆的比较高，然后妈妈坐在爸爸开的小翻斗车上，然后不小心失足摔了下来，摔倒了小脑，当场就去世了。贾玲说自己当时一下火车赶去的地方就是火葬场，当时妈妈已经在火葬场了，但是贾玲还是难以相信事实，虽然贾玲的姐姐已经让贾玲去看妈妈的最后一眼了，但是贾玲说，自己那个时候就是傻的不能相信妈妈已经去世的事实。 子欲孝而亲不在，最悲哀的事莫过于此。 很多人说是_《你好，李焕英》_捧红的_《依兰爱情故事》_，其实这首歌是2015年由一位叫方磊的音乐人创作的，收录自专辑_《某》_，方磊本身就是依兰人，而这首歌就是在描写依兰每个人的平淡生活和爱情。 老妹儿啊 你等会儿啊 咱俩破个闷儿啊 你猜那 我心里儿啊 装的是哪个人儿啊 美女儿啊 屌丝儿啊 他整不到一块堆儿啊 啥人儿啊 就啥命儿啊 咱俩就凑一对儿吧 _《依兰爱情故事》_中的爱情虽然没有什么海誓山盟，也没有_《梁山伯与祝英台》_等经典爱情故事那么凄美，但是就是这样的平淡，却深入每个听众们的心中。 《你好，李焕英》 贾玲的_《你好，李焕英》_据说一辈子只演一场，从来没有一部小品能让我笑着笑着就哭了，但这部小品做到了。","categories":[{"name":"影评","slug":"影评","permalink":"https://blog.yanng.io/categories/%E5%BD%B1%E8%AF%84/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"催泪","slug":"催泪","permalink":"https://blog.yanng.io/tags/%E5%82%AC%E6%B3%AA/"},{"name":"影评","slug":"影评","permalink":"https://blog.yanng.io/tags/%E5%BD%B1%E8%AF%84/"}]},{"title":"整整 9 年没人管的事儿，这次老罗给你解决了","slug":"luoyonghao","date":"2016-10-26T11:19:28.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/10/26/luoyonghao/","link":"","permalink":"https://blog.yanng.io/2016/10/26/luoyonghao/","excerpt":"","text":"10 月 18 号科技界出了大事，不过是件好事。在江湖上亲切的被称为「罗玉龙」的 罗永浩 发布了两款手机，Smartisan M1和 M1L，以及 Smartisan OS 3.0 和 3 大具有划时代意义**的功能**。 距离发布已经过去了将近一周的时间，新锤子手机也得到了相当多的好评（至少在我的朋友圈里都是夸赞 M1 的），周围即使不关注手机圈的朋友也都渐渐开始对 Smartisan 这个品牌投怀送抱。 这次发布会的视频也不容错过，除了美观的手机外观展示，还有惊艳发布会全场的 3 个功能的演示视频（迅飞智能语音输入、Big Bang、One step），如果你还没有锤子，相信也会对这 3 个功能赞不绝口的。因为抛去锤子手机不说，这些功能解决了我们日常生活中使用手机经常遇到的痛点，光凭老罗认真的精神就值得为他竖起大拇指。 Big Bang（大爆炸）： 用拇指大面积按压屏幕中的文字，“Big Bang”会将你按住的那一段落文字全部“炸”开。按照语义智能拆分成易于选取的独立的字和词，由你随心所欲地选择，并可直接搜索、分享和复制。开创性地解决了在手机屏幕上难于处理文字的弊端。 One Step ： 通过拖拽完成将信息发送至应用或联系人的动作，节省了在不同应用之间切换的诸多步骤，打通手持设备中应用间的边界。人生苦短，能 2 步走完的路，就不要走 9 步。 还有一支发布会的 96 秒快闪，相信你一定会喜欢上这款手机的。 来自微博用户@艾莫莫教授 剪辑 虽然我帮锤子安利，但老罗不会给我一分钱，忧伤 QAQ","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"发布会","slug":"发布会","permalink":"https://blog.yanng.io/tags/%E5%8F%91%E5%B8%83%E4%BC%9A/"},{"name":"罗永浩","slug":"罗永浩","permalink":"https://blog.yanng.io/tags/%E7%BD%97%E6%B0%B8%E6%B5%A9/"},{"name":"锤子","slug":"锤子","permalink":"https://blog.yanng.io/tags/%E9%94%A4%E5%AD%90/"}]},{"title":"嗯，又换主题了","slug":"zhuti","date":"2016-10-21T22:19:38.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/10/22/zhuti/","link":"","permalink":"https://blog.yanng.io/2016/10/22/zhuti/","excerpt":"","text":"不知不觉建立博客已经快两年了，期间换过不少主题。 每次总是刚换上觉得。诶呦，这太漂亮了，不再换了，以后非它不使。 然而没过一礼拜，又看腻歪了，觉得哪儿哪儿不对劲，就琢磨着捯饬捯饬。 结果呢？全乱了。 得！干脆再换一个呗。 就这样来来回回也换了上百个主题，但总是不太满意。 说起我来，也不算是个前端，论代码我只是略知一二。每次涉及深层次代码，诸如CSS，JavaScript之类，我大部分还是看不懂的。 唉，又想博客漂亮又不想碰代码，哪有这种好事情？ 每次只是鼓捣一点，能知道一点知识，也就能进步一点。不算太亏。 其实前端还是蛮有趣的，如果以后有幸能成为一名前端工程师，我一定会好好打造这个博客。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"WordPress","slug":"WordPress","permalink":"https://blog.yanng.io/tags/WordPress/"}]},{"title":"平时觉得可有可无，但丢了还真有点舍不得","slug":"erji","date":"2016-09-28T03:58:16.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/09/28/erji/","link":"","permalink":"https://blog.yanng.io/2016/09/28/erji/","excerpt":"","text":"这两天去给人打工，一家汽车4s店举办活动，几个哥们忙得跟狗似的（不过期间也挺欢乐） 一个小时也就10块钱的样子，还不管饭。挣不了几个钱，就权当吃苦受罪体验生活了，谁叫咱中国的劳动力永远都是廉价的，况且活儿还没什么技术含量 活动举办完收拾会场后天就不早了，临走的时候有点儿冷，就从包里掏件衣服披上 回来一觉睡到今天下午，正想用耳机听两首歌正式开始剩下半天的生活时，突然发现我的耳机好像在掏衣服时掉了！！！ 干两天活儿就挣一百多，一副耳机要二百多，Wtf ？ 沮丧的我，就像是日了dog 还好晚上出去约了一波，还去看了火华社长和张译主演的《追凶者也》 像我们这些没什么文化的夸这部电影就几个字——卧槽，真他妈好看 本来不打算发文，刚刚发现自己找到了耳机，瞧我这奶子，虚惊一场。 失而复得的感觉真好，hhhhh 所以我打算写文，向你们这群夜猫子荼毒一下社长的这部电影，期待一下","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"追凶者也 | 我看过最逗的犯罪片","slug":"zhuixiongzheye","date":"2016-09-28T03:50:55.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/09/28/zhuixiongzheye/","link":"","permalink":"https://blog.yanng.io/2016/09/28/zhuixiongzheye/","excerpt":"","text":"“你个鸡枞！” “算求” “黑丝袜，大砍刀，这么老长” “过来掫一把” 整个电影云南方言和东北话随意穿插。说实话，刚开始40分钟其实有点后悔看这部电影。 8月份就看到电影的主题曲MV，刘烨和张译操着方言，哼哈二将唱着歌不是歌的什么鬼，肯定特有意思。 当时就发条微博，就只有四个字「追凶者也」，算是立个 flag，心想一定要拉着朋友去看。 这部号称最不像商业大片的黑色幽默，连导演自己都说这是一部不怕剧透的电影。 确实如此。 电影又名《吊水岩杀人事件》、《边城凶案》。影片讲述了在偏远的西部村寨悄然发生的一桩残忍凶案，被警方推为首要疑凶的憨包汽修工宋老二与落魄古惑仔王友全、夜总会领班董小凤一齐上演的一部嬉笑怒骂黑色逃杀故事。 电影一共用五部分来描述整个事情，穿插手法可谓精湛，还以云南方言做为段落小标题，分别为：1.憨包 2.小烂屎 3.土贼 4.乱屁麻麻 5.鸡枞——使得地域特色和人物性格鲜明浓郁。前三个章分别以宋老二视角、董小凤视角、王友全视角叙述，每一章多透露一层细节，一点一点接近。后两章以上帝视角继续开展，观众从一开始的一头雾水到后来真相逐渐从水面浮出。 结构有点罗生门的意思。 不过电影的前40多分钟我一直在努力找笑点，尴尬的不停地瞥眼儿看朋友有没有睡着，毕竟是我一直吵着要看。庆幸的是朋友都还在认真地看着荧幕，前边第一排倒是有个大叔打起了呼噜，整个电影院的人都在找是哪里的呼噜声，不禁觉得可笑。这个倒是给焦灼的电影情节穿插一段只有本场次才能看到的愉悦插曲。 情节张弛有度，每当故事到了焦灼的时刻总会有笑点来瞬间释放。宋老二和宋兴贵争执之时，「老司机带带我」的手机铃声突然响起，顿时引爆观众的笑点。 看完电影我就跟朋友说，这种喜剧可能不像大众喜剧一样立马就会有笑点，它一定是和早先单口相声那样，为了引爆一个梗而埋很长很长的包袱，你只有不错过任何细节的听（看），到你快疲惫时一下抖出来让你明白梗的点。而这，就是它妙的地方。 用韦其江的话说，通过人物的重点刻画，让习惯动作或语言将色彩刻板印画在观者的脑海中，用人物表现将包袱甩出，并在人物身上安装笑点炸弹，观者接住了包袱，也被笑点轰炸的合不拢嘴。 本着不剧透，不谈票房，扯开评分的原则，这些就是我对这部电影的感受，说再多都是徒劳，不如先看看预告，喜欢就去电影院支持这部电影吧。","categories":[{"name":"影评","slug":"影评","permalink":"https://blog.yanng.io/categories/%E5%BD%B1%E8%AF%84/"}],"tags":[{"name":"影评","slug":"影评","permalink":"https://blog.yanng.io/tags/%E5%BD%B1%E8%AF%84/"}]},{"title":"从没写过 10W+ 的老司机谈谈微信公众平台","slug":"10w","date":"2016-09-13T08:30:20.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/09/13/10w/","link":"","permalink":"https://blog.yanng.io/2016/09/13/10w/","excerpt":"","text":"又是一个平凡的周六，一上午天空灰蒙蒙的。路上的人该赶路的赶路，心想你丫给我绷住了，别耽误我挣钱。这不，果然午后太阳终于出来了，丫最后也没憋住，活活在平淡无奇的这天来了个太阳雨，连这天气也怪讽刺。 拿驾照不算早，也在微信公众号这条路上开了没几年车，要说老司机其实也算不上。 如果说拼，哪能拼得过这些人。 写的真有两把刷子，早就做过几年乃至几十年的编辑。这才是真正的老司机，开起车来老练稳重、娓娓道来，长篇大论起来你不得不佩服，而且逻辑思维还特强，文章结构的框架比看得人都清晰，谈论某个话题，见解独到，内容直击要害，从来不多说一句废话。他们的文章还特别高产，等火车之余你在嗑瓜子，他已经在那儿抱个 Mac 码了3000字的 Blog 日志。这与多年的阅读积累和码字积累有关，这你不得不服。 达不到上述境界的呢，虽然他们刚进圈子，有时却也能靠着脑洞赢得赞誉。人们看了道，这文案牛逼，随手转发朋友圈。这便是对他们的好评，于是他们吭哧吭哧地码字，绞尽脑汁地继续写文讨好人们。靠追热点的就更苦逼了点，半夜哪个明星发个微博宣布点家里那点事儿，“ Teng ”地一下从床上爬起来，查阅各种资料，迅速码字成文，长舒一口气点击发布，此时窗外的天已经亮了，眯上一会儿就该上班了。到了办公桌前，睡眼惺忪地打开后台，边心喜看着涨起的数据边吃着匆匆在路边买的包子，工作之余还在不断关心其他人追热点的姿势美不美，看能不能学习到一些更犀利的看问题角度。呵，真是生命不息，学习不止。 现在早已是自媒体的时代，“再小的个体，也有自己的品牌”这句 Slogan 从 2012 年微信公众平台上线以来就一直在用，而微信团队也确实在为打造这样的生态而努力着。现在微信公众号已经达到 8 位数，而且以很快的速度在疯长。现在周围几乎 10 个人里都开通了微信公众号，不管现在是否还在坚持更新，不过对于我们来说，有个微信公众号已经不是一件非常酷的事情了。 微信公众号的盛行给现在一些个性的年轻人降低了创业的门槛，他们只需要一个号，通过图文的方式传递他们想要表达的东西，并因此吸引更多感兴趣的人加入。再加上微信团队对创作者的鼓励，这样一来，当变现变得没有那么难之后，他们就可以继续做有趣的事情，一切是多么美好，这在大部分上一代人的认知里是一件从未想过的事情。 有许多人发文分析：微信公众平台的红利期已过，新加入的自媒体圈粉将变得越来越难。这句话我只认同一半。 新号圈粉确实不如一开始就注册的大号。大号已经形成了自有品牌，认知度很广，大多已经形成自己的风格，一大批新号如果再去模仿同样的风格，导致大量的号同质化是一方面，最主要的是新号很难在诸多号中成功突围。现在的粉丝又不是傻到没有分辨能力，做的不如大号分分钟取关，又没和你签生死状，凭什么在你身上耗费精力？ 微信公众平台仍然具有活力，我知道你又想跟我罗列目前微信图文打开率下降，僵尸微信公众号越来越多等等这些大数据分析，甭急，让我慢慢说。以上所述当然不是绝对，现在公众号的定位和内容仍有很大的空缺，如果找到并坚持，新号做大也只是时间问题。纵观其他门户的自媒体平台，今日头条、腾讯媒体开放平台、UC订阅号、百度百家、搜狐媒体平台、网易媒体平台、一点资讯等等这些已经没有什么本质上的区别了，充斥着大量抄袭、标题党、限制级图片等等，审核工作不严谨，而大部分的互联网使用者并非都具有理性思考、辨别的能力，反而助长了乱象丛生。我只能说，平台监管之路任重而道远。冯大辉、 Keso 、池建强、阿禅等老博主，抛去和 Allen 的私人关系不说，也曾多次发文理性分析微信平台仍具有活力。再加上不久就会上线的应用号，微信公众平台的的活力，才刚刚开始。 码完字看一眼窗外，雨早就停止，地都快被晒干了。这时街上的人又多了起来，他们匆匆赶路。刚才那几片乌云偷偷飘走，在某个地方、某个时间继续讽刺着大地上的人们。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"有关排版，扯两句","slug":"you-guan-pai-ban-che-liang-ju","date":"2016-09-13T08:28:15.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/09/13/you-guan-pai-ban-che-liang-ju/","link":"","permalink":"https://blog.yanng.io/2016/09/13/you-guan-pai-ban-che-liang-ju/","excerpt":"","text":"一直喜欢阿禅 可能吧 网站和微信的文章排版，谷歌百度都不得其解，正就此打算放弃。没想到今天禅叔傍晚发了一则朋友圈： 结果收到时已经是 8 点 24 分，迟了一分钟，不过粉丝太多，有延迟我理解。 满怀欣喜的看了文章，风格依旧很禅叔。学习了，遂打赏，转发朋友圈想让更多的人学习，毕竟微信好友里有不少也在做微信。 他们中有自成一派的，也有正需要学习排版的。总之，好的东西就要分享。感兴趣的朋友可以去 可能吧 公众号看最新一篇文章，我粉丝没他多，也算不上是打广告。 看看禅叔的观点： 良好的排版不仅让人赏心悦目，更重要的是，我们可以适当地调整排版，让内容的呈现符合用户在屏幕上的阅读习惯 此时朋友圈下评论 A 说： 其实像我这种排版模式固定了，几分钟也能弄好 A 类自媒体，运营多年自己的号，早就形成一定的规模。字号、行距、左右间隔调整好，插图处理完成，一篇文章就大致成型了。再复杂的排版，一旦形成机械化动作，其实慢不到哪儿去。 指的就是这些，初期通过不断调整风格，慢慢演变成固定的风格、模板化，这样以后的工作量就会少很多，每次只需要将文字部分完成，再将自己风格的模板套入其中，推送出去就成了接下来要做的唯一工作。 这类排版风格最佳代表就是 咪蒙，大部分微信图文排版也基本都是这么完成的。 评论 B 说： 这篇太繁琐了，只要多些空格，不要花乱，清爽一点就可以。哪里还搞那么多的时间去排版，这种是给时间充足无聊的人玩的 这个评论其实挺耐人寻味，也是让我萌生写一篇文章念头的起点。 我回复是： 只能说撸长且深度问的和写段子的排版方式有出入吧 这里有必要解释一下。 B 类自媒体，其号的运营方式是段子。看段子，乃茶余饭后如厕之时，消遣时间的最佳方式。段子可以短时间愉悦心情，排版方式大多不需要及其刻意排版，多敲空格、回车使文字之间间隔宽，使读者看段子时没有那么难受，说专业点这种手法叫 “留白”，不过又不完全属于留白，留白只是一种艺术表达形式，但是二者目的是一样的，就是为了—— 不难看。（这不废话） 这类排版自媒体里面最有名的当属 深夜发媸，大多数号目前都已经熟练地掌握这门“技能”，据说这样排版 既美观又可以拉长篇幅。 还有一种，姑且叫做 C 类自媒体。排版方式走特殊路线，i 排版、秀米什么的一概不用，完完全全是自有的风格。这里又可以分为两类，一类完全不排版，全靠朴实的文字来打动读者，这个一会儿举个例子说；另一类就是用 Markdown 排版或涉及到代码。 我们都知道，微信的图文就相当于一个 html 容器，就像网页一般，代码和文字的结合形成了你所看到的每篇漂亮文章的样子。 所以将代码部分进行修改，来达到想让文字呈现的效果，也是一个很好的排版方式。 这类排版方式其实很多老博主都在用，因为他们更青睐结合 MD 来进行创作，这样更方便快捷。如果说玩代码，当属 JZ 的微信图文玩的最溜，当然也有 i 排版等老司机们。 不排版的号，王五四算一个。王五四言辞犀利，却备受欢迎，被迫经常换号，粉丝仍锲而不舍，看着订阅号列表躺着一堆已死的号，如同当年攒干吃面卡片一般珍惜不舍取关，这便是王五四的一个个军功章。 所以一千个哈姆雷特可能有一千种审美，排版这事真是不好说。 话说回来，禅叔不用排版器的原因很符合我目前的想法： 1、容易撞衫：你用得的样式其它公众号也会用，没有特色。 2、不够精致：大多数排版器的样式，从用色、行距、字体大小等，都没经过特别自己的设计。 3、不符合写作规律。 第三点严重认同，为了写作能更专注，我逐渐放弃排版。避免一键排版，尽量代码化，创作时环境纯粹些。 简言之就是写作时少操排版的心，排版时以简洁直观为原则，尽量还原图文最本质的作用——传递信息","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"应县农家","slug":"ying-xian-nong-jia","date":"2016-08-25T15:40:24.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/08/25/ying-xian-nong-jia/","link":"","permalink":"https://blog.yanng.io/2016/08/25/ying-xian-nong-jia/","excerpt":"","text":"一 经过了一上午的时间长途跋涉，一下午的时间参观应县木塔。晚上随便找了家面馆吃罢刀削面，孩子们回到家已是接近深夜。 这次孩子们的行动，他们自己称之为“北上”。学校在晋中以南地带，而老家在晋中以北，故为北上。 应县是其中一个孩子的老家，也是他们北上的其中一站。这个孩子住在应县的农村，为了快些回家只能打车，但还是用了将近20分钟才到。 刚一到家，热情的老父亲和老母亲便把孩子们迎进门。作为家中最小的儿子，他和50多岁的父母在一间不大的屋子里忙里忙外地招待着这些来家拜访的同学。 父亲黝黑的脸上写满了岁月的痕迹和照顾不周的歉意，“咱家的炕不像你们家的床，娃们别嫌弃，随便坐哇”。 “不用客气，能坐的惯”孩子们纷纷说着客套话，以示礼貌。 简单地互相寒暄了几句之后，由于狭小的屋子容不下这么多人，全家又带着孩子们去隔壁院子睡觉的房，收拾炕褥又多次交代了些事情，方才回去睡觉。 二 为了照顾好这些远道而来的孩子，身体还略微带有疲倦的母亲一大早就开始做起了饭，这时的村子才刚笼上一层薄薄的雾。 太阳升到半空中，孩子们才一个个的起床。睡惯了软床的孩子显然看起来是一晚上没有睡好，睡眼惺忪的叠好被子，提上鞋子，便往隔壁院子赶去洗漱。 还没进院子就看到烟囱往外冒出了阵阵的浓烟，周围飘着饭菜的香味。看来又劳烦人家了，一个孩子心想。 孩子们一个一个用井水洗掉白天在途中沾染的尘土，转眼嬉笑打骂间就到了晌午。 “看娃们还想吃点啥喝点啥，你给买去”说话间母亲从口袋中摸出一张红色的毛爷爷给了儿子。 说罢孩子们几个人并坐两、三辆电瓶车一起去村边小卖铺，没一会儿提回来大大小小包装袋，有火腿有饮料，总之钱花的所剩无几，不过客人来了总不能怠慢。 吃饱喝足之后孩子们横七竖八地躺在炕上不得动弹。“有点困，回房睡去吧”孩子们纷纷“响应”不知谁的号召，便回到炕上补夜里没有睡好的觉。 三 这一觉便睡了半下午，醒来时家里的大人已经下地务农去了。孩子们又是几人分配了几辆电瓶车，去大棚参观参观。 这会儿天气正好，湛蓝的天夹杂着被太阳染红的云，这里的微风吹在孩子们的脸上舒服极了。 大棚里都是家里种的西红柿、黄瓜、芹菜，并没有几亩地，孩子们看了也甚是兴奋。 地里的西红柿长得又大又圆，颗颗都是老父亲老母亲日日夜夜劳作的成果。孩子们挑了几个吃的起劲，塞满柿子的嘴里还在连连称赞：“真新鲜！” “不想吃了就扔，咱家柿子可多呢！”母亲挂满汗珠的脸在余晖的照耀下显得格外不同，一种自豪感油然而生，似乎这是唯一让她值得骄傲的事情。 不一会儿，地里的好柿子一颗颗被摘下来放进纸箱子里，最后足足有几大箱西红柿被搬上了拖拉机。 经过一阵颠簸，一脸淳朴微笑的父亲从拖拉机上下来，找到菜市场管理员商量。那菜市场管理员看了一眼车上的西红柿，面无表情道“先卸下来”。“好嘞”上了年纪的父亲原先腰杆就不太硬朗，应的同时下意识地又弯了弯腰。 为了能多卖几个子儿，现在的父亲如同小县城来的毕业生蹑手蹑脚地坐在空调房里的面试官对面，似乎稍有不慎就有可能惹恼了对方，一切准备工作都将会白费。 孩子们帮着一箱一箱地把西红柿搬下来，市场管理员仍一脸严肃地看着箱里的西红柿，像极了当年验收中国人苦力的鬼子包工头。 筛选，装篓。不一会儿孩子们就把活儿给干完了。搬到大秤上，管理员有模有样地拨了拨尺上的游标，又算了算。“嗯”了一声，摸摸鼻子然后从腰包里排了92块钱给了老父亲。 接过钱的父亲仔仔细细地包好这些钱，塞进口袋，如释重负地上了拖拉机，随着拖拉机“突突”冒出的烟，消失在了管理员的视线。 四 日子总是非常短暂，到了孩子们离开的时候。 送孩子们到院子口的老父亲老母亲仍是面带着照顾不周的歉意，不停地嘱咐着孩子们“没事就回来多住两天”，孩子们满口应合着，恋恋不舍道“会的，会的”。 伴随着“回去吧，不用送了”，孩子们一步一回头，在不宽的乡间小路尽头变成了几个模糊的小黑点。 “北上”之旅的应县这一站，就这样在几日的欢快中结束了。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"浅谈读书","slug":"qian-tan-du-shu-zhe-jian-shi","date":"2016-08-22T15:14:18.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/08/22/qian-tan-du-shu-zhe-jian-shi/","link":"","permalink":"https://blog.yanng.io/2016/08/22/qian-tan-du-shu-zhe-jian-shi/","excerpt":"","text":"“早上买的，下午就送到了” “毕竟上海，物流就是给力” 下午朋友发来刚签收的书的照片，看来我安利的还是蛮有用的。 最近的事情主要还是看书。 之前不明白，为什么一个书呆子会整天捧着一本书之乎者也。在这个现实的时代，只追求精神食粮的人似乎总会遭人嗤之以鼻。“一心只读圣贤书，两耳不闻窗外事”的境界实在令人佩服，不过也有些过了。这里就浅谈读书这件事，为什么说“浅”呢？看到后面你就明白了。 古人总云，书中自有黄金屋，书中自有颜如玉。有关读书的好处，我想列位的父母长辈就说的挺多的，在这里我也不废话了。只谈谈于我而言，谈两点：读书的体验与读书的方式。 读书即看书，有人说还有品书和评书，抱歉，我还达不到那种境界。我看书的速度其实并不快，达不到江湖上说的一目十行，也谈不上一天通读一本。我看书非常仔细，有时看的过快又返回去再看一遍，速度自然就慢下来了，不过效率达到了保证，也就不在乎看书有多快。看书和其他事情一样，也讲究熟能生巧，看得越多思考的速度越敏捷，读的速度就会越来越快，所以我一点也不担心在速度上慢于其他读书的人。 读书的方式，有很多种。这里的方式指的是用来读书的设备或姿势，总结起来我有三种。 其一，纸质书，也就是实体书。纸质书即我们对书认知上最直观形象的体现，都拥有学生时代的我们自然对它不陌生。我对纸质书的体验随着年龄的增长在进行微妙的变化，年轻时不喜欢念书，这里的念书指的是上学，每次面对课本这种肩负着改变所有中国人命运的使命的书籍，总想去见周公他老人家，而且和他老人家心心相惜，不在他那里打会儿麻将恐怕难以说明我和他有良好的交情。从此见到其他纸质书也会变得昏昏沉沉，总模糊地看到他老人家的背影，似乎在召唤我：“嗨呀，又三缺一，你楞个办噻？”。在学校图书馆借一本书回来，发誓一定要看，结果扔柜子里吃了半年灰，期末学校催得快问候母亲了才翻出来归还，逾期交的钱都快买得起一本新的了。前几天亚马逊赠得一书券，满199减100。于是从不放过任何便宜的我也挑了七、八来本纸质书，书的质量没的说，原价加起来跟订单价比较便宜的一塌糊涂。没几天书回来随便拆开一本就开始看，体验完全不是之前的一回事。也不知是毛爷爷的魅力还是书的内容吸引人，读起来也不想以前那样痛苦不堪。实体书的质感其他设备根本无法比拟，触手即得的体验语言是形容不来的。我隐隐觉得今后的日子还要为买书而剁手，想到这里竟有种说不出的情绪。 其二，纸质书折扣虽大但还是嫌贵？电子书就是最好的选择，电子书的优点可不止比纸质书便宜，平时看书主力还是手机上的电子书。在这里安利我一直在用的阅读APP——微信读书，它与其他阅读APP最大的不同有四点：1，微信好友根据读书时长每周进行排名，这样鼓励了一大批书友来比赛，无论想赢得排名的心理是怎样的，不过最终的好处是都读了不少的书，这一点微信读书的创作团队抓得特别好；2，每当阅读时长达到30分钟，赠送1书币，书币攒起来又可以去书城买书，这样既支持了正版又鼓励了读书，双赢的决策真是妙；3，部分书籍支持赠一得一，我只要把书分享给你，这样两个人都得到了这本书，还有我如果已经购买这本书，就可以赠给你，你也可以省下一笔开支，很是方便，分享书的同时增进了人与人之间的感情，你说我能不喜欢它吗；4，可以在看书的同时做标注，看纸质书时有个忧虑，想对一些精彩的部分标记或是想在某些文字旁记录想法，却怕写写画画影响书的整洁与美观，这下好了，在微信读书里记录下的想法到最后还可以进行整理罗列。所以平时用微信读书来看书占得比重还是很大的。 其三，不久前购置了一部kindle，关于kindle我觉得需要说的不多，因为像这种实体的数码产品，你只有亲自感受，才能知道它的使用体验究竟如何。不过我想说我一个有趣的现象，在购置kindle之前，怕自己买来没几天就把它扔到一边，所以就先不断培养自己的阅读习惯，直到阅读习惯渐渐培养起来，感觉自己不会辜负kindle了，于是就放心大胆的入手，结果一直到现在，手机仍然是我看书的主力，kindle的使用频率并没有超过手机。后来我明白了，除了kindle没有手机那样便于携带的原因以外，我只要是培养起了阅读习惯，用什么设备、通过什么方式看书已经变得不再重要，重要的是从没停止过阅读。 有关读书，自古以来文人墨客都有谈及，自以为我这个无名小卒谈论“读书”这个选题还尚未具备资格，只是可以说说自己读书的那点事儿，所以斗胆加了“浅”一字，望诸位见谅。 以后会推荐我读过的好书给大家，昨天的算是第一本吧。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"8月17号是TA的生日（微信运营之路）","slug":"8-yue-17-hao-shi-ta-de-sheng-ri-wei-xin-yun-ying-zhi-lu","date":"2016-08-20T14:43:57.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/08/20/8-yue-17-hao-shi-ta-de-sheng-ri-wei-xin-yun-ying-zhi-lu/","link":"","permalink":"https://blog.yanng.io/2016/08/20/8-yue-17-hao-shi-ta-de-sheng-ri-wei-xin-yun-ying-zhi-lu/","excerpt":"","text":"前两天有两个生日值得纪念：一个是长者90大寿，由于政治原因，就不多说了；还有一个，就是微信公众平台4周年。 了解我的人知道，每次我都会说“订阅号”。其实微信公众平台目前有三个类型，订阅号是其中的一种，在你的微信「订阅号」的页面里。另外两种是服务号和企业号：服务号指的是躺在你微信消息页面蓝色字体的号，它不同于订阅号可以每天群发消息，它一个月只能发4条，但是功能和接口比订阅号丰富；企业号指的并非以企业为主体认证的订阅号或服务号，而是功能更多的特殊号。于你们，企业号与上面两种号最直观的区别就是不可以单向直接关注，而是需要企业号邀请才可以关注，私密性比较强。其实未来还会有应用号，这将会是微信的杀手锏功能，以后会大大降低创业团队的开发成本，更方便我们的生活。期待如此吧。 好了，简单的科普做完了。接下来说说我的微信运营之路。 内容过多，容我慢慢道来，但愿这篇文章不要写的过于繁琐。 一 初生牛犊的好奇心 我的第一个订阅号在2015年1月24号注册，完全出于好奇心。 当时自己使用微信频率并不高，主要还是以QQ为主。 现在看来注册时间有些晚了，而且不是一般的晚。 为何？ 4年前，也就是2012年的8月17日，为了创造更好的用户体验，形成一个不一样的生态循环，微信公众平台上线。 “再小的个体，也有自己的品牌”这句话现在看来已经非常明显了。 有很多在内测期间就已经注册的号，他们大多是IT界元老级的人物和一些著名的博主，如冯大辉，和菜头等。 他们的号一天可以发3条，你可以说这是特权，但谁让你之前没有把握机会？ 那时的公众平台还不如现在的完善，排版就更不用说。 所以经过不断地完善，现在的微信公众平台总算是像模像样起来，甚至催生出一些有关的职业，有排版有运营，不过产生最大的化学作用是让「内容创业成为可能，甚至可以快速形成粉丝经济，快速变现」。这个是最可怕的事。 你看，微信公众平台对现在的影响有多大。 说注册的晚了一步，其实除了前面说的，还有一点。 2014年10月份，微信正式关闭了个人类型订阅号的认证渠道。 其实之前除了一些机构代码等认证方式，还支持新浪微博，腾讯微博辅助认证，认证过后可以获取更多的接口权限，最明显的好处就是可以用自定义菜单栏，以及可以在菜单栏放自定义链接。（目前开放自定义菜单给所有号，但仍不能在菜单栏放自定义链接） 我是1月注册的，所以又错过了这一良机。 我的第一个号名字很low。 low的我都不想介绍它的名字。 不过今天有个喜大普奔的好消息，所有个人类型的号都有一次改名的机会。 我在微博上说：“好多和我一样当时中二起的破名字乃至不得不放弃运营的强迫症自媒体们仿佛又拾起了希望” 那么我的第一号主要做什么呢？ 当时的定位很杂，有设计，文案，摄影，段子，鸡汤，简直毫无个性。 现在回过头看看当时的推送，感人的渣排版，网上扒的水印配图，想想那是的我也真是可爱至极。 看着当时拉来关注的七姑八姨莫名其妙点进去“贡献”的阅读量，也真是难为他们了。 所以我的第一个号就这样在大张旗鼓的高调中诞生，在自己由于强迫症悄无声息地停止了更新。 然而最后就这样什么都没得到？ 并不是。 二 误打误撞接手校园号 那时正值新春佳节，放寒假回家闲来无事，遂申请了个微信订阅号研究。 每天做的事情就是到处宣传和悉心打理我的第一个号，并乐此不疲着。 “学校的号你有关注吧，有没有兴趣来运营呢？” QQ上有个人找我。 这是谁？ 看资料比我大两届，啥时候加的这个人，我已经记不清了。 “你是？” “噢，忘了自我介绍，我是你们学长，你不是之前加过学校的社团么？我是社长，咱们社团主要是研究新媒体的，这你知道吧” “知道” “是这样的，咱们社团的主体其实就是那个微信公众平台，现在咱们学校缺少能运营的人，我见你空间每天都在宣传一个公众号，那是你自己的吧？我的意思就是想让你来接触一下，看能不能运营，你看怎么样？” 我推了推眼镜，思考了良久。 “可以，只不过我也是刚接触，有许多需要学长指导” “OK，没问题” 这一答应，没想到成为了我在微信运营生涯上不可分割的一部分，甚至改变了我人生的轨迹。 于是，第二个号就这样不期而遇。 它是学校类型的订阅号，后台粉丝大多我所在的学校学生。 第二个号的注册主体并不是我，但却是我运营时间最长，投入精力最多的号。后来学长毕业，也把微信的运营全权交给了我。 这个号带给我的太多，一时不知从何说起。 两年的运营时光磕磕绊绊，有苦也有乐。那就说说我个人得到了些什么。 1，认识了很多行业相关的朋友和大牛，他们中有做过很多年的大佬，也有比我入行稍晚的新手。不过现在大多只要是到现在都还在坚持做的都比较成功 2，在学校与几个志同道合的朋友结缘，成为一支团队，共同维护这个号。团队每个人并不索取任何「好处」，完全都是因为兴趣和为了成长而走到一起，我觉得这是大学生涯中除了舍友情之外的弥足珍贵的情谊 3，毕竟身处行业的属性是媒体，虽然后台粉丝都是学生，但他们大多都是重度互联网依赖者，换句话说就是一般的套路都不一定撩的动。所以我每天都会思考下一次应该推送什么话题，热点，八卦，段子都得看，看完还需要研究为什么能受学生群体欢迎，如何与本校的特点相结合。这都是推送内容方面需要考虑的事情 4，光有内容还不行，所谓校园号，一些功能性的东西还是要有的。为了方便学生平时查课表，期末查成绩，需要找各种第三方平台与微信后台对接，而且由于学校的教务系统特殊性，数据库表单并不能提交到第三方平台，需要找人专门开发。说出来都是泪，不过终于还是解决了这一大难题，方便了全校学生。作为运营者也算是有一点欣慰吧 5，无论哪个时代，颜值永远排在第一。我说的是微信图文的颜值——排版，好排版的好处恐怕我说的有人的耳朵都会起茧了。对于排版技巧的研究从接手平台那一刻起就列入了计划，为此还关注了不少排版很美观的号和一些教你排版的号。经过两年的摸爬滚打，排版方面不说已经很优秀，最起码也对得起读者的眼睛了。 6，更多的我想身处这个行业的人都有同样的感受，网上流传着这样一个梗：（如下图） ) 虽然很夸张，不过也确实如此了 三 创业大赛接触服务号 为了丰富大学生的课余活动，也为了培养其创业理念。学校也像模像样的举办了创业大赛。 当然喜欢折腾的我也坐不住了，所以拉了几个伙伴像模像样的报上了名。 我们团队的项目是做鱼外卖，名字都特别的有个性，美名其曰——鱼来了 由于做的是电商相关，开发公众号无疑是最佳的选择，团队里我最有经验，所以这方面由我来负责。 这次是第三个号，注册类型为服务号，并非订阅号。 上面也提到了，服务号拥有更多的接口权限，对于一些功能的要求可以有很好的支持。 由于只需要自定义菜单栏功能和自定义链接，并不需要微信支付等更高权限，所以没有进行认证。所以号属性为未认证服务号。 支付方面通过菜单栏引导，接入行业内有名的某赞，即可完全满足团队项目的技术要求。 由于自己有一定的基础知识，再加上需要的要求并不高，所以这个号的开发对我来说很容易。 但是最后项目没有成功入围，在评委pass掉的一瞬间，我明白了：目前，在BAT（Baidu,Alibaba,Tencent）垄断的外卖行业的背景下，在中国打任何外卖行业的主意都已经是徒劳的，即使勉强做起来，也免不了会被其中一家吞掉。 虽然项目没有入围，不过仍是学到不少，也有幸接触到服务号。 四 对小白网民痛点的尝试 发现越写越多，几年的运营之路还真不是三言两语就能概括的。 第四个号，是我针对现在一些小白网民的一些痛点而进行的一次尝试 此话怎讲？ 这里还是引用我曾经在博客上说的： 不想让更多的人对专业名词的不懂而对整个科技界望而却步，从而放弃享受更多科技带来的乐趣和便捷。一些人想弄懂一件事，从网上查到的解决方法里含有大量看不懂的名词，他就会放弃学习的欲望。所以导致了一种懂的人越懂、不懂的人更不懂的现象，而且懂的人也不知道怎样说才能让外行人更快的理解那些生硬的名词，就像你无法解释某个词的土话为什么要那样读，所以这会让好多事情变得无法继续开展下去。例子不胜枚举，我就不一一阐述。但让我头疼的是，一些名词，除了借鉴搜索引擎或知乎论坛等，我也不知道以一种怎样的方式才能让更多的人一看就懂。就是说我有科普的想法，但开展方式仍然还没有头绪，只能这么先搁置，我却毫无办法。 如你所见，有一颗伟大的心，但没有相应的能力。可能对这个想法的期望值太高，反而陷入一种窘境。 期间做过许多的尝试，试着能否换一种方式来运营，是否可以改变一点方向来试它有的更远。 做过哪些尝试在这就不多说，又是一个大题，要说就没完没了，改日再详谈。 所以，目前这个号是搁置状态。 五 弃繁从简返璞归真 经历了众多繁华过后，反而放弃追求一些所谓的虚无缥缈的东西。 关于具体想法之前也有提到。 如果说之前的我是忙于平台的搭建和运营，那么现在这个号就是一个分水岭，之后的我则是追求内容创作。 能写出脍炙人口的文是我目前最想要的追求。 我启程了，而且依然在路上，以后会走的更远。沿途会遇到开在石头上倔强的小花在对我微笑，在夕阳的映衬下画风显得格外温暖。 我想，这就是人们口中说的「值得」罢。 六 微信运营的延伸之路 微信运营之路，今日所谈只是冰山一角，所用文字也朴实无华，没经刻意渲染，但均是所想所感，毫无妄言。 微信公众平台做到现在的规模，有不少有才之士从中得到自己想要的东西。 时至今日越来越印证我的想法：无论哪个时代，内容输出依旧是王道。 当内容遇到互联网，擦出的火花会比上个时代更绚丽夺目。 用几句经典结尾吧： 这是一个最好的时代，这是一个最坏的时代； 这是一个智慧的年代，这是一个愚蠢的年代； 这是一个光明的季节，这是一个黑暗的季节； 这是希望之春，这是失望之冬； ——狄更斯《双城记》","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"为了用微信2.0，我打算降级Mac","slug":"wei-le-yong-wei-xin-2-0-wo-da-suan-jiang-ji-mac","date":"2016-08-20T14:40:29.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/08/20/wei-le-yong-wei-xin-2-0-wo-da-suan-jiang-ji-mac/","link":"","permalink":"https://blog.yanng.io/2016/08/20/wei-le-yong-wei-xin-2-0-wo-da-suan-jiang-ji-mac/","excerpt":"","text":"今天上午，Mac微信2.0终于上架，前几日网上有人下载了内测版并抢先体验。 具体更新了如下功能： 但遇到一个尴尬的问题。 我的Mac目前运行着最新的Mac OS版本：10.12（sierra） ) 听说这版微信并没有适配最新的MacOS，安装后会出现闪退卡顿等各种问题。 所以我为了微信，打算退回旧版本系统——OS X 10.10（Yosemite）。是的，跳过10.11版本。 最明显的好处如下： 0，可以使用最新的微信 1，系统更为稳定 2，可以解决从升级10.11一直以来的诟病，就是通过wtga启动Windows时会非常慢，而且导致Mac发热严重，所以前一阵子痛下心来格掉win启动盘，发誓再也不让Mac运行Windows（主要是心疼）但其实根本原因还是出在Mac的系统上。 3，Mac用到现在，一些内部文件冗杂，无法通过普通的清理软件删掉，重装系统是最有效的办法 4，…… 有关第2点的信息量较多，改日写文具体说，其实只要是极客都会折腾到这些东西。 大概怎么降级呢？ 步骤有下： 0，先备份，先备份，先备份 1，下载10.10镜像 2，找一个大于8G的U盘做启动盘 3，镜像写入U盘 4，重启进入安装 5，安装完的善后工作 其实过程复杂，且信息量过多，就不一步一步说了，感兴趣网上一把教程。 说这么多乱七八糟的为啥？ 就是想说：刚才一直在等硬盘分区。我要开始折腾啦，电脑需要遭点罪，预祝我降级和安装最新版微信成功。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"Mac","slug":"Mac","permalink":"https://blog.yanng.io/tags/Mac/"}]},{"title":"新挖的坑——我觉得有趣的一百个订阅号","slug":"xin-wa-de-keng-wo-jue-de-you-qu-de-yi-bai-ge-ding-yue-hao","date":"2016-08-15T03:29:02.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/08/15/xin-wa-de-keng-wo-jue-de-you-qu-de-yi-bai-ge-ding-yue-hao/","link":"","permalink":"https://blog.yanng.io/2016/08/15/xin-wa-de-keng-wo-jue-de-you-qu-de-yi-bai-ge-ding-yue-hao/","excerpt":"","text":"在一座大山里住着一个农夫和他年幼的孙子。每天清晨农夫都会坐在窗前摇头晃脑地读各种诗书。 有一天孙子问农夫：“爷爷，我也想试着像您一样读书，有时我读着似乎理解一点，但是一合上书却又忘记了。我不明白读书到底有什么用？” 爷爷取出一个装煤的篮子对孙子说：“你拿着它去打一篮子水回来。” 孙子照做了，但是每一次还没有回到家，篮子里的水早已经漏光了。 他很不解地望着农夫。 农夫对他说：“你应该跑得再快一点。” 孙子又照做了，但是无论他跑的多快，无论试了多少次，水依然会在半路就漏光。 他对农夫说：“爷爷，用篮子打水是没有用的。” 农夫指了指篮子，问道：“你真的觉得没有用吗？” 孩子看了看篮子，惊讶地发现，原本又黑又脏的煤篮子，现在里里外外已经非常干净了。 农夫接着说：“书就像河水，人的心就像装煤的篮子。虽然篮子无法装满水，但是篮子在河水中会越来越干净。 我们看似没有在读书中得到实际的东西，但是阅读的过程中，你所读过的好书会影响你的气质，你的思想，会净化你的心灵。” 上面的故事，是在一个号看到花两元打赏，并贴过来想分享给大家的。 最近事情多，没有可以静下心来写字的机会，今天晚上只能乘机写一些想法，明天一大早又要去赶火车，路上说不定可以酝酿出好作品。 为什么要贴这个故事？ 这篇是在公众号《每日进画论》偶然看到的，据我了解号的主人是个喜欢画插画的女生，每天她都会把自己的练习放在推送里分享给大家看，她的画说不上是神来之笔，但也颇有几分清新之感，。 这个故事就是她其中一篇推送里的，至于出处已经无从考证了，不过可以确定的是：故事不是她的原创。但我仍然打赏了她以作为感谢，因为能让我读到一则好故事，这用多少金钱都无法衡量。这个故事是有关于读书的用处，我对读书的看法，改日我会专门写文（又开始给自己挖坑）， 为什么要为这个故事付费？ 一直以来，我们都在听着免费的音乐，用着盗版的Windows，甚至看着枪版的电影。长期的习惯和整个环境的影响，使得我们很少有为内容付费的习惯，甚至对于周围人花钱买正版的行为表示不理解。所以到了自媒体时代，一些写字的人由于人们根深蒂固的思维而不肯为其付费阅读感到很无助，自己辛辛苦苦创作出来的作品，虽不能成书，但写出的内容字字句句即是劳动的成果，无法变现的窘境是大部分以内容输出为主的人的苦恼。深深明白自己也许终有一天会成为内容的创作者，也希望人们可以为自己的内容付费进行阅读，所以从很早的时候便有了给人打赏的习惯，经济并不富裕之时看到脍炙人口的文章，就算有1元也会忍不住打赏。是学习的同时也是致敬，看完文章之后消化成自己的，不算偷不算抢，打赏就变成了学习写作的学费。你说，学写作去哪儿找这么便宜的地方？ 为什么提到这个号？ 是因为我在开这个号之前就有一个想法，那就是设定一个长期的写作目标，可以理解成一个系列。同时在微信公众号方面的研究也有不少年头，到目前为止已经关注不下上百个优秀的公众号（虽然现在在不断取关无营养的和忘掉初心的），他们有的从一开始我便关注，一路走来见证它们的成长，认识不少这个行业里的人；也有的是一些很早就开始的号，他们已经积累上百万的粉丝，各个风格迥异，吸引着各行各业的人关注…… 不卖关子了，这个长期的系列就是——【我觉得有趣的一百个订阅号】，以后会不定期的推送这个系列，到这个号一周年之前争取写完这一百个，它们或许不是做得最好的号，也不是特别值得推荐的号，但它们对于我的意义是微妙的、不同的。有的是因为某个号的主人有趣、见解独到、疯癫或是坚韧，有的是因为某个号曾经在我的运营生涯中带给我很多价值，所以我有必要把他们都写下来。 我知道我又给自己挖了一个巨大的坑 Orz","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"今天，我关掉了朋友圈","slug":"jin-tian-wo-guan-diao-le-peng-you-quan","date":"2016-08-15T03:27:48.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/08/15/jin-tian-wo-guan-diao-le-peng-you-quan/","link":"","permalink":"https://blog.yanng.io/2016/08/15/jin-tian-wo-guan-diao-le-peng-you-quan/","excerpt":"","text":"从凌晨一点开始，各大平台被宝宝的家事刷屏。 朋友圈的段子手们又从床上艰难的爬起来打开电脑开始码文。 实在是受不了关心别人家事的写手，遂关朋友圈一天，可以稍微喘口气。 本人是不太理解以追热点为生的写手。靠这种八卦写出的内容来博人眼球的做法，是否真的可以提升写作能力还有待考量。 不过目前的看法是：太多披着实事热点外衣的无质量文章在经过套路加工过的标题后，被无知的网民「刷」高阅读量，容易冲昏创作者的头脑，使得产生一种「自己写的东西受到许多人的欢迎」的错觉。 其实并不是自己写的有多么好，而是应该感谢这个多元且高速传播的互联网。 对了，还得感谢一些乌合之众。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"写作，实则是在填坑","slug":"xie-zuo-shi-ze-shi-zai-tian-keng","date":"2016-07-30T16:49:18.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/31/xie-zuo-shi-ze-shi-zai-tian-keng/","link":"","permalink":"https://blog.yanng.io/2016/07/31/xie-zuo-shi-ze-shi-zai-tian-keng/","excerpt":"","text":"每个人身上都有太多相互冲突却又浑然一体的想法。自认为是个无聊的人，也总做着无用的事。但思考这事在我看来尤为宝贵，没事就会进入冥想，任凭“灵魂出窍”至九霄云外。关于写作方面，我认为还没有交代完，不过放心，过后关于这些东西便可从脑中掏得一干二净，以后绝不会再提，同时也主要是想图个自己内心的慰藉。 我曾深度研究过怎样能使一篇文章最起码能让人看起来不累。排版是一个好的解决方案，而且还可以锦上添花，不过我已经过了追求华丽排版的阶段（但适当排版不能少，这是对读者最起码的尊重）。 还有一个就是配图，千言万语的描写，一张图片便可轻松囊括，但我仍不愿借助图片，而是尽量用文字描述。王小波的书中并没有任何插图，却仍用朴实的文字将环境和细节描写的惟妙惟肖。比如在《黄金时代》，王二和陈清扬在山上“敦伟大的友谊”，陈在薄雾中如考拉一般用腿盘着王二，做着不可描述的事情。王小波在把握一定尺度的前提之下，在那个年代为我们打开了性启蒙的大门，文风直至今日仍很受欢迎。 韩寒在蔡崇达所著《皮囊》的序言里写到：好的文字往往带给人两种阅读感受，一口气读完或者舍不得读完。以上所述，便是文字具有强大力量的引证。 我在开通这个号之前，一致把自己写的想法都记录在我的博客里。 为什么需要博客？ 主要是因为我微信添加的大多都是自己认识的人，但有时并不想在有他们的地方发表一些言论。加的好友越多，一些情绪和感悟的发表就显得很拘束。有的朋友见不得别人装逼，偶尔在朋友圈矫情一下都会引来一阵冷嘲热讽，也懒得和这种人辩解，但是过后还是觉得浑身上下不是很舒服；有的人是家里的长辈，偶尔吐槽一下生活中的不满，若是被他们看见了，不是被下面留言数落一顿就是立马小窗过来一些阅读量还不低的心灵鸡汤，逼的只能乖乖看两眼然后保证积极面对人生。 所以我决定自己租服务器，买域名备案，安装WordPress系统来搭建我的个人博客网站，采用简洁的主题，主要用来安心写作，没有旁人左右我的思绪。（感兴趣的朋友欢迎点击“阅读原文”访问我的博客。）后台有个人看完我写的之后给我留言说：文人真是矫情。我并不否认，确实为了能够更好地表达自己内心深处的想法，需要把自己放在一个纯粹的环境，不知其他人写作是怎样，至少只有那样我才可以直面真正的自己。所以出于礼貌，我也回了一句：文人真是毛病多。是赞同，同时也是自嘲。 写作，实则是在填坑。 但每次填坑的过程，又会不断给自己挖很多坑，这样就可以适当避免自己遇到「身体被掏空」的窘境，同时也可以给自己提供源源不断的写作思路。反复如此，便可达到内容输出犹如潺潺流水一般的效果，期间还可以不断提升写作能力、揣摩写作技巧。 至此，公众号有31个关注，感谢你们仍然还在。在不刻意推广的作用下，近期的文章保持在10+的阅读量。不错，我写的文还仍有人愿意读，我就已经感到很高兴了。更让我欣慰的是，后台有人给我留言说置顶了这个号，并说目前觉得挺有趣。那我争取做到不让她取消置顶，做到不让你们取消关注。 我仍然会做到不自己推广，如果我的文章有一天写得好了，我相信不久就会口口相传。东野圭吾曾在书中写到：妄想博得名声，只会有损尊严。就像做产品一样，如果用户体验很差，就把下大力气花大成本在电视、报刊上的品牌广告给毁掉了。 所以 要想包子卖得好，与其在街上大造声势，不如用心做，让其飘香十里。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"谈谈写作 | 今天永远觉得昨天做的东西像狗屎","slug":"686","date":"2016-07-29T15:01:24.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/29/686/","link":"","permalink":"https://blog.yanng.io/2016/07/29/686/","excerpt":"","text":"那天朋友圈里一个刚入行不久的年轻设计师朋友看了一篇文章，然后有了以下云云： 这篇文章引发很多设计师的思考和共鸣：一个设计师如果周期可以是5年的话，那么5年对他们来说意味着什么，设计师们5年之后究竟该何去何从。这种思考尤其对刚学设计毕业的出来或者热爱设计一心想要在设计界打拼出一片天地的人是非常敏感的，因为这关乎他们的未来。试问30岁之前能有几个5年来试错？所以留给他们选择的时间并不多。 其实今天并不是要谈设计相关的东西，而是要谈谈他看完这篇文章之后写的这些话。整个文最打动我的其实不是对时光飞逝的感慨，也不是对未来生活的迷惘。而是他最后写的： 尽量少的去写东西，因为看起来很幼稚。就像我看以前的自己一样。 嗯，就是这句。 我每天都有一种奇怪的想法：上一秒还在夸自己的聪明机智，把自己佩服的五体投地；下一秒又觉得自己一无是处，上次做得东西就像狗屎。 就像某篇文章里写到的一样（具体哪篇就不说了）： 请让我引用杜绍斐的原话： “每一个自媒体人或者说正在创业的人，都在这样的状态下反复，每晚睡前都觉得自己一无是处马上要完蛋了，第二天早上又觉得自己太牛逼了，世界都是我的了。” 是的，我们经常是这样神经质的。上一刻都被自己感动了，下一刻又觉得自己被掏空了。 其实我一直以来关于写作都在做两件事，一个是试图找到一些合理的解释来说明我为什么写作的强迫症如此强烈然后再克服它们，另一个是在找到解释之前尽量多的找写作灵感。 第二件事我一直在做，为了能写出有质量的东西，我要变得比其他人对一件普通事情更加敏感，思考的比其他人更多，还要不断使自己变得矫情和伤感。（目前觉得人在伤感时更能激发创作意志）而白天需要与人进行愉快的信息交流，是矫情不起来的。所以大多选择无人的夜，失眠时静静的把自己的想法敲进手机里。喜欢半夜码字原因也有很多，改天专门写文剖析之。 第一件事我也在做，只不过这种事情单单靠主动修行是达不到目的的，需要每天思考才能找到答案，而且答案不固定不唯一。 就像我那天发了篇博客，戏称自己有一大堆的写作强迫症，这也不能写那也不能写的。 其实还好，这些只是「懒」的借口。但我还是很乐意把自己的想法用文字的形式记录下来的，就算是为了让自己多记住以前的事情。 所以我会不断强调，这个号主要是写我个人主观情绪多点，而且排版方面会越来越淡化，也从不追热点，在众多自媒体追求这些物质的大背景下，我更喜欢反其道而行之，让自己变成真正写字的人，而不是靠花哨的排版吸引一些喜欢小清新的文艺青年。不经任何包装的我的文，看起来更像是赤裸裸站在人们面前的少女，任由看客指指点点。但我希望这样，这对我的文是有好处的，在这里不便剖析。 之前的我可能会追求排版上的优雅，认为一个好的排版就像一个人穿着一身体面的衣裳，端庄而不失礼貌。曾经的排版引无数读者的好评，甚至有不少人想让我亲自传授给她一些技巧，当然我是毫不吝啬的奉献，而且她也凭借好的排版从一个不知名的小号变成一个每篇文章都会赚很多打赏的大号，这种进步是在排版上下功夫的结果。然而在追求排版美观这期间，每每拜读一些大V的文章时，他们并没有进行任何排版，便可轻松破10W+，年轻的我很是不解，为何我这般费时费力，效果却这般凄惨？之后的我明白了，他们的文体现在内容，这才是一篇文章真正灵魂所在，三言两语势如破竹，字字珠玑直逼要害之处。一篇文章最成功的体现就在于能强烈激起读者共鸣，而他们做到了。 关于标题，我曾经为了吸引更多的读者去阅读我的文章，曾用过套路无数。在这个“自古深情留不住，偏偏套路得人心”的年代，套路的使用貌似更容易让人接受。无论是用套路追女生，还是用套路写广告文案，往往更让人“被套”的心服口服。前几日的一篇推送“脑洞风暴 | 爆改APP启动图”，有做新媒体创意方案的朋友建议我其实题目可以再推敲，而我其实不想再起那种标题，人与人真诚一点不好吗？ 我不会在这个号透露自己的个人信息，并不是高冷，而是不想给人一种急功近利的错觉，这也是我不愿利用我已有的人脉推广这个号的原因。每个运营者都会关心文章的阅读量、点赞量、转发量等等，实话说我也在乎，但这种做法有些急于求成，反而达不到练习写作的目的。与其说我开通这个号如此任性，倒不如说我想利用这个号来压制自己内心的虚荣，从而在这个膨胀的“媒体圈”中找回迷失的自己。同时，你也可以通过这个号远离令人窒息的热点，远离浮躁的互联网，找回灵魂真正的归属。 还有一点，我从不会叫关注这个号的人为“粉丝”，我不是一个营销为目的的号，只是让大家看我写的文，叫“读者”最合适不过，我觉得对双方都比较尊重。 我说这些纯属我个人看法，如果你也认同那么谢谢，不认同我也尊重，毕竟智者见智仁者见仁。这个号看似想把大部分人都推开，实则更想吸引一些和我个性相近的人群。有些事情不是做不到，而是经过一些事情之后，不再追求所谓的一些表面上的物质，希望你能明白我的良苦用心。 下面贴出和菜头有关写作的几段文，如果能从中得到一些东西那么我的辛苦就没有白费，也同时可以解释我现在要开始在内容创作方面坚持的原因： 最近我周围有很多找工作的朋友，我想说：其实时间对于我们来说，就像手中的沙一样，看谁能抓住多少，就能把握多少。我们总是抱怨生活中没有机会找我们，但我们主动去寻找过它吗？咒骂人生太短，唏嘘相见恨晚，不如在这有限的时间燥起来。 毕竟，我们有最大的资本，那就是——年轻 最后感谢为我这个号设计LOGO的朋友 原来的那个确实有些low （依旧不放二维码）","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"减法","slug":"jian-fa","date":"2016-07-27T11:06:06.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/27/jian-fa/","link":"","permalink":"https://blog.yanng.io/2016/07/27/jian-fa/","excerpt":"","text":"最近在不断给自己做减法，微博和订阅号逐渐取关，只留一些有用的足矣。尽量收敛自己，通过耍一些小花样秀所谓优越以达到满足感不是自己想要的。要么沉下心来踏实做成一件事，要么死。优柔寡断欲说还休的样子最丑，关朋友圈少发微博，冒出想法有本事码字成文，要么就去读书。自以为是装逼界元老，其实自己是这个（小拇指）","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"关于「斜杠青年不狗带」（想法篇）","slug":"guan-yu-xie-gang-qing-nian-bu-gou-dai-xiang-fa-pian","date":"2016-07-27T10:05:05.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/27/guan-yu-xie-gang-qing-nian-bu-gou-dai-xiang-fa-pian/","link":"","permalink":"https://blog.yanng.io/2016/07/27/guan-yu-xie-gang-qing-nian-bu-gou-dai-xiang-fa-pian/","excerpt":"","text":"关于这个号，其实有蛮多想说的东西。但我更青睐的表达方式不是写，而是找个人跟他聊。可惜，我周围并没有这样的人，或者说有，但不想听我逼逼一些他不理解的想法，这对那位朋友来说是痛苦的过程。 没错，跟我这种人聊天，一般会不知不觉的被带进一种模式。这种模式里的话题永远都是宏观的、远大的、甚至有深度的，和我聊天，上一秒还在讨论今天吃的什么，下一秒便进入了一个很深层次的讨论，涉及心理学、哲学或者充满理想主义色彩。从此愿意主动找我说话的朋友便没剩下几个。 不知从何时起，我便与常人的思考方式和行为方式有所不同，性格也与常人有异，因此总是人群中每次活动最容易被忽略的那个。于是我就有了大把的时间来弄一些自己感兴趣的事情，只要跟计算机和互联网沾边的东西，我都会去研究。但我也不是纯技术宅，在此我也不一一解释我都做过什么了，也没意义。 但有一个必须说：微信公众号 实不相瞒，这已经是我的第5个微信公众号了。之前做过各类型的号，有高校类的订阅号也有商业化的服务号，后台的功能权限无一不知，排版风格也是受到众多好评，会根据相应受众推送相应的内容，也追过一些热点话题。 说这些有什么用呢？其实不是在秀，一个人开10+号的比比皆是，排版在业界数一数二的也有的是。只是想说在微信运营“混迹”了3年，得到了一些东西，也想放弃一些东西。 得到： 内容。现如今，依然是内容为王。不管你是否认同，但我始终觉得：一个人有内容输出的能力，那就永远不愁没饭吃。平台虽然也重要，就好比平台是骨架，而内容却是一个人的灵魂。二者缺一不可，但没有灵魂的躯体就和傀儡无二了。 原创。可以说我有一种强迫症情结，一个号就算放着发霉也不会去抄袭，这是我的底线。哪怕实在写不出东西来，我也从不会窃取别人的劳动成果。做微信这几年来关注过不少原创号，每次遇到写的好的文章，即使手头再紧张，也会忍不住去打赏，现在已经是一种习惯，我不知道为内容付费是不是周围人口中所说的我这“是一种很傻的行为”，但确实从心里尊重这些写字的人，三言两语便可之机器心灵深处，让人无不称快。最近有很多号只写了十几篇文便拿到了原创标识，从微信的鼓励政策也不难看出，原创输出才是当下最需要的。 放弃： 排版。每天都有一大批新注册的微信公众号诞生，在这个鼓励“再小的个体，也有自己的品牌”的时代，人人都想做自媒体。而美观排版的号往往能够在审美方面从众多“不走心”的low排版的号中脱引而出，这也是一种好现象，更是一种好习惯。各大微信图文编辑器任你挑选，一些没有版权的图任你植入。但每个新媒体人的苦只有自己清楚，为了找到一些素材，翻遍各大网站；加各种微信群报各种所谓的培训班，就为了能让自己的图文看起来不那么难看；一篇篇幅并不多的文章一排版就是几个小时，辛辛苦苦发出去文章看着两位数的阅读量蜗牛似的往上爬，心里有种说不出的滋味。所以这个号主要以内容为主，能不排版尽量不排版，也不是说原文贴上去就不管了，适当调整行距和加粗一些重点让文章看起来不是那么累即可。 推广。每个公众号运营者其实比谁都希望涨粉，目前也有很多“快速”涨粉的技巧。但我本人其实是反感推广的，我的第一个订阅号，完全是出于好奇注册的，刚注册好就到处大张旗鼓的宣传，拉拢七大姑八大姨玩微信的都让关注，平时也用一些“涨粉神器”来推广。没几天，倒是有不少关注量，但实在不知道发什么内容，也就小打小闹没几日给停更了。后来运营学校的号，前期涨粉方式就是通过投票，后来因为内容做的不好取关了一大批（我想你肯定也反感微信投票）所以目前最好做到不刻意推广号，甚至不愿意往朋友圈转自己的文章，如果你觉得我写的可以，那么你转发我的文章是你的自由，也是我的荣幸。 热点。与热点话题有关的文章总是朋友圈里转的最疯的，也是最容易刷阅读量和涨粉的。但我就是不喜欢追热点，从前不喜欢以后也不会喜欢。总觉得趁某个时事或丑闻中快速撸一篇所谓的“深度好文”的行为无异于趁着雨灾之后坐地起价的卖伞翁，利用人们想了解热点的心理写一些无关痛痒的文字来满足自己的一些快感，想想就觉得恶心。而且这类话题是尺度最不好拿捏的，更多的有关强行追热点不好的一面，我这里就不多说了。所以也提前告诉你这个号没有热点。 转载。虽然转载不属于抄袭，但我建这个号的目的，就是想写自己的一些真实想法。相当于自己的Blog，其实我有自己的网站（http://xiaobs.cc），但维护起来很麻烦，又因为自己做了几年的微信，觉得订阅号这个平台还仍有活力，每日一更，不多也不少，刚好可以用来写作。同时也希望吸引一些和我一样的异类或者也自认为是斜杠青年。 有关于我，有关于我的想法，有关于这个号。其实有太多太多想说的东西，上面说的其实是我对这个号的一些想法，至于为什么起了这个名字，我会另写一篇文章，讲讲有关名字的那点事——斜杠青年不狗带","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"脑洞大开爆改APP启动图","slug":"naodong","date":"2016-07-27T06:18:47.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/27/naodong/","link":"","permalink":"https://blog.yanng.io/2016/07/27/naodong/","excerpt":"","text":"第一个脑洞的诞生 前些天，放假在家整天无所事事的我像往常一样打开微信，准备刷朋友圈看好友转的文章。看着微信启动界面正在发呆 为啥他一个人站这儿？ 站这儿干啥？ 无数的疑问划过脑海，突然duang灵光一闪 “一个人在上面多没意思，要不给他P个火箭吧“” 说干就干，立马打开Photoshop。先在网上找见一个火箭的icon图标，用刷子工具修色再调整大小和角度（详细步骤就不赘述了）一个脑洞爆炸过的微信APP启动图就这么改好了： 其实还有衍生版本： 其实仔细看的话还是有不少bug的，比如小火箭没有影子等。不过那样就费事费力了，我主要的想法是体现出来脑子里的效果，细节无所谓。（实际上我不会加阴影我会说吗？） 从此，便一发不可收。 我发现手机上的APP只要有启动图都可以用来发挥脑洞，而且完全是自由发挥，没有命题，没有要求。所以手机上的APP几乎无一幸免，都被我的脑洞和魔爪摧残 多图慎入：（不想入也迟了） 至此一共做了有12个，期间去北京玩的途中也在不停的改图。因为说不准在压马路时就冒出来个灵感，于是立马找个地方用手机P图。 没错，就是用手机 什么软件？说出来你可能不信，就两个：美图秀秀、黄油相机 那就说说我的改图思路 先想好要改哪个APP的启动图，再想怎么改（这是整个脑洞中最重要的环节）然后需要用美图秀秀手机版把原来启动图里的那句经典的Slogen （主题广告语的意思）给抹掉，这里方法比较笨，因为美图秀秀并没有PS那么强大的钢笔工具，也没有修复图章、橡皮擦什么的，所以比较难搞。 但幸亏我机智，如果启动图的背景是白色或黑色，那么可以用白色或黑色的马赛克工具给抹掉，或者用黑色或白色的画笔涂掉。如果是其他颜色，那么只能用不同羽化值的马赛克慢慢抹掉，别说抹不掉，只要掌握技巧，确实可以将他们成功去掉。 保存这张二次加工的图，接下来，我们进行第三次加工，打开黄油相机来加自己想好的创意。 为什么选择黄油？因为黄油相机上有非常多而且好看的字体啊，可以弄出很多你想要的感觉。 选择合适的字体，调整合适的位置，一张爆改过的脑洞APP启动图就新鲜出炉了。 结尾总想说点啥 其实我觉得这次相当于一个小小的脑洞风暴，把自己对APP的理解通过改启动图的方式表达出来，不需要多么精湛的P图手法，也不需要多么高大上的P图工具，完全是发挥创意灵感的尝试。 自从在朋友圈和微博上发出之后，有不少朋友甚至期待某个APP经过我改后是什么样子的，又甚至跟我说一些他对某个APP的想法。这些着实让我很是吃惊，我以为这只是我许多“自嗨”行为的其中一个，并没有人关注这个，这恐怕是连王大锤都万万没想到的。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"为了让人点开微信链接而写的套路","slug":"wei-le-rang-ren-dian-kai-wei-xin-lian-jie-er-xie-de-tao-lu","date":"2016-07-12T05:59:29.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/12/wei-le-rang-ren-dian-kai-wei-xin-lian-jie-er-xie-de-tao-lu/","link":"","permalink":"https://blog.yanng.io/2016/07/12/wei-le-rang-ren-dian-kai-wei-xin-lian-jie-er-xie-de-tao-lu/","excerpt":"","text":"一日闲园信步，燥热的天气让人只想说脏话，近期不断的考试也把人逼到窒息。正一筹莫展之时忽得一高人指点，“施主莫怕，老衲帮你度过此关，定能化险为夷”得此锦囊妙计，日后青云直上，连连中榜。众人急切问我，是何妙计使得你变得如此之顺？不妨说出来与你我共享。今日，痛定思痛，公开此计，解救天下苍生，只求记得我杨某人，记一功德便足以无憾","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"微信","slug":"微信","permalink":"https://blog.yanng.io/tags/%E5%BE%AE%E4%BF%A1/"}]},{"title":"为了让人关注我微博而写的套路﻿","slug":"e4-b8-ba-e4-ba-86-e8-ae-a9-e4-ba-ba-e5-85-b3-e6-b3-a8-e6-88-91-e5-be-ae-e5-8d-9a-e8-80-8c-e5-86-99-e7-9a-84-e5-a5-97-e8-b7-af-ef-bb-bf","date":"2016-07-12T05:58:24.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/12/e4-b8-ba-e4-ba-86-e8-ae-a9-e4-ba-ba-e5-85-b3-e6-b3-a8-e6-88-91-e5-be-ae-e5-8d-9a-e8-80-8c-e5-86-99-e7-9a-84-e5-a5-97-e8-b7-af-ef-bb-bf/","link":"","permalink":"https://blog.yanng.io/2016/07/12/e4-b8-ba-e4-ba-86-e8-ae-a9-e4-ba-ba-e5-85-b3-e6-b3-a8-e6-88-91-e5-be-ae-e5-8d-9a-e8-80-8c-e5-86-99-e7-9a-84-e5-a5-97-e8-b7-af-ef-bb-bf/","excerpt":"","text":"最近发现一规律，越丑就越会被拒，越被拒就有越多的独处时间，有越多的时间就越会沉迷互联网，沉迷网络更多越容易往段子手的方向发展。我觉得我可能快入坑了。所以以后规范动态发布平台。微博可是个好东西，里面我所有的脑洞段子套路吐槽等一系列粪青们可能会感兴趣的东西。快开车了，还不先关注一波尝尝毒？","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"微博","slug":"微博","permalink":"https://blog.yanng.io/tags/%E5%BE%AE%E5%8D%9A/"}]},{"title":"挖坑与填坑﻿","slug":"e6-8c-96-e5-9d-91-e4-b8-8e-e5-a1-ab-e5-9d-91-ef-bb-bf","date":"2016-07-12T05:56:17.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/12/e6-8c-96-e5-9d-91-e4-b8-8e-e5-a1-ab-e5-9d-91-ef-bb-bf/","link":"","permalink":"https://blog.yanng.io/2016/07/12/e6-8c-96-e5-9d-91-e4-b8-8e-e5-a1-ab-e5-9d-91-ef-bb-bf/","excerpt":"","text":"特别希望能找个没人打扰的公共场所坐下来把所有想写的的东西都写下来。 其实是想说出来的，但苦于想法古怪没人能听懂，只能贴网络上，看是否能找到臭味相投之人。 写的东西不少，但大多很糙。 喜欢给自己挖坑，但总得亲自一个一个填上。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"写作","slug":"写作","permalink":"https://blog.yanng.io/tags/%E5%86%99%E4%BD%9C/"}]},{"title":"专业不够，情怀来凑。方法不精，匠心来撑","slug":"e4-b8-93-e4-b8-9a-e4-b8-8d-e5-a4-9f-ef-bc-8c-e6-83-85-e6-80-80-e6-9d-a5-e5-87-91-e3-80-82-e6-96-b9-e6-b3-95-e4-b8-8d-e7-b2-be-ef-bc-8c-e5-8c-a0-e5-bf-83-e6-9d-a5-e6-92-91","date":"2016-07-08T12:50:33.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e4-b8-93-e4-b8-9a-e4-b8-8d-e5-a4-9f-ef-bc-8c-e6-83-85-e6-80-80-e6-9d-a5-e5-87-91-e3-80-82-e6-96-b9-e6-b3-95-e4-b8-8d-e7-b2-be-ef-bc-8c-e5-8c-a0-e5-bf-83-e6-9d-a5-e6-92-91/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e4-b8-93-e4-b8-9a-e4-b8-8d-e5-a4-9f-ef-bc-8c-e6-83-85-e6-80-80-e6-9d-a5-e5-87-91-e3-80-82-e6-96-b9-e6-b3-95-e4-b8-8d-e7-b2-be-ef-bc-8c-e5-8c-a0-e5-bf-83-e6-9d-a5-e6-92-91/","excerpt":"","text":"在朋友圈看到的很喜欢的一句话，他是一名餐馆老板，说了一些心里话，在此冒昧公布截屏于此，勿怪","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"},{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"匠心","slug":"匠心","permalink":"https://blog.yanng.io/tags/%E5%8C%A0%E5%BF%83/"},{"name":"情怀","slug":"情怀","permalink":"https://blog.yanng.io/tags/%E6%83%85%E6%80%80/"}]},{"title":"我爱这个世界","slug":"e6-88-91-e7-88-b1-e8-bf-99-e4-b8-aa-e4-b8-96-e7-95-8c","date":"2016-07-08T12:45:30.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e6-88-91-e7-88-b1-e8-bf-99-e4-b8-aa-e4-b8-96-e7-95-8c/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e6-88-91-e7-88-b1-e8-bf-99-e4-b8-aa-e4-b8-96-e7-95-8c/","excerpt":"","text":"“Mac造就了艺术家的创作血液，PC造就了程序员的创作血液”不知是冥冥之中的巧合还是早有定数 总之，造就了这个丰富的世界 三言两语表达不清以上所述 有机会写文罗列 总之，我爱这个世界现在的样子 也从不后悔自己为爱的事所做的断、舍、离","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"逼逼叨","slug":"逼逼叨","permalink":"https://blog.yanng.io/tags/%E9%80%BC%E9%80%BC%E5%8F%A8/"}]},{"title":"于7月1号凌晨微博","slug":"e4-ba-8e7-e6-9c-881-e5-8f-b7-e5-87-8c-e6-99-a8-e5-be-ae-e5-8d-9a","date":"2016-07-08T12:42:21.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e4-ba-8e7-e6-9c-881-e5-8f-b7-e5-87-8c-e6-99-a8-e5-be-ae-e5-8d-9a/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e4-ba-8e7-e6-9c-881-e5-8f-b7-e5-87-8c-e6-99-a8-e5-be-ae-e5-8d-9a/","excerpt":"","text":"好长时间都写不出东西，希望大三能戒撸。 如果注定孤独至久，那就让一个人的时光过得更丰富，至少为升格自己。 未来期许：读完所有想读的书，看完所有想看的电影，走过所有想走的路","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"看电影","slug":"看电影","permalink":"https://blog.yanng.io/tags/%E7%9C%8B%E7%94%B5%E5%BD%B1/"},{"name":"读书","slug":"读书","permalink":"https://blog.yanng.io/tags/%E8%AF%BB%E4%B9%A6/"},{"name":"逼逼叨","slug":"逼逼叨","permalink":"https://blog.yanng.io/tags/%E9%80%BC%E9%80%BC%E5%8F%A8/"}]},{"title":"入门级kindle入手","slug":"e5-85-a5-e9-97-a8-e7-ba-a7kindle-e5-85-a5-e6-89-8b","date":"2016-07-08T11:58:11.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e5-85-a5-e9-97-a8-e7-ba-a7kindle-e5-85-a5-e6-89-8b/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e5-85-a5-e9-97-a8-e7-ba-a7kindle-e5-85-a5-e6-89-8b/","excerpt":"","text":"499——年轻人的第一款kindle 终于某天凌晨忍不住在某东剁手一台黑色的入门级kindle，用了一张价值100元的E卡（参加少数派问卷调查的奖品）和一些优惠券，最后以387的价格成功入手 某东物流没的说，即使在这个鸟不拉屎的山区里（吐槽一下学校偏），也没有让我等太久。 下楼很快就取了回来，趁还没开箱赶紧照一张。 包装盒的样子 （开箱后没来得及拍，图片来源于网络） 这里说一个梗。 刚开始我和朋友都以为kindle上的示意图是贴了一层纸，到处找揭这层纸的缺口。 万万没想到。 当按下开机键，示意图画面消失，然后出现了一个人在树下阅读的经典kindle界面。 原来kindle的屏幕从出厂一直到送到我手里这段时间从来就没有关过！ （kindle只有在翻页时才会费电，平时一丁点儿电都不会用到，电子墨水的技术这里就不普及了） 这时我似乎突然明白这款翻页会闪屏而且价格不便宜的设备为什么会卖的如此之火。 正面的样子 后来也明白了kindle没有熄屏的概念，按下锁屏键会随机显示一张壁纸（而且壁纸也略有逼格） 手持背面的样子 男生手一般都比较大，一个巴掌就可以握住kindle。重量现在适应了，刚回来的时候比想象中还略重一点，可能用手机看书已经习惯了手机的重量 最近刚考完试，心里有些浮躁。无论实体书、「微信读书」还是kindle都看不进去。 WiFi环境中它会自动下载更新程序并提示安装 这些天只是熟悉kindle的一些功能，kindle其实有不少很实用的技巧需要慢慢琢磨。 毕竟499的价位，明显觉得不足的地方就是屏幕没有背光和ppi太低： 没有背光使晚上用kindle看书成为一种奢望。不过目前影响还不是太强烈，只是在用“晚上不能看书就早睡”的这种说法来安慰自己 ppi太低绝对是蛋疼的地方，字体看起来明显不是很细腻，仔细看会看出来。不过我只能用“499还要啥自行车”的这种说法来安慰自己 其实这么着急入手也是出于很多原因： 有一张100块的卡心里痒痒想花掉（没错，搁着难受，不如消化） 早就垂涎kindle很久了。之前看过很多人的博客都在安利kindle，而且都在说“自从有了kindle，看书比以前更方便，看的书比以前更多了”。所以我看看到底有没有这么神 马上就要放假了，可能需要到处跑，路上难免会无聊，用kindle消遣时间，还能长姿势，何乐而不为？ 一直在用「微信读书」看书，最近心水东野圭吾的小说，还想再追忆一遍《盗墓笔记》，更多的书都想见识一番，kindle刚好可以满足我的需求 觉得读书这件事，是人一辈子的事。读书的好处我不用说太多也都能明白，书读多了至少不是件坏事 已经培养起阅读的习惯，不担心买下让它吃灰 本来今年7月20号会有新款的kindle全球同步上市，售价558。不过我看预约的火热程度，恐怕到时候也只能看看了。（小米手环就是亲身体验的经历，目前2代仍然买不到，其他市场被黄牛炒到250左右） 更多的等用过kindle一段时间再说吧。 总之，买它我不后悔。","categories":[{"name":"种草","slug":"种草","permalink":"https://blog.yanng.io/categories/%E7%A7%8D%E8%8D%89/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"kindle","slug":"kindle","permalink":"https://blog.yanng.io/tags/kindle/"},{"name":"剁手","slug":"剁手","permalink":"https://blog.yanng.io/tags/%E5%89%81%E6%89%8B/"},{"name":"开箱","slug":"开箱","permalink":"https://blog.yanng.io/tags/%E5%BC%80%E7%AE%B1/"},{"name":"数码","slug":"数码","permalink":"https://blog.yanng.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"测评","slug":"测评","permalink":"https://blog.yanng.io/tags/%E6%B5%8B%E8%AF%84/"}]},{"title":"但愿","slug":"e4-bd-86-e6-84-bf","date":"2016-07-08T10:55:56.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e4-bd-86-e6-84-bf/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e4-bd-86-e6-84-bf/","excerpt":"","text":"不希望以后再让MacBook运行Windows，简直反人类的使用体验。 以后可能会采用三种方案： MacBook用于出门携带码字或一系列娱乐消遣，家里放组装台式机采用Mac+win的双系统策略用来当做生产力工具 MacBook外接显示器用于一些基本的需求 MacBook携带，家里放置一台Mac Pro用来当做生产力工具 不过以我喜欢折腾的性格，应该会采用第一种方案，所有的零件均由自己亲自定制。 第二种用于一些工作量大的东西时就显得捉襟见肘了，只是待定。 第三种需要很足的预算，不过艺术品般的强劲主机也是我一直以来的追求。 计算机这种神奇的工具自发明以来似乎就背负着推动人类发展进程的伟大使命。而且自觉此生将与计算机有特殊情节，自然希望以后用喜爱的计算机来谋生，但也不想让它带来一些麻烦。 所以今后的路，永远都在挖坑和填坑。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"剁手","slug":"剁手","permalink":"https://blog.yanng.io/tags/%E5%89%81%E6%89%8B/"},{"name":"效率","slug":"效率","permalink":"https://blog.yanng.io/tags/%E6%95%88%E7%8E%87/"},{"name":"计算机","slug":"计算机","permalink":"https://blog.yanng.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"}]},{"title":"讲真","slug":"e8-ae-b2-e7-9c-9f","date":"2016-07-08T10:32:17.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e8-ae-b2-e7-9c-9f/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e8-ae-b2-e7-9c-9f/","excerpt":"","text":"人生拥有以下三样电子产品足矣： MacBook+iPhone+Kindle","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"剁手","slug":"剁手","permalink":"https://blog.yanng.io/tags/%E5%89%81%E6%89%8B/"},{"name":"数码","slug":"数码","permalink":"https://blog.yanng.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"安利","slug":"安利","permalink":"https://blog.yanng.io/tags/%E5%AE%89%E5%88%A9/"},{"name":"极客","slug":"极客","permalink":"https://blog.yanng.io/tags/%E6%9E%81%E5%AE%A2/"}]},{"title":"年轻即折腾","slug":"e5-b9-b4-e8-bd-bb-e5-8d-b3-e6-8a-98-e8-85-be","date":"2016-07-08T10:25:55.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e5-b9-b4-e8-bd-bb-e5-8d-b3-e6-8a-98-e8-85-be/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e5-b9-b4-e8-bd-bb-e5-8d-b3-e6-8a-98-e8-85-be/","excerpt":"","text":"我不赞成别装逼容易遭雷劈这种说法，也不理解不秀会死啊的这种逻辑。我只知道年轻的时候再低调就会错过很多机会和可能，这就是我们常常抱怨的“造化弄人”，其实造化由己不由天","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"折腾","slug":"折腾","permalink":"https://blog.yanng.io/tags/%E6%8A%98%E8%85%BE/"},{"name":"装逼","slug":"装逼","permalink":"https://blog.yanng.io/tags/%E8%A3%85%E9%80%BC/"}]},{"title":"唱歌的反思","slug":"e5-94-b1-e6-ad-8c-e7-9a-84-e5-8f-8d-e6-80-9d","date":"2016-07-08T10:23:23.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e5-94-b1-e6-ad-8c-e7-9a-84-e5-8f-8d-e6-80-9d/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e5-94-b1-e6-ad-8c-e7-9a-84-e5-8f-8d-e6-80-9d/","excerpt":"","text":"自嗨归自嗨 但是讲真 缺乏系统气声训练","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"音乐","slug":"音乐","permalink":"https://blog.yanng.io/tags/%E9%9F%B3%E4%B9%90/"}]},{"title":"段子手的修养","slug":"e6-ae-b5-e5-ad-90-e6-89-8b-e7-9a-84-e4-bf-ae-e5-85-bb","date":"2016-07-08T10:18:26.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/e6-ae-b5-e5-ad-90-e6-89-8b-e7-9a-84-e4-bf-ae-e5-85-bb/","link":"","permalink":"https://blog.yanng.io/2016/07/08/e6-ae-b5-e5-ad-90-e6-89-8b-e7-9a-84-e4-bf-ae-e5-85-bb/","excerpt":"","text":"“段子手真心不好当” “那是因为没受过伤”","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"段子","slug":"段子","permalink":"https://blog.yanng.io/tags/%E6%AE%B5%E5%AD%90/"}]},{"title":"iPhone和手环随拍","slug":"iphone-e5-92-8c-e6-89-8b-e7-8e-af-e9-9a-8f-e6-8b-8d","date":"2016-07-08T10:15:02.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/08/iphone-e5-92-8c-e6-89-8b-e7-8e-af-e9-9a-8f-e6-8b-8d/","link":"","permalink":"https://blog.yanng.io/2016/07/08/iphone-e5-92-8c-e6-89-8b-e7-8e-af-e9-9a-8f-e6-8b-8d/","excerpt":"","text":"","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"iPhone","slug":"iPhone","permalink":"https://blog.yanng.io/tags/iPhone/"},{"name":"小米手环","slug":"小米手环","permalink":"https://blog.yanng.io/tags/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF/"}]},{"title":"英陨","slug":"e8-8b-b1-e9-99-a8","date":"2016-07-02T07:10:33.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/02/e8-8b-b1-e9-99-a8/","link":"","permalink":"https://blog.yanng.io/2016/07/02/e8-8b-b1-e9-99-a8/","excerpt":"","text":"貌似一支精英团队的最终归属大多是归顺体制内并最终瓦解，亦或一个优秀产品的最终目的大多是走向商业化并最终忘本。 哀哉哀哉","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"运营","slug":"运营","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5/"},{"name":"产品","slug":"产品","permalink":"https://blog.yanng.io/tags/%E4%BA%A7%E5%93%81/"}]},{"title":"关于我","slug":"guan-yu-wo","date":"2016-07-02T07:06:27.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/02/guan-yu-wo/","link":"","permalink":"https://blog.yanng.io/2016/07/02/guan-yu-wo/","excerpt":"","text":"运营自媒体多年，也是多年的博主。具有深度的思考，也有掉节操的脑洞。如果说把我的人生戳一个节点的话，那么这个节点之前的我是个平台搭建者（比如微信公众平台，网站等），节点之后，我要做的就是一个内容输出者。在互联网做了这么多年的”伸手党”，也该拿出自己的东西分享给别人了。思想也好，技巧也好。 日常更新不在博客中 它们都在我的微博里 你可以关注我的微博 @欧阳-血栓 （可点击） 了解我的最新动态 也可以扫码加好友 找我聊聊","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"未分类","slug":"未分类","permalink":"https://blog.yanng.io/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"}]},{"title":"致试图在IP经济下分一杯羹的“网红”们","slug":"e8-87-b4-e8-af-95-e5-9b-be-e5-9c-a8ip-e7-bb-8f-e6-b5-8e-e4-b8-8b-e5-88-86-e4-b8-80-e6-9d-af-e7-be-b9-e7-9a-84-e7-bd-91-e7-ba-a2-e4-bb-ac","date":"2016-07-02T07:05:43.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/07/02/e8-87-b4-e8-af-95-e5-9b-be-e5-9c-a8ip-e7-bb-8f-e6-b5-8e-e4-b8-8b-e5-88-86-e4-b8-80-e6-9d-af-e7-be-b9-e7-9a-84-e7-bd-91-e7-ba-a2-e4-bb-ac/","link":"","permalink":"https://blog.yanng.io/2016/07/02/e8-87-b4-e8-af-95-e5-9b-be-e5-9c-a8ip-e7-bb-8f-e6-b5-8e-e4-b8-8b-e5-88-86-e4-b8-80-e6-9d-af-e7-be-b9-e7-9a-84-e7-bd-91-e7-ba-a2-e4-bb-ac/","excerpt":"","text":"在互联网时代的孩子们好像没有“人生第一桶金”的说法了吧，至少我追忆起来竟无从下手。靠什么才是第一桶金，挣多少才是第一桶金，恐怕这个概念会慢慢变模糊。感谢这个可以通过流量变现的时代，也但愿不要被IP浪潮冲昏头脑。人人都想红，但别忘了你是谁","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"IP","slug":"IP","permalink":"https://blog.yanng.io/tags/IP/"},{"name":"互联网","slug":"互联网","permalink":"https://blog.yanng.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"},{"name":"变现","slug":"变现","permalink":"https://blog.yanng.io/tags/%E5%8F%98%E7%8E%B0/"},{"name":"网红经济","slug":"网红经济","permalink":"https://blog.yanng.io/tags/%E7%BD%91%E7%BA%A2%E7%BB%8F%E6%B5%8E/"}]},{"title":"嗯，大概就酱","slug":"e5-97-af-ef-bc-8c-e5-a4-a7-e6-a6-82-e5-b0-b1-e9-85-b1","date":"2016-06-29T09:53:27.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/29/e5-97-af-ef-bc-8c-e5-a4-a7-e6-a6-82-e5-b0-b1-e9-85-b1/","link":"","permalink":"https://blog.yanng.io/2016/06/29/e5-97-af-ef-bc-8c-e5-a4-a7-e6-a6-82-e5-b0-b1-e9-85-b1/","excerpt":"","text":"内心空虚的人在众人面前才会更加卖力的表现自己的主观想法，那些不怎么发表意见的人并不是不善言谈，而是他们内心足够强大，不需要所谓的浮夸演技来掩盖自己的不足","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"心理学","slug":"心理学","permalink":"https://blog.yanng.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"},{"name":"社交","slug":"社交","permalink":"https://blog.yanng.io/tags/%E7%A4%BE%E4%BA%A4/"}]},{"title":"读书三弊：细说三种不正确的读书方法和态度","slug":"e8-af-bb-e4-b9-a6-e4-b8-89-e5-bc-8a-ef-bc-9a-e7-bb-86-e8-af-b4-e4-b8-89-e7-a7-8d-e4-b8-8d-e6-ad-a3-e7-a1-ae-e7-9a-84-e8-af-bb-e4-b9-a6-e6-96-b9-e6-b3-95-e5-92-8c-e6-80-81-e5-ba-a6","date":"2016-06-29T08:49:46.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/29/e8-af-bb-e4-b9-a6-e4-b8-89-e5-bc-8a-ef-bc-9a-e7-bb-86-e8-af-b4-e4-b8-89-e7-a7-8d-e4-b8-8d-e6-ad-a3-e7-a1-ae-e7-9a-84-e8-af-bb-e4-b9-a6-e6-96-b9-e6-b3-95-e5-92-8c-e6-80-81-e5-ba-a6/","link":"","permalink":"https://blog.yanng.io/2016/06/29/e8-af-bb-e4-b9-a6-e4-b8-89-e5-bc-8a-ef-bc-9a-e7-bb-86-e8-af-b4-e4-b8-89-e7-a7-8d-e4-b8-8d-e6-ad-a3-e7-a1-ae-e7-9a-84-e8-af-bb-e4-b9-a6-e6-96-b9-e6-b3-95-e5-92-8c-e6-80-81-e5-ba-a6/","excerpt":"","text":"现今，中国的一大问题是爱读书的人太少了，这是人尽皆知的。不过，与之相对的另一个问题却鲜有人提及，那就是——少数的爱读书的人中，有相当一部分人读书读傻了。 爱读书不是一件好事吗？怎么会有把人读傻一说？是，读书好处多多，但好读书的同时，也应该正确把握读书的方法和态度。世界读书日，不仅仅要多多宣传读书的好处，也不妨多提醒人们哪些是不正确的读书方法和态度。 死读书会进死胡同古人曾云：“两耳不闻窗外事，一心只读圣贤书。”如今，这句话仍被不少读书人视为圭臬。在古代中国，这句话还是很行得通的，毕竟当时信息闭塞，书籍往往是获取信息最重要的渠道之一，“读圣贤书”便意味着“闻窗外事”。 但在信息时代，这种读法的弊端显而易见。万事万物瞬息万变，最新的思想最新的知识，往往是出现在书籍以外的渠道上。书籍只是获取信息的渠道之一，除此之外，田野调查、现场观摩、面对面交流、头脑风暴，都是获取信息的重要途径。如果还以为书中有黄金屋、有颜如玉、有现代社会所需的所有技能，而屏蔽书籍以外的世界，这时，读书反倒会造成偏狭。就像郝明义在《越读者》里说的，文字固然提供了“一个可以极为抽象又方便地认知世界的方式”，也导致了“我们原先综合运用各种感官的全观能力逐渐退化”，书籍把“文字的传播力量做到最大的扩散”，也使“我们容易疏忽——甚至，贬低了书籍以外的知识来源”。 这让人想起奥斯卡获奖电影《心灵捕手》里那段著名的台词，天才少年威尔自恃才华、傲慢得不可一世，心理学教授尚恩这样跟他说： 你只是个孩子，你根本不晓得你在说什么。所以问你艺术，你可能会提出艺术书籍中的粗浅论调，有关米开朗基罗，你知道很多，他的满腔政治热情，与教皇相交莫逆，耽于性爱，你对他很清楚吧？但你连西斯汀教堂的气味也不知道吧？你没试过站在那儿，昂首眺望天花板上的名画吧？你年轻彪悍，我如果和你谈论战争，你会向我大抛莎士比亚，朗诵“共赴战场，亲爱的朋友”，但你从未亲临战阵，未试过把挚友的头拥入怀里，看着他吸着最后一口气，凝望着你，向你求助…… 所以罗素这样说，有“经验而无学问”胜于“有学问而无经验”，中国古人也更提倡“风声雨声读书声，声声入耳；家事国事天下事，事事关心”“读万卷书，行万里路”。先贤们都非常智慧地注意到了，要读书，也要“经历”，否则读书很容易成为赵括的“纸上谈兵”。比如，很多人可以在各种书籍里了解中国，开口闭口就是北上广、GDP世界第二、互联网+等很“高大上”的话题，可是你没挨过饿、没跟农民工打过交道、不知道每天花几小时挤公交上班的滋味，你自以为了解中国，其实你面对的很可能是柏拉图所说的，“认识对象的影子或者是影子的影子”，一叶障目、不见泰山。 知识远不等于智慧我们常说，腹有诗书气自华，好像书读得越多，整个人就自然而然地变得智慧、变得有气质了。可在《儒林外史》里，我们看到那么多满腹诗书的文人却一副酸腐相，在鲁迅的小说里，孔乙己知道茴香豆的“茴”有四种写法、四铭满口仁义道德，然而，人们却不会将他们与智者联系起来。 这其实涉及到知识与智慧的差别，读书可以获得知识，但读书却不必然获得智慧。智慧是知识的下一个阶段，是在掌握知识的基础之上，对知识进行思考、分析和整合，继而形成自己的独特见解，并具备正确的判断力。这就好比一个人对唐诗宋词信手拈来，这是知识，但智慧是在对古诗词的吟咏中习得审美的能力，是在古人的七情六欲、亲情友情、热爱生活、有趣幽默、善良宽容等方面感受人类的普遍情感和价值，从而丰盈和完善个体生命。换言之，知识是死的，智慧才是活的。 每次高考前后，有个段子总被网友拿出来自嘲：“人生最辉煌的一段时间是高考前 6 个月，这时你上知天体运行原理，下知有机无机反应，前有椭圆双曲线，后有杂交生物圈，外可说英语，内可修古文，求得了数列，说得了马哲，溯源中华上下五千年，延推赤州陆海百千万，既知音乐美术计算机，兼修武术民俗老虎钳，现在呢，除了玩手机，废人一个。”这个段子颇为形象地说明了知识与智慧的距离。如果你只是背诵了知识，而没有从中学会思考、懂得实践、充实思想、涵养品格，那么，即便你知道得再多，也不过是掌握了一堆琐碎的知识。残酷点说，琐碎的知识与破铜烂铁无异，之后自然被你“扔”（忘）得一干二净。 手机互联网时代的到来，人们越来越倾向于通过微博、微信来获取信息。微阅读不仅带来便利，还带来海量资讯，人们常常处于“我又获得新知识”的成就感与快感中。然而，微阅读的本质是“碎片化”，它降低了阅读的难度，也消解了阅读“系统性”与“深刻性”的特征，并越来越呈现出“反智”的特征，充斥着大量的八卦、心灵鸡汤与伪科学。文化学者鲍鹏山以为，“当知识不成体系时，它是无用的，只是碎片”“无聊的知识会让人生变得无聊，琐碎的知识会让人格变得琐碎，甚至猥琐”。也就是说，碎片化的阅读可以为我们带来知识，但如果因此放弃了系统性、深刻性的阅读，我们很可能也将一并丢掉了智慧。 读书不应成为道德优越感常常在网上读到一些知识青年的“回乡偶得”，说的是自己初中、高中时成绩在班里都是数一数二，也是全村里为数不多的名牌大学学生，属于“风云人物”，读书人的身份认同感特别强。几年过去了，毕业后一回乡，参加个同学聚会，或者加入同学群聊一聊，才恍然惊觉：当初那些成绩很差的同学“混得最好”，娶妻生子、有房有车，也变得特别热络，成了最受大家欢迎的人。相较之下，自己没房没车一无所有，群里别人聊得热火朝天，自己却找不到共同话题，不敢吱声，也不会有人想起。 本以为读书人应该很受尊重，也应该混得最好。可风水轮流转得令人措手不及，于是就产生了特别强烈的失落感和幽怨情绪。 当然，时下大学生文凭的贬值、身份的失落背后有复杂的社会原因，不过，读书人的这种优越感也值得反思。什么样的优越感？就是认为读书人比没有读书的人身份更高一等，读书人理应比没有读书的人赚更多的钱、拥有更大的权力、过更幸福的生活。 之所以产生这样的优越感，一是古人“万般皆下品，惟有读书高”的旧观念的延续，在那时“学成文武艺，货与帝王家”，皇帝是唯一的买家，读书是平民阶层改变命运的唯一出路；二则我们教育价值观的偏差，应试教育以分数论英雄，那些会读书的“好学生”从来备受老师宠爱，被重视惯了，也往往对自己产生了过高的期待。 可时代已经变了，皇帝没有了，多元的买方市场出现了。固然读书仍旧是平民阶层实现阶层流动最主要的方式，但切记，这已经不是唯一的方式。你在寒窗苦读，很多没读书的人也在为改变命运而艰辛打拼；在一个“大众创业、万众创新”的时代，读书与不读书的差别，更近乎人生选择、职业追求、个人志向的不同，而无关权力的大小、身份的高低、财富的多寡。 只可惜，很多知识青年对此没有清醒的认知，仍将读书视为一种高利润、高回报的投资，仿佛金字塔顶端离自己就是几摞书的距离。如此“眼高”，一旦没有实现，要么就开始怀疑读书的意义，怀疑人生，进而怀疑社会，成为一个愤青；要么就是自怨自艾，感到时运不济、生不逢时，愁容满面、抑郁寡欢。对于这样的人，我倒想起了贾平凹的一句话，权当是给他们的建议：“不要以为读书是最崇高的事情，如果脱离了生活只是纯粹读书，还不如去路边卖油条。 ————— 作者：曾于里 来源：南周知道","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"思考","slug":"思考","permalink":"https://blog.yanng.io/tags/%E6%80%9D%E8%80%83/"},{"name":"读书","slug":"读书","permalink":"https://blog.yanng.io/tags/%E8%AF%BB%E4%B9%A6/"},{"name":"学习","slug":"学习","permalink":"https://blog.yanng.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"成长","slug":"成长","permalink":"https://blog.yanng.io/tags/%E6%88%90%E9%95%BF/"}]},{"title":"买书不读是一种什么病？","slug":"e4-b9-b0-e4-b9-a6-e4-b8-8d-e8-af-bb-e6-98-af-e4-b8-80-e7-a7-8d-e4-bb-80-e4-b9-88-e7-97-85-ef-bc-9f","date":"2016-06-26T19:27:27.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/27/e4-b9-b0-e4-b9-a6-e4-b8-8d-e8-af-bb-e6-98-af-e4-b8-80-e7-a7-8d-e4-bb-80-e4-b9-88-e7-97-85-ef-bc-9f/","link":"","permalink":"https://blog.yanng.io/2016/06/27/e4-b9-b0-e4-b9-a6-e4-b8-8d-e8-af-bb-e6-98-af-e4-b8-80-e7-a7-8d-e4-bb-80-e4-b9-88-e7-97-85-ef-bc-9f/","excerpt":"","text":"在日语中有这么个词特别的单词：積ん読（Tsundoku），用来形容买很多书却把它们扔在角落积灰的行为，这个词的起源可以追溯到明治时代，翻译成中文大概就是“买书如山倒，读书如抽丝”。 对，说的就是你。 在开始阅读这篇文章之前，先告诉我，你书架上和 Kindle 中现在放着的书里，有几本你读了还不到 1/3？有几本根本就没打开过？ “买书不读”就像 14 世纪流行欧洲的黑死病一样，堪称当代社会最严重的瘟疫之一，它虽然不会威胁你的生命，却会谋杀你的钱包，并带给你永无止境的负罪感。今年 4 月 21 日，亚马逊中国发布了《2016 年“全民阅读”调查报告》，将近 1/4 的受访者一年看书不超过 5 本。2015 年美国电子书商 Kobo 研究也发现，60% 电子书消费者从来没打开过他们买回来的东西。 说到买书不读的原因，最普遍的理由是“没时间”和“静不下心”。这也解释了为什么上厕所时总是我们阅读效率最高的时候，卫生间这个迷之圣地不仅圈出了封闭的空间和固定的时间，还将其他一切会让你分心的娱乐方式排除在外，只要那扇毛玻璃门一关上，别说黑格尔和康德了，给我一卷手纸我能把洗发水配方表都背下来。 为了能静下心来读书，我们往往要抵制住的手机、游戏、电影的诱惑，这也是很多人在 iPad 和 Kindle 之间选择了后者的原因。可是你有没有想过，为什么你会毫不费力的选择打游戏而非读书？这是因为大脑已经自动替你选择了最有效率的娱乐方式，而其选择的依据则是浸入难度的不同。在网络科技高度发达的读图时代，大数据和信息图风靡一时，纯文字书籍这种形式本身已经不再是获取信息最有效率的方式。 和游戏对比一下，我们就能发现不同媒介在获取信息的友好程度上有多大差别。在《为什么游戏重要？》一文中， RED 老师讲过这样一段话： “当我们将游戏看成一种放松身心的娱乐时，往往也就默认它必须是浅薄的，而没有意识到蕴含在游戏过程中的高互动性、高参与感在与虚拟世界的体验结合之后，在艺术创作层面带来的可能性，更没有意识到人类在不知不觉的游戏过程中所投入的情感，是比任何其它艺术形式都要更加强烈和直接的。” 如果我们的刻板印象已经将放松身心等同于浅薄，那么，当我们将读书看成一种门槛较高、难以浸入的活动时，往往也就默认了它的高雅，并将它从“娱乐”的范围中排除了出去。在时间的洗涤下，书籍——这种历史最为悠久的信息载体——本身已经被神圣化，成为了“知识”的象征，可说到底，它和游戏电影们的差别只是不同类型的媒介而已。 一个真正爱看（某本）书的人，感兴趣的是书籍的内容而非载体，哪怕把字印在天花板上他都能仰着脖子看完。而我们买书不读的根本原因，很可能是我们对那本书的内容不够感兴趣。 面对墙角积灰的书堆，我曾经扪心自问：我真的有那么想看这些书吗？既然我对它的兴趣都不足以让我把它从书架上拿下来翻开，为什么我还在坚持不懈的买书？ 最大的锅一定是图书电商的：他们丧心病狂的打折，不买简直就是吃亏。便宜是促使我们屯书的前提条件，在印刷术普及之前，书籍一度是权贵阶层们用来炫富的方式。而在看个电影吃顿饭都要百八十块钱的今天，书籍变成了最便宜的正版娱乐形式。便宜不仅让我们开始屯书，还使我们屯起了游戏，欧美网友们根据日文单词 Tsundoku 发明了新单词 Steamdoku，专门用来形容在 Steam 上买了游戏而不打的行为。 除了便宜，储物癖也在驱动着我们不断下单——剁手——再下单。在当代青少年的三大特征“买书不读，买游戏不打，买黑胶不听”中，占有欲扮演着罪魁祸首的角色。一套心水的漫画怎么能不收全呢？一部心爱的电影怎么能不买蓝光呢？收藏才是正义啊，虽然我知道把这本书这张碟买回家来使用的机会约等于零，但这株毒草一天不拔我的灵魂就一天不得安宁。 被称为“外国豆瓣”的 Goodreads 网站上有个小组叫做 Book Buying Addicts Anonymous（买书成瘾症），聚集着一大波买书不读的病友。对这些重症患者来说，买书已经演化为了成瘾行为，当你在从事飞叶子、抽烟等其他上瘾性行为时，大脑会释放出一种名为多巴胺的化合物，正是它让你在购物时兴奋到颤栗。艾奥瓦大学精神病学教授唐纳德·布莱克写道：“购物已经成为全美排名第一的娱乐活动，人们购物是因为他们乐在其中。”回想一下你收快递时的心情，是时候给自己打一针安定了。 在后现代主义中，消费主义也被视为是一种获得愉悦的活动形式。鲍德里亚认为，消费是一种狂欢与释放，人们通过购买符号逃离日常生活的空虚无聊，获得满足与愉悦。购物在上帝已死的时代起到了宗教的作用，给了我们表达内心的狂热与忠诚的渠道：“给爸爸打钱！” 鲍德里亚还认为，广告赋予了商品一种文化迷思，促使消费者为了建构个人认同而进行消费，也就是我们俗称的“贴标签”。作为一个星战粉，我怎么能不收齐星战 1-7 蓝光全集？有时我们买东西已经不是为了使用欣赏，而是提醒自己我应该是个怎样的人。We are what we buy，购物行为本身是一种流行且有效的自我表达方式，它正在帮助我们构建自己的身份。 至于“书非借而不能读也”之所以屡试不爽，是因为借书这个行为排除了书籍的收藏和贴标签两种属性，让它只剩下承载信息一种用处。所以，面对一本看不进去的书，最好的解决方式是从朋友那里借来蹲在厕所看，虽然感觉有点对不起朋友…… 通过上述胡说八道，我们已经对“买书不读”的行为进行了洗地，可是当深夜面对书架的时候，我还是能听见无数未拆封书籍的冤魂在向我控诉，我该拿这份负罪感怎么办？ 在经济学中，这种现象被称为“沉没成本谬误”。有时我们会强迫自己看一场毫无兴趣的电影，只因为害怕浪费了票钱。这种行为在经济学家们眼中反而是“不理智”的，因为它基于不相关信息，错误的分配了时间资源。所以，你大可抛开“来都来了”和“值回票价”的心理，学学 Steam 玩家们的豁达态度：“我已经浪费钱买游戏了，什么还要浪费时间玩游戏？” 买书不读产生的负罪感一部分来源于沉没成本，另一部分则是通过“抽丝”，我们突然意识到，自己其实不是我们原来认识的那个人。下单时的你可能真的对《三峡水电站水位与铁三角耳机声音效果研究》非常感兴趣，可是当加完班考完试拖完稿快递到手之后，你已经不是买书时的那个你了，此时的你只想躺在床上边吃炸鸡边看岳云鹏相声，至于发电机组到底是西门子还是通用，你已经无所谓了。 无论你看书的目的是为了放飞自我还是涨知识走向人生巅峰，追根到底，我们之所以读书，是因为读书能带给我们实打实的满足与快乐。买书不读非但不是病，而是一种再合理不过的行为，因为对“病友”们来说，买书这项活动本身带给你的快乐已经远远超过了读书。 谁规定买了书就非得读呢？总之，你开心就好。 ————- 作者：施业中 来源：界面","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"读书","slug":"读书","permalink":"https://blog.yanng.io/tags/%E8%AF%BB%E4%B9%A6/"},{"name":"学习","slug":"学习","permalink":"https://blog.yanng.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"成长","slug":"成长","permalink":"https://blog.yanng.io/tags/%E6%88%90%E9%95%BF/"}]},{"title":"开公众号到底干嘛啊","slug":"e5-bc-80-e5-85-ac-e4-bc-97-e5-8f-b7-e5-88-b0-e5-ba-95-e5-b9-b2-e5-98-9b-e5-95-8a","date":"2016-06-21T17:10:50.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/22/e5-bc-80-e5-85-ac-e4-bc-97-e5-8f-b7-e5-88-b0-e5-ba-95-e5-b9-b2-e5-98-9b-e5-95-8a/","link":"","permalink":"https://blog.yanng.io/2016/06/22/e5-bc-80-e5-85-ac-e4-bc-97-e5-8f-b7-e5-88-b0-e5-ba-95-e5-b9-b2-e5-98-9b-e5-95-8a/","excerpt":"","text":"1 写文这八个月来，还蛮失望的。到现在没有写出一篇我自己喜欢的东西。每一篇写完都觉得尴尬，不敢回头看。 有时候在想，读者关注一个号，到底看的是什么呢？我从100多个订阅号删到32个，再删到了12个，也还是没有什么想看的欲望。轻阅读终究是肤浅的。 我们每天花在网络轻阅读的时间，要是能抽出一点点放在更深奥的文字上，或是学点东西，也或者就是工作上再出一个更优的方案。人生也不仅仅会是现在这样一个境界。我说的是思想上，也是物质上。 这个时代太魔幻了。什么人都有。许多人羡慕我一篇文章带来七八万读者。问我这个方法，那个诀窍。我没有什么想说的。我的人生没有因为这八万读者有任何改变。还是朝九晚六，还是加班狗，还是抠着脚骂骂脏话。 2 有很多人说，你可以打广告啊，把商业价值最大化。没错，我这样的公众号，广告商给的一条广告费，赶上我写大半年文章收到的读者打赏了。我只要在一年365天内，随便发10条广告，就追上我一年工资了。 我没有，至今没接过微博微信任何一条推广。每天有十几家广告商发邮件找我广告合作，我都没接。 为什么？一是因为大多数产品我没用过，如果出现质量和服务上的问题，这他妈就尴尬了，对读者负责，也是对我自己负责；二是我觉得微信公众号的广告，效果没有那么神，我本身也是做广告的，这行业的水份可以放在太阳底下晒成汪洋大海了，所以不想浪费金主的广告资源；三是我暂时还不是很想用这种方式赚钱。 我已经听到很多人在说我傻了。都说能赚一笔是一笔，赚到手里的才是真的。我非常服气，说的没错啊。可我觉得吧，赚钱是一辈子的事，但有个好的文笔，才能一辈子赚钱。 先好好写字，写多了，写好了，什么机会不来呢？我目前只想保持这个号的完整性。也可能是个迂腐的想法，有人说赚钱和好好写字不冲突。但是我看过太多急着变现的公众号了，然而多数都死在取悦读者和广告商上。是的，你赚钱的样子很爽，可你取悦读者的面孔确实挺丑的。 打着广告，还能写出一篇好文，这种把两者关系处理得很好的作者，少之又少。你是不是要给我推荐那谁谁谁啦，啊，不好意思，我不觉得ta写的那种东西叫文章。太多的by the way式的傻逼广告了，还美其名曰神转折。去你妈的。 3 写公众号真累呀。 最累的是，我不是那种取悦型人格，也很难被取悦。写公众号难免要顾及读者的看法。说不在乎是假的。如果我不在乎读者，不想偶尔赚点零花钱，我不会十天半个月爬上来更新一次的。我对文字的野心，比赚钱大得多。 其实蛮讨厌被几万人围观的样子。每次看着各种读者跑过来说“这篇不错”、“那篇不行”。这种感觉确实挺不舒服的。我像是在台上表演的，就为了等你一句话。比起这些，我更希望看到建设性的建议“哪里需要改进，有个地方没看懂”。我不是表演者，我是用文字在沟通。 我没把你们当粉丝，充其量算个在看这篇文的读者。我说过，欢迎所有的远道而来，也理解中途的默默离开。喜欢就靠近，不喜欢就撤。我欣赏一个陌生人也是三分钟热度，所以从来不敢说“老子永远爱你，永远支持你”这种鬼话，也不相信。爱慕的时候是真，不喜欢了也是真。 既然这样，也可能哪天我就不在这里发文了。平台都是暂时的，风一吹就过。热闹也只是暂时的，还是孤独点好。我终究不是一个顺势而上的人。人最狠的一点，不要让任何人抢走你的孤独。 4 上篇文章，有个大学生跑过来说，七毛你的文章里不该有淫秽情节，男生撸管是会带坏读者的。 我：？？？。你让莫言的丰乳肥臀怎么活？白鹿原是不是不该出版？王小二和陈清扬在山上做爱应该让王小波从下面爬上来给大家道歉？ 不是说我的文字现在能跟这些人媲美。我是觉得，现在的大学生，是不是该多读点书长点见识啊。写个性压抑的少年撸管你就跳，我写啪啪啪你是不是要冲过来杀我全家啊。读书可能不会赚到钱，但能赚到想法。我对所有来咨询问题的人，都想送这一句话。 每个作者有每个作者的文格，这是作者文字的核心所在。有的人文字空洞贫乏，没有情感，是可以感受到的。不要问我怎么感受，多读点好书你自然知道。也不要问我该读什么书，拜托，谁要给你荐书啊。 你也别想让我天天写爱情，我烦。我比较随意，不喜欢写热点，因为热点终将会冷却。不喜欢写鸡汤，因为这届人类不行，灌再多的鸡汤第二天也打回原形。不喜欢点评，因为别人认不认同我，对我人生没有任何影响。 我的三观太硬了，我以后应该会死在这上面。有时候想想，我喜欢自己，大概就是因为这一点。我讨厌的，也是这一点。 关注我的读者中，有许多也是写字的，他们会问我公众号到底写什么好呢？我当然不知道。看你的目的是什么了。想要赚钱，就写读者爱看的。想要锻炼文笔，就写自己想写的。如果两者完美结合，那你就太幸运了。 我写的比较杂，风格与题材跨度大，故事与碎片随便来，反正什么都有。当天想到什么就写什么。比如这种，新读者过来洗洗粉，我们先来测试下三观。 周末啦，你快来跟我玩呀！ 5 我是因为八个月前，工作上出现了危机感，才选择开公众号的，后来试着写写短篇故事，到现在也就写了六七篇。我最满意的那个故事，阅读量最低。 其实我写文这大半年来，最大的收获，并不是有八万个人来粉我，给我带来所谓的一点点荣誉，这些都没有用。离开网络我屁都不是，不对，是我现在也什么都不是。 最重要的，是我明白：能长久的文字，写的应该是人性。文学，始终是人学。我觉得人性这个东西很有意思，值得深究。这是我到现在都还在坚持下去的原因吧。 我跟出版社签了一本书，虽然这本书的稿费几条广告就能赚回来，但我还是想写一本我觉得有点意思的书。这本书里的大部分文字，不会放在这里。因为不合适。 我并不是作家，也非常非常非常讨厌别人用作家这个词来形容我，我觉得这是对那些死掉作家的侮辱。我就是一个分享生活的作者，写文是副业，我也乐意把它当副业。 兴趣最好是拿来享受的，永远都是。 6 开公众号到底能干嘛？ 每个人欲望不同，没有答案。有个朋友去年跟我说，你要是在今年九月份把阅读量稳定在每篇一千以上，就送你最好的kindle。我就拼命写啊写啊写啊，然而等我几个月前破万时，早就跟他绝交了。人生，真是刺激。 最后，希望还在关注我的读者能够明白： 1、不要跟我咨询感情问题，我没有太多感情经历，也不知道该怎么办； 2、可以给我发大段邮件，但请不要每天给我发几百条私信，我们不熟； 3、拒绝一切让我指导文章的作者，我没资格，你们写得都比我好，比心； 4、我在上海做广告文案，以后可能会转行，也可能会离开上海，不要再问相同的问题； 5、不会爆照，我又不靠脸吃饭； 6、不交朋友，只写字； 7、我永远十八； 8、没了。 以上，公众号关注指南，从此不再议。 摘自订阅号「七毛」","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"创作","slug":"创作","permalink":"https://blog.yanng.io/tags/%E5%88%9B%E4%BD%9C/"},{"name":"平台","slug":"平台","permalink":"https://blog.yanng.io/tags/%E5%B9%B3%E5%8F%B0/"},{"name":"微信","slug":"微信","permalink":"https://blog.yanng.io/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"运营","slug":"运营","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5/"}]},{"title":"几个我常去的沉浸式社区","slug":"e4-bd-a0-e4-b9-8b-e6-89-80-e4-bb-a5-e6-98-af-e7-9b-b4-e7-94-b7-ef-bc-8c-e6-98-af-e5-9b-a0-e4-b8-ba-e8-bf-98-e6-b2-a1-e6-9c-89-e5-87-ba-e7-8e-b0-e8-ae-a9-e4-bd-a0-e5-8a-a8-e5-bf-83-e7-9a-84-e9-82-a3","date":"2016-06-15T10:23:21.000Z","updated":"2018-07-05T10:20:27.000Z","comments":false,"path":"2016/06/15/e4-bd-a0-e4-b9-8b-e6-89-80-e4-bb-a5-e6-98-af-e7-9b-b4-e7-94-b7-ef-bc-8c-e6-98-af-e5-9b-a0-e4-b8-ba-e8-bf-98-e6-b2-a1-e6-9c-89-e5-87-ba-e7-8e-b0-e8-ae-a9-e4-bd-a0-e5-8a-a8-e5-bf-83-e7-9a-84-e9-82-a3/","link":"","permalink":"https://blog.yanng.io/2016/06/15/e4-bd-a0-e4-b9-8b-e6-89-80-e4-bb-a5-e6-98-af-e7-9b-b4-e7-94-b7-ef-bc-8c-e6-98-af-e5-9b-a0-e4-b8-ba-e8-bf-98-e6-b2-a1-e6-9c-89-e5-87-ba-e7-8e-b0-e8-ae-a9-e4-bd-a0-e5-8a-a8-e5-bf-83-e7-9a-84-e9-82-a3/","excerpt":"","text":"遗传爷爷的木匠基因，自幼就不安分，小时候航模火箭、高中大学五金工具电烙、电脑方面更是没少折腾，从台式机到笔记本，从MP4到显示器，各种家电数码没少搞坏过。 从windows到mac os，从ubuntu到centos，从android到IOS到ddwrt，搞服务器，整网站，弄ps，敲代码，剪视频……有时候我自己都觉得自己是不是太能折腾了。 可是，谁叫我就是一个喜欢折腾的人呢。 从大学开始，就关注IT资讯、互联网、移动互联网、社会化媒体、以及各种技术也没少接触或者实践折腾。几年下来，自己也算是积累了不少，至少吹起水来有模有样，总能知道说些什么。 可是越到后来，还是被各种信息给弄混乱了，每天获取太多信息倒让自己有种信息焦虑了。 可是越到后来，还是被各种信息给弄混乱了，每天获取太多信息倒让自己有种信息焦虑了。今年以来，开始越来越喜欢进一些圈子式、小众、沉浸式的社区。 人少、不吵，内容好，看得爽，哥喜欢。 尤其是IT类、geek类的社区，牛人聚集，不管是问答、交易、或者是招聘和找工作，这种小圈子的社交信息质量和效率都算挺高的。 这篇博文说一说我自己常去的几个沉浸式社区，主要是IT、技术、数码类。 1.V2EX（IT类） http://www.v2ex.com/V2EX = way to explore. V2EX 是一个关于分享和探索的地方. V2EX是一个IT圈子人聚集的地方（搞技术的居多），很多电脑数码产品转卖（搞IT的貌似都喜欢不断换数码产品），常见帝魔广杭IT公司招聘信息。 2.知乎（综合类:高端人士聚集） http://www.zhihu.com/ _知乎_是一个真实的网络问答社区，社区氛围友好、理性、认真，这里连接了各行各业的精英，分享彼此的专业知识、经验、见解，为中文互联网源源不断地提供高质量的 … 李开复创新工场投资，运营团队强大，很多专业领域的高质量内容，比较多专业分析（各种领域都有，现在偏IT互联网）。我经常喜欢去刷互联网、科技、创业板块，看业内资讯。 3.Chiphell（硬件、数码、玩物） http://www.chiphell.com/ Chiphell也是我很喜欢的一个论坛，硬件发烧友聚集地，cpu、显卡、SSD、散热、外设、网络，大量高质量的产品性能评测和毒物分享。看了毒物，小心中毒啊，小心荷包。 4.PCbeta远景在线（操作系统） http://bbs.pcbeta.com/ 远景在线是国内知名的Windows电脑技术网站。 pcbeta就不多介绍了，中文技术圈著名论坛，windows和os系统大量发烧专业级折腾，N多软件下载破解、系统技巧分享（这段时间破解windows8消息太多，被微软致函警告了，可怜啊）。 5.数字尾巴（数码、玩物、毒物、文艺） http://bbs.dgtle.com/forum-2-1.html 手机、平板、相机，大量高质量消费数码产品评测，同时也有不少外设、文艺玩物（模型啊、文具啊、笔记本啊）之类的乱七八糟东西，参杂app评测，网友旅游摄影。圈子氛围挺不错，有人很喜欢，有人觉得装B，是个不错的圈子，同样要小心中毒。 6.爱拆客（笔记本拆机、改装） http://bbs.5ichecker.com/ 这是一个专注于笔记本拆机、评测、改装的论坛，涵盖大部分笔记本，升级CPU、换SSD、散热、天线神马的教程很多。 上面推荐的这几天网站，还比较贴近大家日常生活，不管怎么样，数码产品神马的大家都要用嘛。 还有一些网站就太小众了，纯属我自己的个人兴趣，在这里就简单说说，大家有兴趣要接触相关的时候，知道有这么一个地方就好了。 比如说专注与主机服务器的「全球主机交流论坛」：http://www.hostloc.com/forum.php 专注于无线设备（路由器、交换机、NAS、组网）的恩山无线论坛：http://www.right.com.cn 还有自行车、骑行相关的Biketo论坛http://www.biketo.com/bbs/forum.php 上面这就是我比较常去和喜欢的沉浸式小圈子社区，主要还是因为自己的兴趣在这些方面。 怎么说呢，越大越觉得「时间成本」宝贵，有时候会想「花三个小时解决这个问题，大概等于自己几个小时的工资」之类的问题了，折腾还是挺废时间的，有些问题可以花钱解决，可不少人硬是要自己动手拆啊装啊，还是那句话：兴趣嘛！ 如果你知道一些你感兴趣领域的沉浸式社区（网站、论坛都行），不妨分享出来吧。 有些时候，分享出来，让人知道有这么一个东西，说不定就让那人也感兴趣了。 有句话说得好「你之所以是直男，是因为还没有出现让你动心的那个他」。 兴趣也是这样，发现了一个沉浸式社区，说不定就来兴趣了。 摘自罗磊的独立博客","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"未分类","slug":"未分类","permalink":"https://blog.yanng.io/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"}]},{"title":"少数派 Matrix内测通过及意见反馈","slug":"e5-b0-91-e6-95-b0-e6-b4-be-matrix-e5-86-85-e6-b5-8b-e9-80-9a-e8-bf-87-e5-8f-8a-e6-84-8f-e8-a7-81-e5-8f-8d-e9-a6-88","date":"2016-06-07T10:12:37.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/07/e5-b0-91-e6-95-b0-e6-b4-be-matrix-e5-86-85-e6-b5-8b-e9-80-9a-e8-bf-87-e5-8f-8a-e6-84-8f-e8-a7-81-e5-8f-8d-e9-a6-88/","link":"","permalink":"https://blog.yanng.io/2016/06/07/e5-b0-91-e6-95-b0-e6-b4-be-matrix-e5-86-85-e6-b5-8b-e9-80-9a-e8-bf-87-e5-8f-8a-e6-84-8f-e8-a7-81-e5-8f-8d-e9-a6-88/","excerpt":"","text":"谢天谢地，终于等到你。 不过，当初为什么要申请内测资格，我至今都解释不清。或许处于某种原因吧，想写对产品的一些自己的思考，也可能由于好奇心重，想体验某个刚上线的产品或网站，说不准有朝一日也会成为火热社区中元老级的人物吧。 现在还只是半吊子的学生，该怎样打动「少数派」呢？我想了想，便写了如下这番话： 运营自媒体多年，也是多年的博主。 具有深度的思考，也有掉节操的脑洞。如果说把我的人生戳一个节点的话，那么这个节点之前的我是个平台搭建者（比如微信公众平台，网站等），节点之后，我要做的就是一个内容输出者。 在互联网做了这么多年的”伸手党”，也该拿出自己的东西分享给别人了。思想也好，技巧也好。 总之，爱分享的人最可爱。 终于在某一天收到一封邮件： 之后一直处于潜水状态，初期帖子不算多，不过确实有很多大牛分享的干货。 貌似到目前为止我只发过一次贴，而且贴还是在ZEALER首发（毕竟ZEALER已经是很大的科技社区，活跃度比Matrix高多了） 今天收到他们第一次意见征集，本来是不感兴趣的，不过他们有提供奖品——100元的京东E卡。 看起来蛮有诚意。 那好，我就填他们的问卷吧（万一有奖励呢，刚好最近想入手体验小米手环2，这将是一个很大的折扣） 反馈如下： 希望加入目前主流的写作方式——markdown，这已经成为大部分博主日常依赖的创作形式。 UI目前还不错，网站符合我喜欢的类型，简洁的界面，主流的响应式交互都有。 还有，目前网站文章分类只有「精选」，「热门」和「最新」，希望多加一个标签的功能，让文章按照分类标签的形式罗列，可以方便按照关键词进行检索和查阅。 最后，目前在各种产品高度雷同的前提下，希望有自己绝对优势的功能，才能在众多产品中脱引而出，不然只能埋没在众多相似的产品堆里被用户遗忘。 小小见解，斗胆进言，望理解，再次谢邀。真心祝Matrix能走的更远 装模作样的写完怀着忐忑的心情递交了问卷，不知道幸运之星会不会砸我头上，从没得过奖，但遇这种事还是想抱有希望。 万一呢？","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"浪失杂货店完整时间轴及人物手册","slug":"e6-b5-aa-e5-a4-b1-e6-9d-82-e8-b4-a7-e5-ba-97-e5-ae-8c-e6-95-b4-e6-97-b6-e9-97-b4-e8-bd-b4-e5-8f-8a-e4-ba-ba-e7-89-a9-e6-89-8b-e5-86-8c","date":"2016-06-07T09:39:16.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/07/e6-b5-aa-e5-a4-b1-e6-9d-82-e8-b4-a7-e5-ba-97-e5-ae-8c-e6-95-b4-e6-97-b6-e9-97-b4-e8-bd-b4-e5-8f-8a-e4-ba-ba-e7-89-a9-e6-89-8b-e5-86-8c/","link":"","permalink":"https://blog.yanng.io/2016/06/07/e6-b5-aa-e5-a4-b1-e6-9d-82-e8-b4-a7-e5-ba-97-e5-ae-8c-e6-95-b4-e6-97-b6-e9-97-b4-e8-bd-b4-e5-8f-8a-e4-ba-ba-e7-89-a9-e6-89-8b-e5-86-8c/","excerpt":"","text":"1960年 浪矢雄治的老伴因心脏病去世。雄治和妻子是相亲结婚，直到结婚那天，他们彼此都不了解。事实上，雄治的初恋情人为丸光园的创始人皆月晓子，二人在年轻时私奔失败，晓子终生未婚。 1969年 皆月晓子（雄治初恋情人、丸光园创始人）过世，她本人终生未婚。 1970年 孤独的浪矢雄治开始在杂货店进行烦恼咨询，最初都是应付小孩子的调皮有趣的问题，后来慢慢接到严肃的咨询。雄治第一次把回信放在牛奶箱是咨询“是否应该和父母趁夜潜逃”的保罗.列侬（和久浩介），之后浩介在潜逃途中离开父母，以藤川博的姓名生活，并成为一名职业木雕师。 即便身体不适，雄治也坚持给每个咨询的人认真回信，因为他认为“写信的人，他们都是内心破了个洞，重要的东西正在从那个破洞中逐渐消失。人的心声是绝对不能无视的。” 1978年 绿河（川边绿）写信咨询，她怀有身孕，即将出生的孩子的父亲是有妇之夫。“是否该生下孩子”，她给浪矢雄治提出这样一个难题。 1979年3月 绿河（川边绿）驾车坠海死亡，一岁左右的婴儿获救。 1979年6月 浪矢杂货店关闭，起因是雄治看到“一名29岁的未婚女子驾车坠海死亡，同车的一名婴儿生还”的新闻报道。雄治坚信这名女子就是曾向他咨询过的绿河。由此他产生怀疑，这些咨询者因为他的回答，人生有了怎样的改变呢？自己认真思考、从未敷衍的回答是否真正帮助到他们了呢？还是说因为他的回答，他们却陷入了不幸的境地？每想到这一点，他如芒在背，再也无法轻松回答咨询，并因此关了杂货店。随后雄治搬到儿子贵之家一起生活。 1979年9月 雄治被诊断为肝癌晚期，他提出想回杂货店住一晚上。贵之深感不解。9月13日晚上，雄治留下遗书给儿子，希望他在自己的33周年忌日快要到来时，发布公告，声称零时零分至黎明的这段时间，浪矢杂货店的咨询窗口将复活。请得到过咨询的人们直言相告，当时的回复对其人生产生了什么样的影响。同时，9月13日晚上，雄治收到来自未来的感谢信，其中包括“百分小毛头”、“绿河的女儿”、“保罗.列侬”的来信。（其中保罗.列侬的感谢信在后文中提及，是和久浩介披头士主题酒吧于2012年9月所写） 1979年11月 月兔（静子，击剑女运动员）写信向浪矢杂货店咨询，“是否应该放弃奥运会陪伴身染重病的男友”。而此时雄治在医院。收到咨询信并回复的为幸平、翔太、敦也小偷三人组。 1980年7月 松冈克郎在浪矢杂货店碰见月兔（静子，击剑女运动员），当时月兔（静子，击剑女运动员）正往里投放感谢信。（此封感谢信由小偷三人组收到）克郎因此得知浪矢杂货店还可以咨询，于是以“鱼店音乐人”的名义写信问“是应该坚持音乐梦想还是继承鱼店”，小偷三人组回复了此信。 1980年9月 “迷途的小狗”（武藤晴美）从月兔（静子，击剑女运动员）口中得知浪矢杂货店，于是写信咨询，询问“如何辞掉工作做好陪酒小姐”，小偷三人组回复此信。 1980年9月13日 雄治病逝。 1980年10月 贵之在浪矢杂货店遇到月兔（静子，击剑女运动员），告知父亲去世的消息。月兔称去年11月曾得到过其父的指点，表示感谢。那时雄治正在医院治疗，因此贵之以为月兔弄错了时间。 1988年12月24日 丸光园发生火宅，“鱼店音乐人”松冈克郎为救人丧命。浩介和武藤晴美相遇。随后浩介又在浪矢杂货店遇到贵之，得知8年前雄治去世的消息。 2011年底 浪矢贵之去世。 2012年9月 浪矢骏吾在网上发布“浪矢杂货店复活”的消息。 2012年9月12日 小偷三人组打劫了“迷途的小狗”武藤晴美的别墅。 2012年9月13日0点-黎明 小偷三人组收到了来自过去的“月兔”、“鱼店音乐人”、“迷途的小狗”的来信，并一一认真回复。 【关于33周年忌日的问题】：浪矢雄治给贵之遗书的时候，当时是1979年9月13日，雄治以为自己即将死亡，所以提出要快到自己33周年忌日时发布复活的消息。（详情可参见P120页）而实际上，雄治是1980年9月13日死亡的。而此后文中提到的都是，“据说是浪矢杂货店主人33周年的忌日。” 因此，2012年实际上是他的32周年忌日。 不过，还有另外一种可能的解释是，日本计算忌日的方法和中国不一样，可见P288页武藤晴美给浪矢杂货店的感谢信：“据网站上説，今晚是您的33周年忌日，而我写信向您咨询，正是32年前的这个时候。这么说来，我应该是最后一个咨询者。”如果按照中国的算法，33周年忌日说明此人已经去世33周年，那32年前应该是已经去世1年，怎么可能还有“最后一个咨询者”可言。 【关于后门】：文中多次提到，“关着后门，时间就不会流逝。” P32中提到，敦也花了大约15分钟外出去便利店买吃的，幸平却说已经一个多小时了。难道说，如果把后门敞开，屋里和屋外的时间就同步了？这也可以理解为，为什么1979年9月浪矢雄治可以收到来自未来的信件，那是因为2012年9月13日零点至黎明有个时间段，敦也嚷嚷着打开了后门。如果后门一直关闭，那收到感谢信的应该就是小偷三人组了。这就是解忧杂货店的奇妙之处。 人物关系简介 浪矢雄治：浪矢杂货店的老板，为人们解答烦恼 浪矢贵之：雄治的儿子 浪矢骏吾：贵之的孙子 皆月晓子：丸光园创始人，年少时和浪矢雄治私奔失败，终生未婚 和久浩介：“保罗.列侬”，初中时父母双亡，后以“藤川博”名义生活，曾在丸光园生活,最终成为职业木雕师 川边绿：“绿河”，爱上有妇之夫，未婚先孕，最终坠海身亡，留下一岁左右的女儿 静子：“月兔”，职业为击剑运动员 松冈克郎：“鱼店音乐人”，曾就读于东京某大学经济学院，21岁退学，1988年圣诞儿童福利院“丸光园”演出，为救一个小男孩（水原芹的弟弟）而在大火中牺牲，留下作品《重生》 武藤晴美：“迷途的小狗”，小狗事务所社长，曾在丸光园生活，后因得到浪矢杂货店指点而投资房地产、股票以及高尔夫会员证等，积累巨大财富 水原芹：天才女音乐人，因演唱《重生》而出名 荣美子：克郎的妹妹 加奈子：克郎的母亲 松冈健夫：克郎的父亲 翔太：曾在丸光园生活,被供职的家电商场炒了鱿鱼，靠给便利店打工勉强度日 敦也：曾在丸光园生活,母亲是陪酒小姐，父亲为同一家店的服务生，没等他出生就消失的无影无踪。母亲身边换过无数男人，也因此使得他遭到有暴力倾向的男人毒打，他不得已去偷小摊上的烤鸡肉被抓，之后被送到孤儿院丸光园。配件加工厂上班，因为新型配件订单出差错而背黑锅。 幸平：曾在丸光园生活,身材高大，因其工作的汽车修理厂倒闭而失业，住在工厂宿舍，随时可能会被扫地出门","categories":[{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"去他妈的取关","slug":"e5-8e-bb-e4-bb-96-e5-a6-88-e7-9a-84-e5-8f-96-e5-85-b3","date":"2016-06-04T07:12:08.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/04/e5-8e-bb-e4-bb-96-e5-a6-88-e7-9a-84-e5-8f-96-e5-85-b3/","link":"","permalink":"https://blog.yanng.io/2016/06/04/e5-8e-bb-e4-bb-96-e5-a6-88-e7-9a-84-e5-8f-96-e5-85-b3/","excerpt":"","text":"在整理取关公号的时候看到了之前不知道什么时候关注的「马赛客」，粗略的想了想是不是要取关，这时我看到了这篇文章，让我打消了取关的念头，反而觉得不打赏就像是睡了一个姑娘却对她毫无回报。所以，果断打赏，去他妈的取关！ 文章如下：","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"推送到底取悦了谁？","slug":"ef-bb-bf-e6-8e-a8-e9-80-81-e5-88-b0-e5-ba-95-e5-8f-96-e6-82-a6-e4-ba-86-e8-b0-81-ef-bc-9f","date":"2016-06-04T07:03:01.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/04/ef-bb-bf-e6-8e-a8-e9-80-81-e5-88-b0-e5-ba-95-e5-8f-96-e6-82-a6-e4-ba-86-e8-b0-81-ef-bc-9f/","link":"","permalink":"https://blog.yanng.io/2016/06/04/ef-bb-bf-e6-8e-a8-e9-80-81-e5-88-b0-e5-ba-95-e5-8f-96-e6-82-a6-e4-ba-86-e8-b0-81-ef-bc-9f/","excerpt":"","text":"一篇推送，是阅读者指尖划过的瞬间，也是撰写者无数深夜撕心裂肺的苦痛与无声的呐喊。为什么要为取悦别人而创作？无数的未读小红点又与我何干？我不是圣人拿不出惊世骇俗的作品，也无法奢望得到追崇高尚情操的你的青睐。 这些思考来源于一次推送下的评论 这次的推送者是荀饶，用短诗形式写自己。 读完有三种思绪： 写的真不错呢，我什么时候才能达到这样的造诣 读过之后竟有一种无名的伤感，默默地打赏 这些个人主观情感不能在这个号发？ 前两个想法只是一闪而过便烟消云散，第三个却让我久久不能释怀。 想想当初这个号的定位 ——「做一个方便大学生生活和学习的公众号」。可现如今呢？这个号掺杂了太多的个人情感，充斥着文编各种不爽与不服。里面也有我写的文，不过是不忍心看到那些巴巴等着看段子的人又等到一篇看不大懂的情诗而失落，偶尔开开荤更有利健康，天天喝八宝莲子羹谁也会吃不消。 现在这样不好吗？ 我觉得就挺不错，至少真诚，因此也收获了一些真诚粉。他们总是会在推送发出去的几分钟之内认真读完文章，然后点赞。评论现在几乎已成惯例，评论区总有那么几个熟悉的ID来捧场。有时朋友圈里还会看到他们的转发。 这其实是我最希望看到的，一种被认可的自豪感从身体里向外不断散发。也是，毕竟是一介俗人，要靠这种小幸福激励自己才能有前进下去的动力。 那么讲真，做媒体到底该取悦谁？一路走来现在回过头看，答案应该很明了。个人情感短诗也好，寻求同感的段子也好，只要推送者和订阅者高兴，就算现在有个人跑来跟我说：你写的东西根本没有任何质量！ But，who care？ 我愿意说，有人愿意听，这就够了。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"母亲节在新媒体的一篇推送","slug":"e6-af-8d-e4-ba-b2-e8-8a-82-e5-9c-a8-e6-96-b0-e5-aa-92-e4-bd-93-e7-9a-84-e4-b8-80-e7-af-87-e6-8e-a8-e9-80-81","date":"2016-06-04T06:42:50.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/06/04/e6-af-8d-e4-ba-b2-e8-8a-82-e5-9c-a8-e6-96-b0-e5-aa-92-e4-bd-93-e7-9a-84-e4-b8-80-e7-af-87-e6-8e-a8-e9-80-81/","link":"","permalink":"https://blog.yanng.io/2016/06/04/e6-af-8d-e4-ba-b2-e8-8a-82-e5-9c-a8-e6-96-b0-e5-aa-92-e4-bd-93-e7-9a-84-e4-b8-80-e7-af-87-e6-8e-a8-e9-80-81/","excerpt":"","text":"这篇文章在这里发过一遍了，最近下载了网页截图的工具，测试一下觉得很好用，便把这篇文章首发的样子截下来贴在这里。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"今天永远觉得昨天做的东西像狗屎","slug":"e4-bb-8a-e5-a4-a9-e6-b0-b8-e8-bf-9c-e8-a7-89-e5-be-97-e6-98-a8-e5-a4-a9-e5-81-9a-e7-9a-84-e4-b8-9c-e8-a5-bf-e5-83-8f-e7-8b-97-e5-b1-8e","date":"2016-05-18T17:38:06.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/19/e4-bb-8a-e5-a4-a9-e6-b0-b8-e8-bf-9c-e8-a7-89-e5-be-97-e6-98-a8-e5-a4-a9-e5-81-9a-e7-9a-84-e4-b8-9c-e8-a5-bf-e5-83-8f-e7-8b-97-e5-b1-8e/","link":"","permalink":"https://blog.yanng.io/2016/05/19/e4-bb-8a-e5-a4-a9-e6-b0-b8-e8-bf-9c-e8-a7-89-e5-be-97-e6-98-a8-e5-a4-a9-e5-81-9a-e7-9a-84-e4-b8-9c-e8-a5-bf-e5-83-8f-e7-8b-97-e5-b1-8e/","excerpt":"","text":"那天朋友圈里一个刚入行不久的年轻设计师朋友看了一篇文章，然后有了以下云云： [ 做5年设计，意味着什么？ ](http://mp.weixin.qq.com/s?__biz=MjM5MjUwMzE2MA==&amp;mid=2680514025&amp;idx=1&amp;sn=196a808df6b10ba011db39ea16297a01&amp;scene=2&amp;srcid=04270dOZ5WtRMJd0vJ2xEnhT&amp;from=timeline&amp;isappinstalled=0#wechat_redirect)[](http://mp.weixin.qq.com/s?__biz=MjM5MjUwMzE2MA==&amp;mid=2680514025&amp;idx=1&amp;sn=196a808df6b10ba011db39ea16297a01&amp;scene=2&amp;srcid=04270dOZ5WtRMJd0vJ2xEnhT&amp;from=timeline&amp;isappinstalled=0#wechat_redirect)[](http://mp.weixin.qq.com/s?__biz=MjM5MjUwMzE2MA==&amp;mid=2680514025&amp;idx=1&amp;sn=196a808df6b10ba011db39ea16297a01&amp;scene=2&amp;srcid=04270dOZ5WtRMJd0vJ2xEnhT&amp;from=timeline&amp;isappinstalled=0#wechat_redirect)[![](http://xiaobs.cc/wp-content/uploads/2016/05/img_3121.jpg)](http://xiaobs.cc/wp-content/uploads/2016/05/img_3121.jpg) 这篇文章引发很多设计师的思考和共鸣：一个设计师如果周期可以是5年的话，那么5年对他们来说意味着什么，设计师们5年之后究竟该何去何从。这种思考尤其对刚学设计毕业的出来或者热爱设计一心想要在设计界打拼出一片天地的人是非常敏感的，因为这关乎他们的未来。试问30岁之前能有几个5年来试错？所以留给他们选择的时间并不多。 其实今天并不是要谈设计相关的东西，而是要谈谈他看完这篇文章之后写的这些话。整个文最打动我的其实不是对时光飞逝的感慨，也不是对未来生活的迷惘。而是他最后写的： 尽量少的去写东西，因为看起来很幼稚。就像我看以前的自己一样。 嗯，就是这句。 其实我一直以来关于写作都在做两件事，一个是试图找到一些合理的解释来说明我为什么写作的强迫症如此强烈然后再克服它们，另一个是在找到解释之前尽量多的找写作灵感。 第二件事我一直在做，为了能写出有质量的东西，我要变得比其他人对一件普通事情更加敏感，思考的比其他人更多，还要不断使自己变得矫情和伤感。（目前觉得人在伤感时更能激发创作意志）而白天需要与人进行愉快的信息交流，是矫情不起来的。所以大多选择无人的夜，失眠时静静的把自己的想法敲进手机里。喜欢半夜码字原因也有很多，改天专门写文剖析之。 第一件事我也在做，只不过这种事情单单靠主动修行是达不到目的的，需要每天思考才能找到答案，而且答案不固定不唯一。 就像我那天发了篇博客，戏称自己有一大堆的写作强迫症，这也不能写那也不能写的。 其实还好，这些只是「懒」的借口。但我还是很乐意把自己的想法用文字的形式记录下来的，就算是为了让自己多记住以前的事情。（因为我总是在向很远的未来看，从不会记住以往的一些琐碎） 其实时间对于我们来说，就像手中的沙一样，看谁能抓住多少，就能把握多少。我们总是抱怨生活中没有机会找我们，但我们主动去寻找过它吗？咒骂人生太短，不如在这有限的时间燥起来。 毕竟，我们还年轻。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"},{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"},{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"我的朋友圈","slug":"e6-88-91-e7-9a-84-e6-9c-8b-e5-8f-8b-e5-9c-88","date":"2016-05-12T06:57:25.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/12/e6-88-91-e7-9a-84-e6-9c-8b-e5-8f-8b-e5-9c-88/","link":"","permalink":"https://blog.yanng.io/2016/05/12/e6-88-91-e7-9a-84-e6-9c-8b-e5-8f-8b-e5-9c-88/","excerpt":"","text":"震撼出事了 紧急通知 速速扩散 抓紧收藏 一定要看 深度好文 看后秒懂 轰动全国 据说很灵 这都敢说 笑死我了 教你几招 删前速看 国外都转疯了 太震撼了 越读越震撼 你知道吗 你还不知道吗 你肯定不知道 最新骗局 刚刚出的事 央视刚刚曝光 国务院最新消息 中央下达最新指令 没流量也要看 不看后悔五百年 不发出来对不起大家 有身份证的都赶紧看吧 为了你爱的人一定要看 芒果台真敢说 德国记者一句话 河南记者冒死卧底 广西电视台又大胆了 警告美帝，中国这回牛b了 暗拍（马上删除） 惊呆了（珍藏版） 照片门（绝密偷拍） 刚刚发生的（传疯了） 只给你看，你懂的（2016最新） 终于出手了 周立波炮轰 少将质问美国 令十三亿人汗颜 崔永元两会震撼提案 天呐醒醒吧 哪个大仙编的 别再被忽悠了 谁弄的这么全一张表 笑是什么 生气是鬼 她太漂亮了 女人勿入，男人看了受不了 女人看了流泪 ，男人看了沉默 人（写的真好） 家（写的绝了） 娘（写的太好了） 什么是家（太经典了） 太有才了 太搞笑了 太可怕了 太无耻了 太诡异了 愤怒 绝版照片 家里有小孩的注意了 公园里刚刚发生的一幕 请一定转给你身边的女生 快来人肉 就是这个人渣 终于站出来讲真话了 人渣啊这种事都做得出来 有良知的中国人都应该站出来 英国人的预言 北京传来六件大事 北京又传来六件大事 中国到了最危险的时候 中国又到了最危险的时候 看完我傻眼了 金子般的十句话 刚看两秒就受不了 看完不笑我吞手机 老祖宗教你怎么看人 欺骗你多年的小知识 终于找全了 转基因食品致癌 喜欢吃鱼的一定要看 家里有这东西的注意了 破坏免疫力的十大魔鬼 下一个中招的就是你了 属猴的注意了 你家有属马的吗 今天无意中看到 不然小心倾家荡产 今天是消病日 明天是活佛生日 这个月是猴年马月 今天是世界好兄弟日 终于等到这最后一天了 当醋遇上葡萄干 手机会使磁卡消磁 蜂蜜吃的对很关键 你还在吃小龙虾吗 一次性筷子能变笋干 山东已经出现了 新疆又排全国第一了 有几个人拿着香皂到处推销 火车票票价最快年底前将涨价 请大家5月13号一定别进影院 老中医一绝 价值连城的养生知识 一篇价值百万的古药方 当官的四大生肖有你吗 知道你的名字寓意是什么吗 这些东西太可怕了 这些东西一定不要吃 吃一口就成植物人 这7种肉比砒霜还毒 看到这种虫子千万别打 一家人患癌 罪魁祸首竟是 苹果7已经问世 明年工资新规定 55年研究世界难题 以后结婚证都改成这样 工程院院士一招防治老年痴呆 含着泪看完 听哭了百万人 世界上最漂亮的鸡 没想到公公竟然做这种事 原来女人最爱这一物 男人必看 国人吓一跳 315晚会曝光全名单 赵本山的奢侈生活大曝光 微信红包被利用或被取消 倒输银行卡密码能自动报警 最新解密 这篇太值得看了 不看真的会后悔 没想到错了这么多年 中南海1号档案解密 你也该清理微信里的死尸了 放到你的圈子里 朋友会爱死你 家里少了它就招致灾祸 转给需要的 必须转 看明白的转 再忙也要转 看到的都转了 你敢不敢转发 不转不是中国人 恳请你花三秒转 会有朋友帮我转吗 大家都为公益转一下 希望有一个朋友为我转 认识我的拜托转发一下 猪狗不如的畜生 转死他们 为什么最近都在疯转这几句话","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"真的爱你","slug":"e7-9c-9f-e7-9a-84-e7-88-b1-e4-bd-a0","date":"2016-05-08T09:48:46.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/08/e7-9c-9f-e7-9a-84-e7-88-b1-e4-bd-a0/","link":"","permalink":"https://blog.yanng.io/2016/05/08/e7-9c-9f-e7-9a-84-e7-88-b1-e4-bd-a0/","excerpt":"","text":"我从小就是个叛逆的主，我妈也经常操我的心，所以在我的记忆里没少和她吵过架。 那年夏天刚刚结束了中考，疯玩了几天后就到了成绩公布的日子。果不其然，成绩不理想，说白了就是哪所高中都上不了，除非砸钞票。其实家里早就预料到了，我在初三下半学期就已经放弃，不仅如此还疯狂的追求着刚转进班里的一个女生，那个女生很理性的拒绝了我，“我觉得我们应该把精力都放在学习上，这不快中考了嘛，你这么聪明，一定没问题”。 但我心里明白的很，初中三年贪玩，每天都是睡觉记歌词玩魔方，三年下来成绩没上去，倒是魔方复原的越来越快，歌词记得越来越多，中考对我来说早就无望了。 然而我妈又能把我怎样办？每次的唠叨她自己都觉得烦，又怕说的多了打击我的自尊心，面对落榜还一天无所事事、吊儿郎当的我，她除了半夜睡不着觉暗自叹息，恐怕真不知道该拿我怎么办了。 我那时真是傻，以为中考过了就是解放，再也不用学习可以逃离苦海。便每天满脑子想怎么玩的痛快，从来不想没学上该咋办。那天我妈朋友在外面抓了一条小狗仔，狗的品种现在已经叫不上来了，不过它全身雪白，只有四只爪子是黑色的，走起路来一扭一扭的，可爱至极。我看到后甚是喜欢，就争得它的抚养权，赶紧把它抱回家了。从此每天与狗玩耍就成了我消磨暑假时光的一大乐趣，丝毫不考虑未来自己的路该怎么走。 时间一晃就到了八月份，那是初中复习班开学的日子。我妈找我商量“你这一天天玩也不考虑上学的事，这么大的人了还需要我和你爸替你操心，再上一年初三你愿不愿意？明年咱们再考一回”，我心想也只有这样了，便答应了她。不过还得满足她一个要求，把狗送人。 what ？ 都有感情了。说送就送，你逗我 ？ 她也装作没听见我说的话去上班了，留我在家还在各种抱怨。眼看开学的时间就到了，考上高中的同学还有一个月才开学，让我很是羡慕，不过谁让我放纵不羁呢？ 那天晚上我妈下班回家，身后跟着隔壁邻居家的孩子，我妈也不顾我这有什么反应，直接把狗和它的窝让那孩子带走了。 卧槽，我才是它的主人好吧？送不送也要我来决定。恼羞成怒的我抓起她的手提包就扔到了地板上，不顾一切地和她闹了起来，那时我爸还没回家，闹了一通便把自己锁房间里面，也不管外面发生什么。 之后，她整天躺在床上不说话，也不吃饭。任凭我说什么，都于事无补，当时的我吓坏了。 我回到房间仔细反思了自己的行为和态度，我觉得我应该向她道歉。工作忙碌了一天，我还对她大发雷霆。她一次一次的容忍我顾及我的自尊，我却没能多理解她的无奈。看到她为了我的任性而惩罚自己，理智过后的我觉得自己做的简直畜生不如，便向她诚恳的道歉，掏心肺腑之后两个人抱在一块哭成了泪人。 当时我便暗暗发誓：她爱我，我不能让她再失望。 今天是母亲节，忽然想到曾经发生过的事。一晃几年过去了，曾经那么倔强的她也渐渐敌不过无情的岁月在她眼角留下的痕迹。多希望时光能慢点走，能多陪她多说说话，带她去逛逛公园。 我们在外追逐理想，母亲拼命挣钱供给。抛去道德和伦理使其如此，我们更应该好好珍惜这份感情。 矫情的话也不多说，就希望你看完这篇文章能够立马给你的母亲大人打个电话。空间朋友圈微博那些没用的就别整了，实实在在祝福比啥都强，不是吗？","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"霸王别姬﻿","slug":"392","date":"2016-05-08T09:13:58.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/08/392/","link":"","permalink":"https://blog.yanng.io/2016/05/08/392/","excerpt":"","text":"我是假霸王，你是真虞姬！ 不行！说的是一辈子！差一年，一个月，一天，一个时辰，都不算一辈子！ 一笑万古春，一啼万古愁，此景非你莫有，此貌非你莫属。 一颦一蹙 掩不住对哥哥的喜爱 小尼姑年方二八，正青春被师傅削去了头发。我本是女娇娥，又不是男儿郎","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"未分类","slug":"未分类","permalink":"https://blog.yanng.io/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"}]},{"title":"从众，还是偏执？","slug":"381","date":"2016-05-04T05:42:12.000Z","updated":"2020-05-01T08:30:02.768Z","comments":true,"path":"2016/05/04/381/","link":"","permalink":"https://blog.yanng.io/2016/05/04/381/","excerpt":"","text":"随和顺从的人朋友虽多，却不如偏执的人活的痛快。 。。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"}]},{"title":"一生的课题——包容","slug":"e4-b8-80-e7-94-9f-e7-9a-84-e8-af-be-e9-a2-98-e5-8c-85-e5-ae-b9","date":"2016-05-01T14:53:27.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/01/e4-b8-80-e7-94-9f-e7-9a-84-e8-af-be-e9-a2-98-e5-8c-85-e5-ae-b9/","link":"","permalink":"https://blog.yanng.io/2016/05/01/e4-b8-80-e7-94-9f-e7-9a-84-e8-af-be-e9-a2-98-e5-8c-85-e5-ae-b9/","excerpt":"","text":"年过半百的他们都仍在努力学习如何包容对方，我们年轻人又有什么资格去抱怨对方一些鸡毛蒜皮的小事情呢？","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"负能量一则","slug":"372","date":"2016-05-01T06:04:11.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/01/372/","link":"","permalink":"https://blog.yanng.io/2016/05/01/372/","excerpt":"","text":"今天大辉和王五四都相继发文，不过按腾讯的尿性，这种文很快会被删。 不过我在乎的不是这些自媒体的安危，而是社会之殇。你不说我不说都不了解真相，有人说你知道又能怎样？就算知道了社会现在的乱象不还得活？一天杞人忧天忧心忡忡累不累？就是大部分人都这样想，然后又一部分人“合群”的后退一步，所有人就都冷漠麻木了。 不过，看戏的人又怎能懂得演戏人的悲哀。事情没发生在你头上，你当然不管那么多。 如果有天你看病遇骗，病没看好又花光你所有的钱，找政府又没人管，人死了利用互联网呼吁反而遭更多看客的冷嘲热讽。在那之后，你知道后悔了。 可是，那些狠心的骗子，淡漠的政府不都是自己一手养大的吗？能怨谁呢？","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"断","slug":"e6-96-ad","date":"2016-05-01T05:33:35.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/05/01/e6-96-ad/","link":"","permalink":"https://blog.yanng.io/2016/05/01/e6-96-ad/","excerpt":"","text":"“离开的时候学会不再关注对方，不要再夸大过去对方的感情，过去了就过去了，夫妻可以散场，儿女会长大，永远不会凋谢的细胞只有癌症。” 来自朋友圈","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"我的写作强迫症","slug":"e6-88-91-e7-9a-84-e5-86-99-e4-bd-9c-e5-bc-ba-e8-bf-ab-e7-97-87","date":"2016-04-26T05:19:25.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/26/e6-88-91-e7-9a-84-e5-86-99-e4-bd-9c-e5-bc-ba-e8-bf-ab-e7-97-87/","link":"","permalink":"https://blog.yanng.io/2016/04/26/e6-88-91-e7-9a-84-e5-86-99-e4-bd-9c-e5-bc-ba-e8-bf-ab-e7-97-87/","excerpt":"","text":"我的写作强迫症。 别人写过的不写，方向容易变成鸡汤的不写，感觉没人感兴趣的不写，感觉太难写不出来的不写，怕有的人看见不写，怕有的人不看不写，没有灵感不写，不想思考的时候不写。 所以，因为这些强迫症，我永远都写不出东西来。 （其实是懒）","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"}]},{"title":"强迫症有时未必是件坏事","slug":"e5-bc-ba-e8-bf-ab-e7-97-87-e6-9c-89-e6-97-b6-e4-b8-8d-e6-98-af-e4-bb-b6-e5-9d-8f-e4-ba-8b","date":"2016-04-25T05:29:11.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/25/e5-bc-ba-e8-bf-ab-e7-97-87-e6-9c-89-e6-97-b6-e4-b8-8d-e6-98-af-e4-bb-b6-e5-9d-8f-e4-ba-8b/","link":"","permalink":"https://blog.yanng.io/2016/04/25/e5-bc-ba-e8-bf-ab-e7-97-87-e6-9c-89-e6-97-b6-e4-b8-8d-e6-98-af-e4-bb-b6-e5-9d-8f-e4-ba-8b/","excerpt":"","text":"有时，促使你做成一件事的并不是你的能力，而是让你苦恼的强迫症。 可能不止一次的你想要摆脱它，但仔细想想看，不就是它的存在才能让你创作出与常人不同的作品来吗？","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"致最爱的你","slug":"336","date":"2016-04-25T04:01:46.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/25/336/","link":"","permalink":"https://blog.yanng.io/2016/04/25/336/","excerpt":"","text":"小时候村子里总是停电，摸黑的时候你还能点起蜡烛。 点两支蜡烛在做饭的屋子里，你替我洗澡，用毛巾毯裹好跑到另外的房间。 东京到了夏天，热了可以吹风。但是躺在凉席上，你扇着扇子哄我睡觉的时候，却是最清凉的瞬间。 你总是能把炉子里的火候控制的刚好，不像我，扔了多少纸才点起星星点点的火苗。 你骑车带我去领猪肉，你说是姥爷当兵的时候给的优惠政策。 早上你都会炒我最喜欢吃的土豆丝。 你在院门口乘凉，跟一群老太太们聊天，或者路过一个小贩卖豆腐。 你一直都更偏袒我，我说，姥姥，妈妈欺负我。你都会笑笑，说，孩子喜欢就买吧。 小时候见妈妈的时间很少，记忆里一直都是和你在一起的时光。 那时候你还能有很大力气干农活，现在你走好久的路我都好心疼。 现在还像以前一样辛苦。我能陪你的日子越来越少了。 记得爷爷去世以后，我多担心你也会离开我。所以我问你，姥姥啊，不要离开我，看着我有了宝宝好不好？ 你说，人的生死哪里可以决定呢？ 所以你一直答应我，你会健康的活下去。 离你越远，越害怕失去你了。更害怕如果哪一天你身体状况不好，妈妈心疼的时候我都心更痛。 今天跟你视频，家里的香薰蜡烛，特别像小时候的时候。你跟我坐在院子里看星星，把喜欢的一切比作星星不是因为我的天空暗淡，而是星星是抬头就看得到，一片漆黑里闪亮的东西，比起太阳，星星反而，更隐忍一些啊。 今天你在村子里的街边，想蹭邻居家的网跟我视频。看着姥姥，你好像又老一些了。牙齿间的缝隙，也变大了。 开始吃很多药了。所以我常常看到很多东西就会想起小时候你陪我的时候，远方的牵挂啊。 我知道无论多少感情都有无奈的时刻。 所以总是挖掘和珍藏那些美好的一切。 你要身体健康。 你是我和妈妈，更努力的希望。我们心里，最可贵的爱。 晚安。 _ 摘自朋友圈 _","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"迷茫时，不妨驻足留心风景","slug":"e8-bf-b7-e8-8c-ab-e6-97-b6-ef-bc-8c-e4-b8-8d-e5-a6-a8-e9-a9-bb-e8-b6-b3-e7-95-99-e5-bf-83-e9-a3-8e-e6-99-af","date":"2016-04-24T16:49:58.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/25/e8-bf-b7-e8-8c-ab-e6-97-b6-ef-bc-8c-e4-b8-8d-e5-a6-a8-e9-a9-bb-e8-b6-b3-e7-95-99-e5-bf-83-e9-a3-8e-e6-99-af/","link":"","permalink":"https://blog.yanng.io/2016/04/25/e8-bf-b7-e8-8c-ab-e6-97-b6-ef-bc-8c-e4-b8-8d-e5-a6-a8-e9-a9-bb-e8-b6-b3-e7-95-99-e5-bf-83-e9-a3-8e-e6-99-af/","excerpt":"","text":"总会以为校园破烂的喇叭根本就是摆设，闲的蛋疼的人才会停下匆匆的脚步来听它在卖力的唱着烂大街的民谣。 对音质要求也算不上太高，因为能说的起「音质」的基本都是建立在烧钱的基础之上。但校园里的喇叭真的破烂不堪，有的挂在楼角，有的挂在路灯杆上，风一吹吱呀呀的摇摇欲坠，到了每天下午五点半准时开始扯着沙哑的“嗓门”散播着各种学院新闻和各种过时的音乐。 像这种东西我向来是选择无视的，根本没什么用，还扰民，连说句话都得故意提高几分贝，根本不理解为什么当初要弄来这些烦人的黑盒子。 （图文无关） 那是一个很普通的下午，站在阳台依旧可以看见依依不舍的太阳落下山头，心中思绪万千的我静静的趴在窗户上看着外边的风景。虽然每天都在抱怨这个荒郊野岭般的生存环境，但当放下手头的忙碌时就会觉得一切都值得珍惜，生怕下一秒会失去这一刻的享受。 这时喇叭又开始上班了，放着留声机般音质的歌，虽然平时觉得都是自己听过的，但总有一两个是没有听过的，甚至都不清楚是谁唱的。 大抵是怀着特殊情感的人来听特殊的歌才会产生某种特殊的感觉罢。恰好一首从未听过的歌在校园的每个角落回荡，看着夕阳西下的我竟莫名的有一种伤感。人在独自一个人或是深夜的时候会变得多愁善感，心中会多了几分惆怅与悲凉。可能是我自己本身就是个比较悲观的生物，见到这种再普通不过的场景多待一秒或许会有一滴泪落。 到底在思考些什么，让自己如此忧虑和哀愁，自己问过自己竟也无言以对。人真是个奇妙的动物，复杂的情感连最了解自己的自己都解释不了二三，却又似乎看穿了别人的一切，试图想要建议别人该怎么继续往下走。 人们都说，我们都还年轻，不必想太多，还有机会可以去犯错，去尝试。可我矫情的认为，机会有很多，但选择只有一个，每次选择都是面临在岔路口的抉择，而且是没有回头重新来过的机会的。不同的人选择不同的方向，所以各种人走出了各种路。这也便解释了虽共处同一屋檐下，但仍人各有志，怀揣不同理想与抱负。 方向很难选，路更不好走。这可能是为什么随处一道风景便能使人黯然神伤的原因罢。 风景依旧，关键是看自己的心态怎样摆正。有时内心焦虑，无心观赏风景，不妨驻足聆听校园的广播，说不定会因此陶醉于其中，感觉全世界最懂自己的只有广播一个。 改编罗永浩的一句话， 通往牛逼的路上，风景差的让人只想说脏话，但有梦的人在意的是远方。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"}]},{"title":"秀恩爱，祝99","slug":"e7-a7-80-e6-81-a9-e7-88-b1-ef-bc-8c-e7-a5-9d99","date":"2016-04-24T14:13:58.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/24/e7-a7-80-e6-81-a9-e7-88-b1-ef-bc-8c-e7-a5-9d99/","link":"","permalink":"https://blog.yanng.io/2016/04/24/e7-a7-80-e6-81-a9-e7-88-b1-ef-bc-8c-e7-a5-9d99/","excerpt":"","text":"看到朋友圈有人秀恩爱，虽然看不惯，但还是点了赞，可能是打心底还是想祝福他们吧，毕竟世界上孤独的人还是占大多数，能够摆脱一个人过的生活实属幸运的事。 尽管心里不服，但还是想替他们珍惜这份感情","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"骑士的修养","slug":"e9-aa-91-e5-a3-ab-e7-9a-84-e4-bf-ae-e5-85-bb","date":"2016-04-24T13:44:02.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/24/e9-aa-91-e5-a3-ab-e7-9a-84-e4-bf-ae-e5-85-bb/","link":"","permalink":"https://blog.yanng.io/2016/04/24/e9-aa-91-e5-a3-ab-e7-9a-84-e4-bf-ae-e5-85-bb/","excerpt":"","text":"如果你是英勇的骑士，如果你爱上了一个公主。 当公主犯了公主病时，你需要卸下你的自尊和身份，不离不弃的陪伴。 因为这也是一名合格骑士一生的必修课。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"码农的革命动力","slug":"e7-a0-81-e5-86-9c-e7-9a-84-e9-9d-a9-e5-91-bd-e5-8a-a8-e5-8a-9b","date":"2016-04-24T13:41:01.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/24/e7-a0-81-e5-86-9c-e7-9a-84-e9-9d-a9-e5-91-bd-e5-8a-a8-e5-8a-9b/","link":"","permalink":"https://blog.yanng.io/2016/04/24/e7-a0-81-e5-86-9c-e7-9a-84-e9-9d-a9-e5-91-bd-e5-8a-a8-e5-8a-9b/","excerpt":"","text":"在自恋自嗨中成长，是每个码农进步下去的动力。 说什么开上豪车迎娶白富美对于他们都是扯淡好吗？ 其实能用上最有逼格的机器码代码就是他们感到最幸福的时刻了。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"关于早睡","slug":"e5-85-b3-e4-ba-8e-e6-97-a9-e7-9d-a1","date":"2016-04-24T13:36:38.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/24/e5-85-b3-e4-ba-8e-e6-97-a9-e7-9d-a1/","link":"","permalink":"https://blog.yanng.io/2016/04/24/e5-85-b3-e4-ba-8e-e6-97-a9-e7-9d-a1/","excerpt":"","text":"关于早睡，有时会因各种原因违背曾经发过的毒誓，但那又有什么办法，已经一个人很久了，反正早睡晚睡都没有人来牵挂和被牵挂，何必苦苦约束自己呢？ 一个人的生活总是无拘无束，和朋友在一起可以永远放纵不羁。这样别提有多好了😔 （最后一个表情其实出卖了我说的最后一句话，试问谁不感到孤独呢？）","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"}]},{"title":"那一夜我失眠了","slug":"e9-82-a3-e4-b8-80-e5-a4-9c-e6-88-91-e5-a4-b1-e7-9c-a0-e4-ba-86","date":"2016-04-23T18:31:14.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/24/e9-82-a3-e4-b8-80-e5-a4-9c-e6-88-91-e5-a4-b1-e7-9c-a0-e4-ba-86/","link":"","permalink":"https://blog.yanng.io/2016/04/24/e9-82-a3-e4-b8-80-e5-a4-9c-e6-88-91-e5-a4-b1-e7-9c-a0-e4-ba-86/","excerpt":"","text":"又一次做梦了，不同以往的是半夜醒来的我发现自己的眼眶竟有些红润。 也是，最近经历了太多事情，有些无奈，也有些大概是长久压抑的结果。确实特别地忙，忙到忘了一天到底吃没吃过饭，也忙到不知道该怎样表达我的想法。 终于凌晨3点从床上爬了起来，披上衣服顺了根舍友的烟出门，蹲坐在楼梯口一个人默默地抽着惆怅，想了好多，也骂过自己不是人，更恨不得一大嘴巴抽醒这个怂蛋。 外面的夜依旧是那么凄凉美，可看的人心情不同，景色也就不同。月光把一个落魄的灵魂毫不吝啬的暴露在惨白的墙上，恨不得挤进楼里冷嘲热讽这个全天下最大的傻瓜。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"}]},{"title":"望外有感","slug":"e6-9c-9b-e5-a4-96-e6-9c-89-e6-84-9f","date":"2016-04-23T18:16:27.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/24/e6-9c-9b-e5-a4-96-e6-9c-89-e6-84-9f/","link":"","permalink":"https://blog.yanng.io/2016/04/24/e6-9c-9b-e5-a4-96-e6-9c-89-e6-84-9f/","excerpt":"","text":"楼下种树的伯伯们在争相出谋划策，一起出力把一颗正值壮年的大树从卡车上搬运下来。 忙完的他们脸上挂着汗珠、成功的满足，和对子女的交代。这种成就感不是一般事物可比拟的，它不同于酒桌上谈成的生意，不同于久违的朋友相聚，不同于恋人关系的确定。 它是最淳朴的付出，一种真心为爱的人付出的情感。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"那个人好像条狗诶","slug":"e8-bf-99-e4-b8-aa-e4-ba-ba-e8-af-b4-e7-9a-84-e5-a5-bd-e6-9c-89-e9-81-93-e7-90-86-e5-91-a2","date":"2016-04-21T03:48:07.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/21/e8-bf-99-e4-b8-aa-e4-ba-ba-e8-af-b4-e7-9a-84-e5-a5-bd-e6-9c-89-e9-81-93-e7-90-86-e5-91-a2/","link":"","permalink":"https://blog.yanng.io/2016/04/21/e8-bf-99-e4-b8-aa-e4-ba-ba-e8-af-b4-e7-9a-84-e5-a5-bd-e6-9c-89-e9-81-93-e7-90-86-e5-91-a2/","excerpt":"","text":"你是要成为盖世英雄的人，注定不可以拥有爱情。 所以收起你的悲伤，背上你的行囊，在注定孤独一生的道路上绝不回眸。 虽然远方，依旧是远方。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"}]},{"title":"写作","slug":"e5-86-99-e4-bd-9c","date":"2016-04-20T07:55:21.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/20/e5-86-99-e4-bd-9c/","link":"","permalink":"https://blog.yanng.io/2016/04/20/e5-86-99-e4-bd-9c/","excerpt":"","text":"从小学到现在，写过诗歌、散文、随笔、小说，却无一例外的存储于私密的空间里，直到建立了这个属于自己的博客。这算是一个半私密的空间，谁都可以来，却无意让更多人窥见。相较于此，我却从未发过微博长文、朋友圈及QQ空间等这一类更容易被人看到的地方。 这大概是基于这样一种矛盾的心理：不想让自己暴露在大庭广众之下，却想被不算熟识的人窥视着。 写作是一种反刍，分享的过程。如果单纯的反刍，勾画在心里，或者纸上就够了。既然已将它构建在成熟的文字中，又曝光在网络上，便带了阐明观点，求取认同的意味。自然是希望有人来读，有人来看的。 可是一旦被人看了，又觉的想把内心最隐秘的私处，赤裸裸地呈现给他人似的。 小学的时候，我写过一首打油诗，讽刺班主任下课拖堂的现象。后来被班主任的丈夫，也是我爸爸的朋友，给骗了去。后来每次看到这个班主任的觉得很有些尴尬，有些害羞。班主任也没有对我说过些什么，也许没看，也许只把它当作小孩子的戏言。但在我这里看来，确实有种被人看光了的感觉。 从那以后，我写的诗都写在日记里，再也没有给别人看过。 诗是只属于青春年少时期的产物，耐不住性子写大段的文章，怀揣着丰盛的愁感需冀宣泄。便常在课间，午睡后，晚自习上，考卷下写下零零散散的文字，只需要一根笔，一张撕下的书角，便可承载着一个青春的懵懂心境。不担心被谁窥视着，不担心被谁发现。别人亦未必能真正理解，青春年少时那天马行空的想象。几个句子便连成一首诗，几首诗便构筑了整个的童与青春。 大学之后，便再也写不出诗来了。理性思考的结果，是意念的直接达成，真正地想什么便写什么，不再有闲暇余裕去在脑中转无数个圈。那些朦胧的说不清的感念，也只能蕴集在毫无想象力的小说里。 小说写得多了，亦是愈来愈缺乏想象力。所谓自己构架的故事，其实质其实是许多曾经读过看过的故事的集合。灵感既来源于自己的故事，亦来源于他人的故事。当所有的别人的故事在脑中混着混着混不清了，变成了自己的故事。 好在我写小说的要旨从不在于讲故事，而是借角色的口，说出我想说，却不知该怎么说的话。 诸多年过去，我的小说随笔仍旧带着年少时诗歌的那份随性。不喜欢打草稿，构建提纲；小说没有一个明显的主线亦或主旨，所有的所有，都不过随心而至。我也常常会埋怨自己为何在故事的结尾就偏了题。 毕业之后，留给小说的时间寥寥无几，那些开了头的，未及完成的也全部搁置。偶尔也会心血来潮，把那些存留着的，统统看过一遍，随性接上两笔。慢慢已望不出最初的设定心绪，只当一个单纯的故事来看了。 写作，无论是年少时期的诗，大学之后的小说还是现在的博文，无论是写他人的故事，还是自己的故事，写出来的都是自己。毕竟，我不是那些职业写故事的作家，我能写的，也只有我自己。 这个自己，是有表现欲的，亦是害羞的；是高冷的，亦是希望有人能认同的。 于是我的笔，我的文，亦都是基于着这样一种欲遮还羞的意欲：想让人看，又不想让人看；宁可让全然陌生的人看，也不想让熟识的人看；宁可暴露给素不相识之人，也要与相熟的人保持内心的距离。 有时会觉得，生活中的自己，与博客里的自己并非一个自己。可是究竟哪一个才是真正的自己，我已然辨不清了。 摘自 叶夕青兮 （http://yexiqingxi.com/）","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"未分类","slug":"未分类","permalink":"https://blog.yanng.io/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"}]},{"title":"一系列朋友圈评论引发的思考","slug":"e4-b8-80-e7-b3-bb-e5-88-97-e6-9c-8b-e5-8f-8b-e5-9c-88-e8-af-84-e8-ae-ba-e5-bc-95-e5-8f-91-e7-9a-84-e6-80-9d-e8-80-83-2","date":"2016-04-13T18:50:37.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/14/e4-b8-80-e7-b3-bb-e5-88-97-e6-9c-8b-e5-8f-8b-e5-9c-88-e8-af-84-e8-ae-ba-e5-bc-95-e5-8f-91-e7-9a-84-e6-80-9d-e8-80-83-2/","link":"","permalink":"https://blog.yanng.io/2016/04/14/e4-b8-80-e7-b3-bb-e5-88-97-e6-9c-8b-e5-8f-8b-e5-9c-88-e8-af-84-e8-ae-ba-e5-bc-95-e5-8f-91-e7-9a-84-e6-80-9d-e8-80-83-2/","excerpt":"","text":"看似不经意间的斗智斗勇，其实都暗含着许多想要诉说的往事 随手发了一篇刚从订阅号里瞟了几眼的文章，先抛弃文章是否有标题党的行为，其实就只是想用文章标题在朋友圈表达一个隐晦的想法。 男生撩了一半不撩是为什么？ 这本是个有趣的话题，并能引发各种讨论和想法。观点最冲突的就属男女双方，在这种问题上，男生和女生的观点最具争议、最分歧。所以该公号（_badguy_）作者非常聪明的标题党了一波，为了增加访问量，确实做足了工夫。 这个课题无论男生还是女生都具有发言权，男生有男生不撩的借口，女生有女生不理解的怨气。虽对于这件事男女都有话语权，但看法都不尽相同。 这事对于女生来说 “_简直不能容忍，有本事以后永远也别联系我！_” 在女生看来，撩到一半却又不撩了，就是男生变心了，女生的心非常脆弱，也特别爱多想。所以男生一旦停止了撩，开始可能会各种安慰自己，“也许他比较忙顾不上理我”。再到后来会有些气愤，“玩老娘呢？”。最后就是失望，“要是不联系我，我也不会再主动联系你”。这时男生以前说过的所有的诺言都成了放屁，会失去所有对男生的好感，最后给贴一个渣男的标签。女生们会把男生的这一行为定义为背叛，而背叛者往往都没有好下场。 对于男生来说呢，其实可以分成两类 一类就是那种女生口中的渣男，做事从来不用负责的，干完一件事不把屁股擦干就走人。这种简直就是人渣中的人渣，咱另当别论。 另一类男生就是今天要说的，他们的行为和“渣男”没什么两样，也是撩到一半不撩了，但他们做事负责，乐观积极，生活态度向上。 但为什么突然不撩了？因为他们越来越觉得配不上自己心爱的人，撩的目的其实是想给对方增加好感，但越深入的同时，他们会觉得自己不够好，现在的自己不足以给她更多的快乐。所以他们陷入了深深地纠结与反省。觉得更需要把精力都放在沉下心来努力让自己变得更优秀，而不是用在撩对方上。所以，当精力都放在“修炼”上面时，撩的工作就不得不暂时放下。另一方面也是怕撩，因为就是觉得自己不够好，连撩都觉得没有了底气，所以躲开自己，躲开所有人，继续撩下去只会加重那种奇怪的“屌丝”心理，只会更加自卑。干脆一不做二不休，停止一切花花公子的撩妹技能，好让自己变得和一个匠人一般的有真本领。这样才能在内心里对得起自己，对得起自己撩的姑娘。 这种男生的心理可能会有些幼稚，外面的人可能叫这种人屌丝。但感情里，最深情也最真情的恰恰就是那些傻傻的屌丝。凭什么看不起屌丝？有些人的心里连基本的伦理道德都没有，有什么资格嘲笑别人是屌丝？为什么人人都不愿意做屌丝？屌丝其实最值得所有人学习的地方就是单纯的愿意为自己喜欢的事物付出一切。一般人可以做到吗？不能，他们很“聪明”，聪明到自己不会受到一点点伤，聪明到把自己活成了一个傀儡都还在洋洋得意的在大街上大摇大摆恬不知耻的走着。 这次朋友圈评论看起来是一场似撕逼又不是撕逼的对话，我感悟到了很多很多。那句“认真撩，负责的撩”我相信是她打心底对我说的，我永远会记住，记一辈子不会忘。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"},{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"掉粉分析","slug":"e6-8e-89-e7-b2-89-e5-88-86-e6-9e-90","date":"2016-04-13T17:13:46.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/04/14/e6-8e-89-e7-b2-89-e5-88-86-e6-9e-90/","link":"","permalink":"https://blog.yanng.io/2016/04/14/e6-8e-89-e7-b2-89-e5-88-86-e6-9e-90/","excerpt":"","text":"掉粉分析几乎每天都在掉粉 也不知道具体是什么原因 大抵有几种原因是我能感觉到的： - 推送时间太不规律 （_推送完全看心情和工作安排，时间总是不固定，没有文章的时候也总发一些图片来应付_） - 推送模式太单一 （_没有段子，文艺，古风，诗歌等多风格交叉推送，就像一个礼拜只吃馒头不吃米饭一样_） - 推送内容有些枯燥 （_人们是抱着看段子的心态去看文章的，却看了一些自认为看不懂的东西_） - 互动不够频繁 （_只是单纯的一些简单的互动，达不到黏粉效果_） - 没有干货 （_粉丝在后台获取福利唯一就是可以查到课表和成绩，并没有特别吸引人的干货_）","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"难道写不出东西真的跟读书少有关？","slug":"e9-9a-be-e9-81-93-e5-86-99-e4-b8-8d-e5-87-ba-e4-b8-9c-e8-a5-bf-e7-9c-9f-e7-9a-84-e8-b7-9f-e8-af-bb-e4-b9-a6-e5-b0-91-e6-9c-89-e5-85-b3-ef-bc-9f","date":"2016-03-14T04:17:01.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/03/14/e9-9a-be-e9-81-93-e5-86-99-e4-b8-8d-e5-87-ba-e4-b8-9c-e8-a5-bf-e7-9c-9f-e7-9a-84-e8-b7-9f-e8-af-bb-e4-b9-a6-e5-b0-91-e6-9c-89-e5-85-b3-ef-bc-9f/","link":"","permalink":"https://blog.yanng.io/2016/03/14/e9-9a-be-e9-81-93-e5-86-99-e4-b8-8d-e5-87-ba-e4-b8-9c-e8-a5-bf-e7-9c-9f-e7-9a-84-e8-b7-9f-e8-af-bb-e4-b9-a6-e5-b0-91-e6-9c-89-e5-85-b3-ef-bc-9f/","excerpt":"","text":"突然发现，原来最好用的记录想法的工具是iPhone自带的备忘录。 有自己的博客网站，也有自己的微博，还有自己的微信公号。但就是找不到一个能记录自己想法的地方 首先剖析一下各种原因（除读书少之外）顺带解释为什么iPhone自带备忘录是最好用的工具。 我之前总是致精力于如何打造一个外观精美的网站，或是寻找更多内容相关的平台，好让我有地方可以完成一些分享和写作之类的事情。但网站的主题换了一个又一个，总有不满意的地方，也不懂代码，无法改掉一些元素，所以总是在不断地给自己的网站换模板，内容方面一页基本就装满了。还有就是为了满足好奇心，在各大网站都有属于自己的平台，但同样无奈的是：平台很多，内容方面依旧少得可怜。 那么从以上可以看出，我放了更多的精力在平台的搭建和功能方面的完善，并没有在内容上将平台填满。就好比我花费了大量时间，只做了一个非常好看的花瓶，却没有在里面插一些花进去。那么，再好看的花瓶，没有花它依旧起不到花瓶应该起到的的作用。 所以iPhone自带的备忘录就很好的解决这一问题。对于我这种特别注重文章排版的人，一篇文章写的同时就总想着排版。我们说搞创作时千万不能分心，但我写的同时还在不断的注意排版是否合理美观，那创作时想要表达的东西还能不能完全写出来？我想答案一定是否定的。用iPhone自带备忘录码字的时候就不用注意各种排版问题，码字就安心码字好了，排版那是过后的事情了。 接下来再说说我之前刻意追求平台的功能完善的想法。虽说我在功能实现方面浪费了大量的精力，但我觉得这也是一种积累，从接触博客以来，我就慢慢弄懂了很多有关网页开发这些小白看来「高大上」的东西。本来好奇心就重，也爱折腾，有股程序猿的那种轴劲。所以这些东西即使通宵达旦也觉得异常有意思，不知道我周围还有没有这样的人，不过我觉得这种人一般都是耐得住寂寞的，但也挺悲哀的。 我们说美感这种东西虽然抽象，但每个人都有美感，都在追求美。所以努力让平台看起来简洁好看也不是做的无用功。不然就不会出现UI设计师，文章也可以不用排版就可以随意发出去，房屋也不用装修的很漂亮。 不过话又说回来，创作时真的希望能够专心，没有任何杂念的一气呵成。不然很容易让一闪而过的思路飘得无影无踪，想追回来又不知到何时。不过，创作最重要的还是内容的丰富，不仅结构要清晰，意思表达明了，还要使用一些更准确专业的词语来形容，使文章看起来更加有文采和专业，也更能让人信服，更多的优点就不一一赘述了。 读书永远是人类进步的主要途径也是需要具备的基本能力 和书做朋友，让内心强大，大到可以装下整个世界的喜怒哀乐、恩怨情仇。 回到题目的问题，难道写不出东西真的和读书少有关？ 我想，答案应该是肯定的。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}]},{"title":"从想写作到会写作，你该怎么做？","slug":"e4-bb-8e-e6-83-b3-e5-86-99-e4-bd-9c-e5-88-b0-e4-bc-9a-e5-86-99-e4-bd-9c-ef-bc-8c-e4-bd-a0-e8-af-a5-e6-80-8e-e4-b9-88-e5-81-9a-ef-bc-9f","date":"2016-02-20T05:00:17.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/02/20/e4-bb-8e-e6-83-b3-e5-86-99-e4-bd-9c-e5-88-b0-e4-bc-9a-e5-86-99-e4-bd-9c-ef-bc-8c-e4-bd-a0-e8-af-a5-e6-80-8e-e4-b9-88-e5-81-9a-ef-bc-9f/","link":"","permalink":"https://blog.yanng.io/2016/02/20/e4-bb-8e-e6-83-b3-e5-86-99-e4-bd-9c-e5-88-b0-e4-bc-9a-e5-86-99-e4-bd-9c-ef-bc-8c-e4-bd-a0-e8-af-a5-e6-80-8e-e4-b9-88-e5-81-9a-ef-bc-9f/","excerpt":"","text":"文/夏苏末 自我开始写字，文章被各平台转载之后，陆续收到许多邮件和私信，有不少热爱写作的人希望获得写作经验。说实话，这样的请求让我感到为难，写作没有捷径可言，非得找出取巧的方法，就是多读多想多写。这个结论让很多初学写作的人觉得难接受，所以，我把自己理解的“三多理论”、如何投稿以及写作中的心态调整写下来跟大家做个分享。 当然，我所说会写作指的是杂志投稿、文字出版等范畴内的写作，不包括自我娱乐式的文字记录。 1 掌握写作的“三多理论” 热爱写作的人通常都是心里有表达欲望的，当无法用文字准确描述心底要抒发的情绪时，显然是个糟糕的体验。知名作家陈丹青先生说过这样一段话：“读书有两个作用，一是让我自以为非，二是让我有一间自己的房子，有自己的内心世界。”阅读本身并不能帮你解决现实生活里的难题，它能提供你的是：无论你身处怎样的低谷，都有直面困难、治愈自己的毅力和勇气。 所以，你想要写作，想表达清晰，首先要学会多读书。 当然，读书的好处远不止这些。读书重要，读后感更重要，有的人看书囫囵吞枣，一本书读完收获甚微。我热爱读书，也爱做读书笔记，在看书过程中遇到喜欢的句子习惯随手摘抄，遇到困惑的段落也会把它抄下来，再附注自己的困惑和理解，隔天就翻它出来重读一次，直到理解为止。每本书读完以后，我会认真写下书评，将学到的知识点和自己的理解记录下来，然后结合现实理清自己的不足。 至于图书的选择，我通常是荤素不忌的，从不以自己的兴趣和爱好做选书标准。如果你不知道怎么做选择，不妨去当当、亚马逊等网站的图书榜去找，能经得起时间检验的图书都有值得学习的地方。如果你想看提高写作的专业书，我推荐雪莉·艾丽斯《开始写吧！》和多萝西娅·布兰德的《成为作家》。 做好了知识储备和思考，最后剩下的问题就是练笔了。你要写什么，怎么去写，怎么起标题，内容是平铺直叙，还悬念跌宕，都不是一蹴而就的事，需要反复的练习和琢磨。一句话，想要进步，多写多写多写！ 2 如何给杂志和出版社投稿？ 杂志投稿 尽管我们每天都能听到纸媒没落的声音，但不可否认这也是其去芜存菁的过程，好杂志还是存在的。每本杂志都有自己的风格，作为新人的你，一定不要盲目。选定某本杂志，先看杂志的约稿函，看看有没有自己能写的栏目，通常约稿函下都有编辑的联系方式，你可以去勾搭一下，跟编辑要下样稿（有的编辑会在空间贴出样稿供作者参考），有好的构思可以简单直白地跟编辑交流一下，其他时间尽量不要打扰，默默地写好投稿就好。 有很多作者习惯写一部分内容就着急给编辑看，这种行为很不礼貌。编辑每天面对很多作者，你把没写完的稿子给人看，就是在浪费别人的时间。有一些作者，喜欢跟编辑攀关系卖萌，这也没用，在大部分编辑眼里，你写不出成绩之前的一切不靠实力地刷存在行为都是耍流氓，你想让编辑为你感到惊喜，答案只有四个字——勤奋写稿。 稿子写完别着急投稿，自己先校对一番，修改错字做好排版。给一本杂志投稿的频率保持在每月一到两篇为最佳，有些稿件编辑会建议你做修改，如果修改一遍仍然不能过稿，我建议你果断放弃，再重新写一篇。 图书出版 如果你想出书，过程就相对漫长和复杂了。图书出版分自费和公费两种，前者是作者本人自掏腰包负责图书出版的所有费用，后者通常是图书公司或出版社编辑主动联系作者并奉上稿酬，前提是你不仅有内容还要有相应的读者基础，直白说就是你得有人气。 那么问题来了，你要怎么经营自己呢？ 我的方法是选择平台发表文字积攒人气，简书、豆瓣、知乎、犀牛故事、片刻等都是不错的选择，选择其中的一两个（你问我为什么不全选？很简单，贪多嚼不烂啊）不定期地发表文章（当然你能天天更新实在很nice)。当你处于透明状态的时候，千万别气馁，要有耐心，最多三个月你的坚持就会初见成效。继续坚持下去，当你的文章开始被大V号转载时，你会被邀请到各种群，渐渐认识许多志同道合的朋友，也会吸引到小部分的编辑。 当编辑主动联系你时，你出书的梦想就实现了一半。接下来的问题，就是上报选题给编辑，等待审核。选题就是整本书的框架，包括内容简介（书名、章节标题、样张）、作者简介和市场分析。 3 写作中的心态调整 创作过程中遇到瓶颈是写作中最常见的状态，在这种时候，我都不会勉强自己，而是选择做些其他事舒缓压力，做手工，去散步，或者跟朋友聊天，总之当情绪趋于平静，再重新回来，要么阅读要么创作。 另一件让人困扰的事就是面对外界的评价。当你的文章被广泛转发后，越多的人看到反馈给你的信息就越多，经常会收到各种批评谩骂的信息，难免会觉得受挫，心想我不偷不抢不以盈利为目的，也没有强迫别人，为什么会得到这样的对待。我们这样想的时候，大部分是以自己的感受和利益为中心，但凡事都有两面性，有人诋毁就有人赞美，我的做法是转移自己感受的焦点，多看好的一面，看着那些因为我的文字而受到启发而让自己变得更好的读者，心里顿时觉得好满足，自己也有了坚持下去的动力。 最后一点，如何看待自己的不完美，写字的人大多有完美主义情节，我也是。以至于，当写出的文章不能让自己满意的时候，我会焦躁到怀疑自己。后来我在执行规划表的过程中，逐渐体会到，执行才是创造价值的根本。于是，我不再把精力用在构思细节上，而是落实到写作中，边写边完善构思，反而渐渐释怀，不再纠结是否完美。 关于写作，以上是我全部的经验，希望能对你有所帮助，也祝你从想写到会写。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"看完了张小龙的 2359 条饭否日记","slug":"e7-9c-8b-e5-ae-8c-e4-ba-86-e5-bc-a0-e5-b0-8f-e9-be-99-e7-9a-84-2359-e6-9d-a1-e9-a5-ad-e5-90-a6-e6-97-a5-e8-ae-b0","date":"2016-01-29T01:40:36.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/01/29/e7-9c-8b-e5-ae-8c-e4-ba-86-e5-bc-a0-e5-b0-8f-e9-be-99-e7-9a-84-2359-e6-9d-a1-e9-a5-ad-e5-90-a6-e6-97-a5-e8-ae-b0/","link":"","permalink":"https://blog.yanng.io/2016/01/29/e7-9c-8b-e5-ae-8c-e4-ba-86-e5-bc-a0-e5-b0-8f-e9-be-99-e7-9a-84-2359-e6-9d-a1-e9-a5-ad-e5-90-a6-e6-97-a5-e8-ae-b0/","excerpt":"","text":"著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。 作者：邓棵 链接：http://zhuanlan.zhihu.com/spacekid/20539834 来源：知乎 Allen 是个低调到可怕的人，迷の男人。 Allen 在饭否上的名字是 gzallen，广州艾伦，头像和他早已清空的微博一样，来自于 Leonard Cohen 一张名为 Recent Songs 的专辑。gzallen 其实并不是 Allen 注册的第一个饭否帐号，早在 07 年 6 月 4 号，他就注册了一个叫 allen 的帐号并写了 454 条饭否。饭否被封后这个帐号也就弃用了，直到 2010 年 11 月 26 日（饭否恢复运营第二天），和菜头把他拉来注册了 gzallen 这个新号。从那天起直至 2012 年 4 月与和菜头一同离开饭否，他一共写了 2359 条饭否，他的微信版本也从 0，变为了 4。 于饭否写日记的这一年半的时间里，几乎没有人知道他就是张小龙。 没有人察觉到他就是那个一个人熬着夜就撸出了 Foxmail 这种神级产品，又正凭着一己之力让微信成为月活 6 亿产品的灵魂人物。 没有人怀疑过他只是一个喜欢玩 Osmos、喜欢用 Instapaper 和 Filpboard、憎恶微博，关心着 Apple 产品和 Twitter，一个平淡无奇的、熬夜成瘾的、半夜听歌又抽烟到 4 点半还不睡觉的、使用着 gzallen 这种完全不会给人留下任何印象的昵称的 iOS 程序员。 对于这样一个沉默战士，和菜头发表过一次不具名评价： 看见别人家院子里的怒马即将破空而出，踏杀天下人，却无人知晓，自己还是觉得很欣然。 2011-05-26 00:34 时间过去了 5 年，现在你已经找不到 Allen 这个人了，你找不到他的微信，他的微博、知乎、Twitter 和 Instagram 也早就不再更新。微信已然从被指责抄袭 Kik、Talkbox 的阴影中走出，成为了家喻户晓的产品，成为了国家级互联网战略性杀手锏，allenzhang 这个 ID 已经被腾讯高级副总裁张小龙取代；名为 gzallen 的饭否帐号也早就被人遗忘在角落里，如果不是王兴用你们点外卖住如家的钱养着部署着饭否的服务器，可能连这个角落都没有了。 时间过去了 5 年，微信红包照片再次点燃朋友圈，不出意外的话除夕之夜张小龙还会在朋友圈里放一把火。王兴对此评价说，「想起 CNN 创始人泰德特纳在自传里曾略带夸张的炫耀：我可以在一个小时之内使亚特兰大全城烧起来。」冯大辉说，「毫不夸张的说，微信是中国互联网过去五年来的唯一一款世界级的创新产品。」中国的互联网，人们迫切需要一个乔布斯一样的神话，此刻的张小龙已经被人们推到了这个位置，然而他却成为了一个迷一般的神。如果不是年初的首次公开演讲，可能很多人对他的认识仅仅还停留在知道名字上。这位低调的湖南人的身上贴满了这样的标签：沉默寡言、谦虚纳言、玄学、腾讯的战略威慑武器。 时间过去了 5 年，怒马早已横扫战场、踏杀天下人，这个神话背后的秘密，就是没有秘密。在 Allen 的饭否，你看到的是一个完整的、自由的、真实的 Allen，会聊天、会卖萌、会抒情、会写诗，会写段子、会谈论产品，会随手拍照，还会骂人。 马了个壁的。 2010-12-17 00:07 没有烟了。睡去。 2010-12-17 03:19 哥做的不是产品，哥做的是发挥潜力的自由。 2011-01-28 00:48 在这里，你会目睹微信这个产品从无到有，因为这里记载了他打造微信 1.0、2.0、3.0、4.0 的所有思想历程。他会为微信是否该有已读未读态，从 2010 年一直纠结到 2011 年；他会每天关心人们怎么用 Talkbox、Kik、Whatsapp 和米聊，他会在微信第一个版本发布半个月后就想到开发基于 LBS 的功能，他会面无表情地 mark 着微信的数据，2 亿 / 天，4 亿 / 天。 第一个app终于于昨晚提交了上架申请。 2011-01-13 18:27 考虑到多数人可能没有饭否帐号，张小龙饭否摘录已经以附录的形式附在文末。 我很开心看到并分享这一切，因为这个产品最终成功改变了大众的沟通方式，也因为这个产品没有被其他产品经理接手。我更开心，在这样造神运动结果的背后，其实是一个鲜活的、孤独的、认真的人，他让我感觉亲切，不仅因为他长有一副憨厚的大叔脸，不仅因为他与我同籍，更因为他就像是你，像是我，像我们身边的每个人。 If you don’t have a WeChat, well, you don’t have a WeChat. 以和菜头的一句话作为结尾： 如果世界上又出现了什么新鲜的 App 应用， 在发布后的 48 小时之内， 如果你也下载尝鲜， 可能你会遇到个名叫 Allen 的人， 如果这人沉默不语，甚至连头像都没有。 那么你也许已经遇见了张小龙。 图片来源：leiphone.com 张小龙饭否摘录 张小龙谈自己 gzallen是机器人。 2010-12-15 16:27 我进到饭否就说饭否上该说的话，进到微博就说微博上该说的话，回到办公室就说办公室该说的话。我不敢说自己有想法了，想法全是环境催生出来的。 2010-12-27 15:11 我智商高的时候，情商就低。情商高的时候，智商就低。两个一样高的时候，我就双高了。 2010-12-29 01:20 to be a better man 2011-01-21 17:50 这么多年了，我还在做通讯工具，这让我相信一个宿命，每一个不善沟通的孩子都有强大的帮助别人沟通的内在力量。 2011-01-23 01:54 等我老了，我希望拥有leonard cohen的声音。 2011-02-04 00:31 我为什么能起得这么早？ 2011-02-18 10:30 哥喜欢的不是产品，是战争。 2011-05-13 15:27 人要成功很难，比成功更难的是，知道自己的成功是偶然的。 2011-05-13 15:28 Think Different！我经常用这句话来提醒自己，我没有乔老爷的才，一定不能因为要think different而走火入魔。 2011-08-25 23:27 面试产品经理，所有技能合格后，要问，你喜欢摇滚吗。回答否的，就算了。 2011-09-14 14:51 我在生活上不是一个有洁癖的人，但对待产品却分毫必究，介大概就是传说中的精神分裂吧。 2011-09-19 21:50 看到和菜头爆料腾讯，那个张什么龙貌似牛X闪闪啊，有空要去拜访一哈 2011-10-19 13:12 石头剪刀布是我的杀手锏。mark。 2011-11-04 03:04 多少艰苦不可告人 2012-04-01 18:43 张小龙写诗 此恨绵绵有时尽，花开花谢无绝期。纯拼字。 2010-12-19 01:04 古今多少事，尽付笑谈中。如今多少花，都在风雨中。 2010-12-22 02:32 去年今日此门中，回眸一笑百媚生。拍照秘笈。 2010-12-27 16:01 春花秋月有时了，冬虫夏草无尽时。 2011-01-17 19:46 张小龙写段子 你强烈反对的，一定是你自己也拥有的。—艾伦仁波切 2010-11-28 02:02 距离就是，你发一条微博，这条微博要途经北上广，进出九九八十一台路由器，中间还要被拆包解包合并包，被两百个CPU进行过处理，再显示在我的电脑上。而你明明坐在离我几米的地方。 2010-12-22 15:54 古人爱月，今人爱日。古人借月抒情，今人日日抒怀。 2010-12-23 18:24 需要多么强大的内心，才能看破红颜啊。 2010-12-26 18:59 月亮代表我的心，意外怀孕怎么办？路边野花不要采，意外怀孕怎么办？怕什么戒律清规，意外怀孕怎么办？树上的鸟儿成双对，意外怀孕怎么办？ 2011-02-13 01:25 更快，更高，更远。不是奥林匹克，是蚂蚱。 2011-02-15 23:33 多情之人看到情薄，多事之人看到事多。 2011-02-25 01:55 萌是第一生产力。 2011-10-15 06:29 张小龙谈产品 还是你们用户爽，哪里爽到哪里，苦的是做互联网的，要整天分析你们的阴暗心理好让你们更爽，还不能明说。 2010-11-27 23:18 一个产品，要加多少的功能，才能成为一个垃圾产品啊！ 2010-11-27 23:24 如果说产品做的一切都在满足用户的虚荣，热闹，逃避，贪恋等，那么，大众同样都有受虐的心理，为什么不做一款产品去虐待他们？ 2010-12-06 00:47 网络尚未普及的时候，产品必须依靠功能多来取胜，并且产品是自成一体的。网络普及后，才催生出一种新的产品形态：产品极简，反而有利于在网络这个大生命体中自我繁衍，并且产品是面向连接的。 2010-12-15 16:03 好的网络产品，必然是无法预料其会不会成功的。成功的产品，刚好是“碰巧”成功了。但这个碰巧并不是创造者的运气，而是，这个产品刚好能在网络生命体中生存和繁殖。就像我们无法知道一个小孩为什么成长如此迅速一样，我们无法知道一个网络产品为什么会成功，即使做的人，也应该感谢主。 2010-12-15 16:06 一个被人预见必然会成功的产品，必然会是个失败的产品。成功的产品是不能预见的。至少，是不能被人所预见的。机器来预见还有可能。 2010-12-15 16:11 漂流瓶让我体会到群体的伟大：它的行为模式在我们的预想之外，我们自己也无法完全理解。如果非要分析，倾诉和期待回应（交友）还是第一位的。 2010-12-16 01:56 让人没有成就感的是，我们随便搞一个简单的游戏，比如扔石头看谁扔得远，都会参与者众。如果再辅以按省市区排名，就会火爆。 2010-12-23 14:35 互联网产品应该是由用户推动，而不是产品经理来推动。产品经理的作用只是找到四两拨千斤的地方稍微用点力。这方面，饭否给了个表率。这么久以来，他们只是添加了“测试版”三个字，其它什么都没变。对此，我很感动。 2010-12-25 18:14 流通正在取代内容本身，内容变得更小更方便传播。mp3取代唱片，微博取代书本，短信取代信件。我怀疑有一天，微小的内容也没有了，大家直接通过网络交换荷尔蒙。 2010-12-27 13:26 整天将KPI挂在嘴上，以KPI为目标来工作的leader，都是不合格的，庸俗的，没有想法的，令人痛苦的，无法言语的。 2010-12-27 15:27 同意。请各部门按此落实执行。转@和菜头 公司里，凡是有老板参加的会议就拼命发言的人，凡是有抄送老板的邮件就拼命回复的人，直接炒掉根本不会影响任何业绩，而且团队的开心度上升了。 2010-12-31 17:19 你问我们和竞争对手比有什么区别，我说我们没有他们那些臃肿艳俗的部分。 2011-01-02 15:20 如果有这样一个网站，号称数据放在月球，服务器放在卫星上，太阳能供电，永久运行，100年没问题。因此，你写的任何记录都会永久保存。不知道会不会很多人去用。 2011-01-04 19:31 每次看到我们产品中提示“xx操作已成功完成”“消息已成功发出”的“成功”二字，我就很头大，说了很多次还是出现，今天就下死命令产品中不可以再出现“成功”二字。我有文字洁癖，还是走火入魔了。“消息已成功发出”，搞得好像还有不成功发出的消息似的。 2011-01-17 15:28 从众多的kik模仿犯来看，国内基本没有从用户心理考虑产品的产品经理。除了模仿，他们的创新也是意淫。 2011-01-17 17:42 心有千千结，每种结都是一个产品。关系千万重，每种关系都是一个产品。未来世界，应该是每个人都会做一个十个用户的产品的时代。 2011-01-18 12:41 在两列火车擦肩，就要相向而过的刹那，他和她掏出手机，挥舞，终于，他们交换了微x号码。广告就这么拍了。 2011-02-17 00:52 互联网产品，好友是如何来的？必须是用户自己手把手拉来的。任何的批量好友导入，都是收效不大的。 2011-05-18 03:12 互联网的最终目的，是让关系学见鬼去。 2011-06-16 19:44 赞同。转@和菜头 要提防那些Blog写得好的产品经理，因为在Blog上花的时间越多，在产品上花的时间就越少。原来还以为有例外，现在看起来无一例外。 2011-08-08 22:06 做产品，就是跟用户谈一场恋爱，否则只是一场商业交易而已。产品人是多么的博爱啊。 2011-08-26 18:32 大部分的所谓创新，都是把问题搞复杂化而已。 2011-11-07 03:48 人是环境的反应器。微博像是一个环境，但它不会主动刺激人，所以是个伪环境。到微博看东西是不人性的，哪有到环境里逛逛再决定做什么的，那不叫反应。而是当环境发生了点什么事情刺激到人了，人做出的行动才叫反应。所以，微博之后，将是推送。 2012-03-05 02:44 张小龙与和菜头还有更多长篇累牍的版聊讨论产品的内容，篇幅限制恕不逐条摘录，请玉步饭否。 张小龙谈微博 “微博让人变傻”。今天一起吃饭的朋友也这么说。其实微博本身不会这么厉害。 2010-12-14 16:30 他人即地狱，那么，微博是地狱的复数。 2010-12-15 16:27 微博是洪流，看似波澜壮阔，里面都是沙子。 2010-12-16 13:21 微博是个穿衣服的地方，饭否是个脱衣服的地方。 2011-01-06 12:44 开复竟然写了本《微博改变一切》的书。我很佩服他竟然能就微博写出那么厚一本书出来。 2011-01-11 19:33 微博和饭否都是蒙太奇，但微博的镜头太过花哨和表演，饭否更纪实。 2011-01-15 02:01 饭否上能看到很多真实的情绪外泄，不像微博都是围观别人的苦难和炫耀。 2011-03-06 17:16 新浪错失了最好的一次机会，就是做微信类东西。 2011-05-21 14:41 突然我明白了，那些微博上收听一个人还要弹个框的烂体验，真实意图是，提高用户的收听门槛，让用户以后逐渐畏惧收听，来保持timeline的清爽。 2011-07-18 18:28 其他 每次看到知乎上人在讨论为什么启动画面是一个人顶个球，我就很乐。 2011-09-20 18:08 本文授权方式采用 Creative Commons「署名 - 非商业性使用 - 禁止演绎 4.0」许可协议。接受自由转载，但必须署名、注明来源，且禁止用于商业用途。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"优秀的用户运营需要具备的个人素质","slug":"e4-bc-98-e7-a7-80-e7-9a-84-e7-94-a8-e6-88-b7-e8-bf-90-e8-90-a5-e9-9c-80-e8-a6-81-e5-85-b7-e5-a4-87-e7-9a-84-e4-b8-aa-e4-ba-ba-e7-b4-a0-e8-b4-a8","date":"2016-01-28T08:00:58.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/01/28/e4-bc-98-e7-a7-80-e7-9a-84-e7-94-a8-e6-88-b7-e8-bf-90-e8-90-a5-e9-9c-80-e8-a6-81-e5-85-b7-e5-a4-87-e7-9a-84-e4-b8-aa-e4-ba-ba-e7-b4-a0-e8-b4-a8/","link":"","permalink":"https://blog.yanng.io/2016/01/28/e4-bc-98-e7-a7-80-e7-9a-84-e7-94-a8-e6-88-b7-e8-bf-90-e8-90-a5-e9-9c-80-e8-a6-81-e5-85-b7-e5-a4-87-e7-9a-84-e4-b8-aa-e4-ba-ba-e7-b4-a0-e8-b4-a8/","excerpt":"","text":"一个优秀的运营，由两部分因素组成：个人素质和工作能力。 工作能力，指工作所需的技能，如拉新、激励、留存。个人素质，指精神或性格方面的素质，如幽默开朗、勤奋好学等。 之前聊的是工作能力，这次说说个人素质。由于运营的概念太泛，本文聚焦在用户运营领域，需具备这些个人素质。 1.广泛的兴趣 运营应该是一群有趣的、对生活充满热情的、对世界充满好奇心的人，只有这样，他们才能向用户传递正能量、有趣、大开眼界的信息，从而吸引用户更好的与产品连接。这其实也是从更高视角，对用户运营的解读。 要做到这点，需要有丰富的知识储备，作为工作中的「弹药库」，随时按需索取。「弹药库」的来源，并非是目标明确的逐一攻破，而是平时接触的信息经过日积月累之后，组成的知识体系。 用户运营的对象是人，所以在各领域都有相通之处。比如做电影类app，不能只关注电影领域，因为电影还属于泛娱乐，娱乐和明星相关，最热门的明星又和粉丝群体有关，群体量级大、战斗力强的粉丝人群都是90后，90、95后又被二次元文化覆盖，所以做电影app，你能只关注星球大战小李子吗。 有一次我和上级讨论什么是好影评，他的观点是用户兴趣和内容美感的结合，所以我就问他内容审美能力是怎么修炼出来的，简单说就是看多了且有点天赋。这点并非是看书学习就能得出的结果，而是要有兴趣的关注身边的人和事，多去参与和思考。 回到正题，如果一个人有广泛的兴趣，就是做好这点的基本条件。如果你并没有那么「广泛」的兴趣，那么至少做到不排斥吧。当然，做好这点需要自己有方法来保证一个度，不要走极端。 2.换位思考的意识 和设计师沟通需求时，很多人都这么说：把这里和那里改一下就行，很简单的。 听到这些，设计师一定想把你一脚踢飞。首先，对于设计师来说，没什么「简单的」，哪怕只是活动页面的标题，都有设计的过程；其次，设计作品本是设计师的工作，你强调简单就等同于藐视人家的职业，好像设计师盼着简单的需求敷衍了事。 运营总希望获得产品、设计师、研发同事的支持，有些文章讲沟通方式和提需求的流程，都是狗屎，根本不是重点。关键是能否换位思考并找到共同利益点，照搬成熟流程没用。 接着说与设计师沟通的例子，最核心的就是设计师在乎什么，要找到共同利益点。我认为，设计出优秀的作品是一个设计师的正常追求，设计的背景和需求是来源于运营或产品，担心的是需求不明确、沟通表达不清晰和时间太赶，根本不担心是不是简单。 明白这个道理，给设计师合理的尊重和发挥空间，共同打造一个优秀的作品，展现给更多的用户，或为产品带来很好的数据效果，发挥了设计师的价值，也是相同的利益点。这只是一个例子，道理同样适用于与产品、研发同事的沟通。 我之前的文章曾写过，用户运营就是让自己成为用户，做自己喜欢的事。做到这点其实是非常难，所以到处充斥着反人类、无趣的活动设计和产品功能。换位思考，就是做好这点所需的个人素质。 3.人群特征的洞察 用户类产品的核心问题是：用户是谁，他们是一群什么样的人。 用户是谁，是指性别年龄所在地收入这样的属性，但知道这些是不够的，还需要洞察人群特征。人群特征的标准很难明确的列出来，而是通过一些明确区别于其他群体的行为描述出来，如： 喜欢听李志 疯狂找人拼单的海淘用户 女权主义者 电影《小时代》粉 逛知乎 两岁孩子的全职妈妈 锤子用户 每周去电影院看两场电影 这几条只是例子，也是分析得出的结果。获得这个结果的过程，需要去研究目标用户的群体特征，要求运营有这方面的素质。 举个例子，有次我去做分享，对方是做医生社交产品的。凭借对医疗领域的粗浅了解，我想到的只是医生人群不能全部放在一起，三甲医院的肯定会瞧不起非三甲的，更鄙视民营医院的医生。但他们告诉我更具体的是，三甲医院的医生也会从学术领域分派系，他们针对这些都会有相应的运营手段。这些就属于对人群特征的洞察。 再举个例子，刚来猫眼电影时希望引入影评人，我们就去微博和豆瓣上挖。发现可以挖来微博上一部分认证为「影评人」的用户，他们不要稿费也会来，但有一部分没有稿费就不参与。而豆瓣上的人很难挖来，有时还会把你给他发的豆邮截图并发出来，以此鄙视你。 后来发现这三类人都不是我们想要的用户，原因： 微博上不给稿费也来的认证影评人，他们的影评大多是与电影有利益关系的，其实这点也无妨，主要是质量也不好，用户不喜欢看 微博上要稿费的认证影评人，他们属于圈子里混出来那一批人，一般是出席活动、参与项目、应邀撰稿，不适合我们这种新生代平台 豆瓣的深度影评用户，对豆瓣平台非常忠诚（现在也差很多了），相对更矫情一些，成功率非常低 踩完上面几个坑，我们也见了各种类型的影评UGC用户，分析了他们的人群特征，给出了新的、更适用于我们的人群特征： 热爱电影，且与电影没有利益关系 文学爱好者，喜欢文字表达 更理想化，厌恶利益掺杂进电影的行为 作品优秀，但在其他平台知名度不高 这部分人群适合猫眼，原因是： 满足我们对优秀作品的要求 由于圈子不同，避免了其中的利益关系 热爱电影，与运营团队臭味相投 更愿意和猫眼平台共同成长 得出这个结论的过程是，走访多个类型的用户，分析后给出主观判断。详细说，就是穷尽我们认为的所有类型的影评人群，交流后分析他们的人群特征，比如性别年龄、哪里人（非所在地）、性格、三观、对电影的偏好、对电影大事件的解读、对影评平台的看法，综合这些复杂的特征总结出的经验，圈定了上述特征的人群。 洞察人群特征，主要靠运营的主观素质。提高这个素质的方法，试着关注和分析事件背后的有关人性和群体的原因，再结合一些书本理论。 推荐三本书，《乌合之众》、《引爆点》、《共享经济》。 老罗推荐的《美国种族简史》是讲各种族在美国融入的历程，也有讲群体特征，有共通之处，只是和上面三本类型不同。 4.执行落地的能力 从理论到落地只有一步，却有很多人迈不过去。因为了解理论和具体会做，完全是两件事。 这就是为什么我说看文章和听分享对实操没具体作用，不能寄希望通过这些事得出工作难题的答案，因为即便理论再详尽、再多案例，也只停留在纸面，也只在某种条件下成立。 看文章听分享也有用，但只是开拓视野、启发思路、储备知识，所以我写文章也只是希望能对大家有启发。 你肯定见过这种情况，一屋子运营在脑爆，有的同学海阔天空的滔滔不绝，有的同学总是低头陷入沉思。假设他们都在认真参与，那么前者就属于创意型运营，后者属于执行型运营。 脑爆结束达成共识，创意型运营拍屁股走了，执行型运营留下思考这个方案是不是有坑，第一步该从哪儿开始，预先做什么准备。 这就是两种类型不同的人才，团队需要这两类人同时存在，互补和互相促进。他们各自的思维方式和特长不同，如果互换两者的角色会让他们很痛苦。 如果只能从上述两类人里选出一名用户运营，我选执行型。别认为这块没有含金量，这可是从理论到结果的最后一步，而理论是很容易接触到和理解的，执行落地能力可不是这么简单。 执行型运营人才的特点： 逻辑性强，习惯分步规划 思维缜密周全 勤奋，有韧性 关注和追求细节质量 性格和思路偏保守 我知道凡是给人划分类型、列标准，都容易挨骂，这只是假设为非常典型的类型。偷偷说一句，虽然每个人都认为自己不是这样的，实际上我们最不了解的人就是自己。 所以，如果你是执行型人才，请你继续关注这个环节，并努力总结出自己的方法，发挥自身特长。 如果你认为自己不是执行型人才，而更擅长创意，可以试着做几个项目感受一下，然后选择更适合自己的岗位。 最后，一个优秀用户运营所需的个人素质，还有其他很多方面。比如： 超强的亲和力，更多体现在文字上 敏锐的直觉，对于热点和用户感受 灵活变通的做事方式 开放的心态，面对用户和新鲜事物 发散思维能力 对于这几点，我没什么更特别、更深刻的见解，就不详细展开了。再见！","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"}]},{"title":"阅读有多重要？","slug":"e9-98-85-e8-af-bb-e7-9a-84-e9-87-8d-e8-a6-81-e6-80-a7","date":"2016-01-19T04:38:25.000Z","updated":"2018-07-05T10:20:27.000Z","comments":true,"path":"2016/01/19/e9-98-85-e8-af-bb-e7-9a-84-e9-87-8d-e8-a6-81-e6-80-a7/","link":"","permalink":"https://blog.yanng.io/2016/01/19/e9-98-85-e8-af-bb-e7-9a-84-e9-87-8d-e8-a6-81-e6-80-a7/","excerpt":"","text":"在这浮躁的时代，如若你觉得你还不够优秀，那么你应该继续沉淀，最好多读几本书 长达一周的假期都宅在家里，感觉身体快要废掉，可脑袋里还是在不断的往出冒各种想法，晚上没有手机转移注意力脑袋估计会转炸。但睡不着也是因为手机里丰富的内容在不断给大脑灵感，使得大脑不断思考，貌似没有停下来的意思，这种感觉我受不了了。 接触的大多是很抽象的东西，可能是一些顶级创意，可能是一些常人做不到的事情，也可能是一些需要很多人一起才能完成的事情。所以，纵使大脑会有一些新奇的想法，总是近期没有条件实现，要么是自己能力不够，要么就是需要烧钱才能完成。大量的想法不能落地，总是在脑中占据空间，导致总觉得有事情还没有做，但想开始做又不知从何做起。这种状况我感觉糟透了，时间长了会变成不折不扣的拖延症晚期患者。 总想写点什么东西，但又感觉这个年龄太年轻，没有可以记录下来的，想等到经历过职场后，才有能力和资本来写一些别人也能看的东西，但又怕到时候连写东西的能力也会失去。 一些事情，当你觉得可以开始的时候那就赶快开始，不要在意你准备了多少，有些事情可能当你完全准备好的时候，最好的时机可能早就与你擦肩而过——王自如 所以，倒不如有多少感慨就记录多少，即使只有自己看，但日积月累的好处我想不用再给自己剖析了。 貌似我写的东西很白话，而且是大白话。没有用很多形容词，排比句倒是不少，还有通篇混乱不堪的文章结构。这就说明，我需要积累。 我感觉自己能写的方向只有两个。一个是随心日志这种的，里面有一些对人生的感悟，各种矫情各种鸡汤。另一个就是纯计算机网络技术方面的硬文，时而谈谈对互联网圈的想法，或是扒一扒哪个企业的历史，再有就是某个黑科技的科普。 说到黑科技的科普（想到哪儿说到哪儿），我真的很想搞一个这种科技名词科普性质的网站，名字就叫「科技锐词」貌似这还是个市场空缺，没人能够想到这。其实也是不想让更多的人对专业名词的不懂而对整个科技界望而却步，从而放弃享受更多科技带来的乐趣和便捷。一些人想弄懂一件事，从网上查到的解决方法里含有大量看不懂的名词，他就会放弃学习的欲望。所以导致了一种懂的人越懂、不懂的人更不懂的现象，而且懂的人也不知道怎样说才能让外行人更快的理解那些生硬的名词，就像你无法解释某个词的土话为什么要那样读，所以这会让好多事情变得无法继续开展下去。例子不胜枚举，我就不一一阐述。但让我头疼的是，一些名词，除了借鉴搜索引擎或知乎论坛等，我也不知道以一种怎样的方式才能让更多的人一看就懂。就是说我有「科技锐词」的想法，但开展方式仍然还没有头绪，只能这么先搁置，我却毫无办法。 所以，当一些想法仍然还只是停留在想法而由于自身能力不够无法开展时，我想，多读书可能是一个让想法落地最好的解决办法。 唯有沉淀，才可破晓。","categories":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"}],"tags":[{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"逼逼叨","slug":"逼逼叨","permalink":"https://blog.yanng.io/tags/%E9%80%BC%E9%80%BC%E5%8F%A8/"}]}],"categories":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/categories/%E5%89%8D%E7%AB%AF/"},{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/categories/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/categories/%E4%B9%A6%E8%AF%84/"},{"name":"影评","slug":"影评","permalink":"https://blog.yanng.io/categories/%E5%BD%B1%E8%AF%84/"},{"name":"种草","slug":"种草","permalink":"https://blog.yanng.io/categories/%E7%A7%8D%E8%8D%89/"}],"tags":[{"name":"前端","slug":"前端","permalink":"https://blog.yanng.io/tags/%E5%89%8D%E7%AB%AF/"},{"name":"hexo","slug":"hexo","permalink":"https://blog.yanng.io/tags/hexo/"},{"name":"文章","slug":"文章","permalink":"https://blog.yanng.io/tags/%E6%96%87%E7%AB%A0/"},{"name":"碎碎念","slug":"碎碎念","permalink":"https://blog.yanng.io/tags/%E7%A2%8E%E7%A2%8E%E5%BF%B5/"},{"name":"书评","slug":"书评","permalink":"https://blog.yanng.io/tags/%E4%B9%A6%E8%AF%84/"},{"name":"性","slug":"性","permalink":"https://blog.yanng.io/tags/%E6%80%A7/"},{"name":"Apple","slug":"Apple","permalink":"https://blog.yanng.io/tags/Apple/"},{"name":"偏执狂","slug":"偏执狂","permalink":"https://blog.yanng.io/tags/%E5%81%8F%E6%89%A7%E7%8B%82/"},{"name":"工业设计","slug":"工业设计","permalink":"https://blog.yanng.io/tags/%E5%B7%A5%E4%B8%9A%E8%AE%BE%E8%AE%A1/"},{"name":"苹果","slug":"苹果","permalink":"https://blog.yanng.io/tags/%E8%8B%B9%E6%9E%9C/"},{"name":"黑科技","slug":"黑科技","permalink":"https://blog.yanng.io/tags/%E9%BB%91%E7%A7%91%E6%8A%80/"},{"name":"写字","slug":"写字","permalink":"https://blog.yanng.io/tags/%E5%86%99%E5%AD%97/"},{"name":"思考","slug":"思考","permalink":"https://blog.yanng.io/tags/%E6%80%9D%E8%80%83/"},{"name":"安检","slug":"安检","permalink":"https://blog.yanng.io/tags/%E5%AE%89%E6%A3%80/"},{"name":"机场","slug":"机场","permalink":"https://blog.yanng.io/tags/%E6%9C%BA%E5%9C%BA/"},{"name":"灵感","slug":"灵感","permalink":"https://blog.yanng.io/tags/%E7%81%B5%E6%84%9F/"},{"name":"技巧","slug":"技巧","permalink":"https://blog.yanng.io/tags/%E6%8A%80%E5%B7%A7/"},{"name":"程序员","slug":"程序员","permalink":"https://blog.yanng.io/tags/%E7%A8%8B%E5%BA%8F%E5%91%98/"},{"name":"催泪","slug":"催泪","permalink":"https://blog.yanng.io/tags/%E5%82%AC%E6%B3%AA/"},{"name":"影评","slug":"影评","permalink":"https://blog.yanng.io/tags/%E5%BD%B1%E8%AF%84/"},{"name":"发布会","slug":"发布会","permalink":"https://blog.yanng.io/tags/%E5%8F%91%E5%B8%83%E4%BC%9A/"},{"name":"罗永浩","slug":"罗永浩","permalink":"https://blog.yanng.io/tags/%E7%BD%97%E6%B0%B8%E6%B5%A9/"},{"name":"锤子","slug":"锤子","permalink":"https://blog.yanng.io/tags/%E9%94%A4%E5%AD%90/"},{"name":"WordPress","slug":"WordPress","permalink":"https://blog.yanng.io/tags/WordPress/"},{"name":"运营狗","slug":"运营狗","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5%E7%8B%97/"},{"name":"Mac","slug":"Mac","permalink":"https://blog.yanng.io/tags/Mac/"},{"name":"微信","slug":"微信","permalink":"https://blog.yanng.io/tags/%E5%BE%AE%E4%BF%A1/"},{"name":"微博","slug":"微博","permalink":"https://blog.yanng.io/tags/%E5%BE%AE%E5%8D%9A/"},{"name":"写作","slug":"写作","permalink":"https://blog.yanng.io/tags/%E5%86%99%E4%BD%9C/"},{"name":"匠心","slug":"匠心","permalink":"https://blog.yanng.io/tags/%E5%8C%A0%E5%BF%83/"},{"name":"情怀","slug":"情怀","permalink":"https://blog.yanng.io/tags/%E6%83%85%E6%80%80/"},{"name":"逼逼叨","slug":"逼逼叨","permalink":"https://blog.yanng.io/tags/%E9%80%BC%E9%80%BC%E5%8F%A8/"},{"name":"看电影","slug":"看电影","permalink":"https://blog.yanng.io/tags/%E7%9C%8B%E7%94%B5%E5%BD%B1/"},{"name":"读书","slug":"读书","permalink":"https://blog.yanng.io/tags/%E8%AF%BB%E4%B9%A6/"},{"name":"kindle","slug":"kindle","permalink":"https://blog.yanng.io/tags/kindle/"},{"name":"剁手","slug":"剁手","permalink":"https://blog.yanng.io/tags/%E5%89%81%E6%89%8B/"},{"name":"开箱","slug":"开箱","permalink":"https://blog.yanng.io/tags/%E5%BC%80%E7%AE%B1/"},{"name":"数码","slug":"数码","permalink":"https://blog.yanng.io/tags/%E6%95%B0%E7%A0%81/"},{"name":"测评","slug":"测评","permalink":"https://blog.yanng.io/tags/%E6%B5%8B%E8%AF%84/"},{"name":"效率","slug":"效率","permalink":"https://blog.yanng.io/tags/%E6%95%88%E7%8E%87/"},{"name":"计算机","slug":"计算机","permalink":"https://blog.yanng.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA/"},{"name":"安利","slug":"安利","permalink":"https://blog.yanng.io/tags/%E5%AE%89%E5%88%A9/"},{"name":"极客","slug":"极客","permalink":"https://blog.yanng.io/tags/%E6%9E%81%E5%AE%A2/"},{"name":"折腾","slug":"折腾","permalink":"https://blog.yanng.io/tags/%E6%8A%98%E8%85%BE/"},{"name":"装逼","slug":"装逼","permalink":"https://blog.yanng.io/tags/%E8%A3%85%E9%80%BC/"},{"name":"音乐","slug":"音乐","permalink":"https://blog.yanng.io/tags/%E9%9F%B3%E4%B9%90/"},{"name":"段子","slug":"段子","permalink":"https://blog.yanng.io/tags/%E6%AE%B5%E5%AD%90/"},{"name":"iPhone","slug":"iPhone","permalink":"https://blog.yanng.io/tags/iPhone/"},{"name":"小米手环","slug":"小米手环","permalink":"https://blog.yanng.io/tags/%E5%B0%8F%E7%B1%B3%E6%89%8B%E7%8E%AF/"},{"name":"运营","slug":"运营","permalink":"https://blog.yanng.io/tags/%E8%BF%90%E8%90%A5/"},{"name":"产品","slug":"产品","permalink":"https://blog.yanng.io/tags/%E4%BA%A7%E5%93%81/"},{"name":"未分类","slug":"未分类","permalink":"https://blog.yanng.io/tags/%E6%9C%AA%E5%88%86%E7%B1%BB/"},{"name":"IP","slug":"IP","permalink":"https://blog.yanng.io/tags/IP/"},{"name":"互联网","slug":"互联网","permalink":"https://blog.yanng.io/tags/%E4%BA%92%E8%81%94%E7%BD%91/"},{"name":"变现","slug":"变现","permalink":"https://blog.yanng.io/tags/%E5%8F%98%E7%8E%B0/"},{"name":"网红经济","slug":"网红经济","permalink":"https://blog.yanng.io/tags/%E7%BD%91%E7%BA%A2%E7%BB%8F%E6%B5%8E/"},{"name":"心理学","slug":"心理学","permalink":"https://blog.yanng.io/tags/%E5%BF%83%E7%90%86%E5%AD%A6/"},{"name":"社交","slug":"社交","permalink":"https://blog.yanng.io/tags/%E7%A4%BE%E4%BA%A4/"},{"name":"学习","slug":"学习","permalink":"https://blog.yanng.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"成长","slug":"成长","permalink":"https://blog.yanng.io/tags/%E6%88%90%E9%95%BF/"},{"name":"创作","slug":"创作","permalink":"https://blog.yanng.io/tags/%E5%88%9B%E4%BD%9C/"},{"name":"平台","slug":"平台","permalink":"https://blog.yanng.io/tags/%E5%B9%B3%E5%8F%B0/"},{"name":"有病","slug":"有病","permalink":"https://blog.yanng.io/tags/%E6%9C%89%E7%97%85/"}]}